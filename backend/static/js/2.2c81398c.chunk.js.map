{"version":3,"sources":["../../../ReactReduxHR/src/redux/inventory/actions/inventory.js","../../../ReactReduxHR/src/redux/myProfile/actions/myProfile.js"],"names":["__webpack_require__","d","__webpack_exports__","addNewMachine","showTab","noTab","get_machines_detail","getDeviceById","updateDevice","deleteDevice","assignDevice","assignDeviceType","getDeviceType","assignDeviceStatus","getDeviceStatus","deleteDeviceStatus","deviceCount","addInventoryComment","unapprovedUser","addUserComment","approvedUser","unassignDeviceList","editDeviceData","getAuditList","redux_actions__WEBPACK_IMPORTED_MODULE_0__","_services_index__WEBPACK_IMPORTED_MODULE_1__","_services_notify__WEBPACK_IMPORTED_MODULE_2__","_redux_generic_actions_frontend__WEBPACK_IMPORTED_MODULE_3__","_redux_myProfile_actions_myProfile__WEBPACK_IMPORTED_MODULE_4__","_redux_constants__WEBPACK_IMPORTED_MODULE_5__","error_add_new_machine","data","createAction","constants","new_machine_details","dispatch","getState","n_machine_type","n_machine_name","n_machine_price","n_serial_no","n_purchase_date","n_operating_system","n_status","n_comment","n_warranty","n_warranty_comment","n_repair_comment","n_bill_no","n_user_Id","n_unassign_comment","n_option_warranty","machine_type","Promise","reject","machine_name","trim","machine_price","serial_no","purchase_date","operating_system","status","comment","warranty","warranty_comment","warranty_years","repair_comment","bill_no","user_Id","unassign_comment","resolve","show_loading","fireAjax","action","user_id","async_addNewMachine","then","json","hide_loading","error","message","type","payload","empty_device_list","success_getDevice","device_id","n_inventory_id","id","getAsync_getDeviceById","deviceId","mac_address","getAsync_updateDeviceById","res","userId","getAsync_deleteDeviceById","assign_device","n_user_id","inventory_id","machine_id","getAsync_assignDeviceToUser","error_deviceType","newDevice","deviceList","JSON","stringify","value","getAsync_assignDeviceType","list","parse","statusValue","colorValue","color","getAsync_assignDeviceStatus","checkValue","getAsync_deleteDeviceStatus","errorAddInventoryComment","add_inventory_comment","async_addInventoryComment","errorAddUserComment","addUserCommentDetails","notify","asyncAddUserComment","actionsMyProfile","getAsyncApprovedData","device","edit","open","successEditDeviceData","token","month","year","request","getAsyncAuditList","getMyProfileDetails","updateProfileDetails","updateBankDetails","updatePassword","getMyInventory","addInventoryAudit","_services_index__WEBPACK_IMPORTED_MODULE_3__","_redux_generic_actions_frontend__WEBPACK_IMPORTED_MODULE_5__","_services_generic__WEBPACK_IMPORTED_MODULE_6__","_redux_actions__WEBPACK_IMPORTED_MODULE_7__","_redux_constants__WEBPACK_IMPORTED_MODULE_8__","reslove","empty_my_profile","error_update_profile_details","new_profile_details","n_marital_status","n_dob","n_address1","n_address2","n_em_contact1","n_em_contact2","n_blood_group","n_medical_con","n_emp_email","marital_status","dob","address1","address2","emr_con_1","emr_con_2","blood_group","medical_con","emp_email","permanent_address","current_address","emergency_ph1","emergency_ph2","medical_condition","other_email","async_updateProfileDetails","error_update_bank_details","new_bank_details","n_bank_name","n_bank_address","n_bank_account_no","n_ifsc","bank_account_no","bank_name","bank_address","ifsc","includes","match","async_updateBankDetails","error_update_password","new_password","n_new_password","password","async_updatePassword","msg","showInventoryPending","audit_message","async_addInventoryAudit","new_token","getLoggedUser","tokenData","setLoggedUser","userDataUpdated","catch"],"mappings":"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","file":"static/js/2.2c81398c.chunk.js","sourcesContent":["import {createAction} from 'redux-actions';\nimport {fireAjax} from '../../../services/index';\nimport {notify} from '../../../services/notify'; \nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as actionsMyProfile from \"../../../redux/myProfile/actions/myProfile\";\nimport * as constants from '../../../redux/constants';\nimport { createInflate } from 'zlib';\n\nexport function success_add_new_machine (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_MACHINE)(data);\n}\n\nexport function error_add_new_machine (data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_MACHINE)(data);\n}\n\nfunction async_addNewMachine (\n  \n  n_machine_type,\n  n_machine_name,\n  n_machine_price,\n  n_serial_no,\n  n_purchase_date,\n  n_operating_system,\n  n_status,\n  n_comment,\n  n_warranty, \n  n_warranty_comment,\n  n_repair_comment,\n  n_bill_no,\n  n_user_Id,\n  n_unassign_comment,\n  n_option_warranty\n\n) {\n  return fireAjax('POST', '', {\n    'action':           'add_office_machine',\n    'machine_type':     n_machine_type,\n    'machine_name':     n_machine_name,\n    'machine_price':    n_machine_price,\n    'serial_no':        n_serial_no,\n    'purchase_date':    n_purchase_date,\n    'operating_system': n_operating_system, \n    'status':           n_status,\n    'comment':          n_comment,\n    'warranty':         n_warranty,\n    'warranty_comment': n_warranty_comment,\n    'repair_comment':   n_repair_comment,\n    'bill_no':          n_bill_no,\n    'user_id':          n_user_Id,\n    'unassign_comment': n_unassign_comment,\n    'warranty_years':n_option_warranty\n  });\n}\n\nexport function addNewMachine (new_machine_details) {\n  \n  return function (dispatch, getState) {\n    let n_machine_type = '';\n    let n_machine_name = '';\n    let n_machine_price = '';\n    let n_serial_no = '';\n    let n_purchase_date = '';\n    let n_operating_system = '';\n    let n_status = '';\n    let n_comment = '';\n    let n_warranty = '';\n    let n_warranty_comment = '';\n    let n_repair_comment = '';\n    let n_bill_no='';\n    let n_user_Id = '';\n    let n_unassign_comment='';\n    let n_option_warranty='';\n    \n\n    if (typeof new_machine_details.machine_type === 'undefined' || new_machine_details.machine_type === '') {\n      return Promise.reject('Machine Type is empty');\n    } else {\n      n_machine_type = new_machine_details.machine_type;\n    }\n\n    if (typeof new_machine_details.machine_name === 'undefined' || new_machine_details.machine_name.trim() === '') {\n      return Promise.reject('Machine Name is empty');\n    } else {\n      n_machine_name = new_machine_details.machine_name;\n    }\n\n    if (typeof new_machine_details.machine_price === 'undefined' || new_machine_details.machine_price.trim() === '') {\n      return Promise.reject('Machine Price is empty');\n    } else {\n      n_machine_price = new_machine_details.machine_price;\n    }\n\n    if (typeof new_machine_details.serial_no === 'undefined' || new_machine_details.serial_no.trim() === '') {\n      return Promise.reject('Serial Number is empty');\n    } else {\n      n_serial_no = new_machine_details.serial_no;\n    }\n\n    if (typeof new_machine_details.purchase_date === 'undefined' || new_machine_details.purchase_date === '') {\n      return Promise.reject('Date of Purchase is empty');\n    } else {\n      n_purchase_date = new_machine_details.purchase_date;\n    }\n    if (typeof new_machine_details.operating_system === 'undefined') {\n      return Promise.reject('Operating System is empty');\n    } else {\n      n_operating_system = new_machine_details.operating_system;\n    }\n\n    if (typeof new_machine_details.status === 'undefined' || new_machine_details.status === '') {\n      return Promise.reject('Status is empty');\n    } else {\n      n_status = new_machine_details.status;\n    }\n\n    if (typeof new_machine_details.comment === 'undefined') {\n      return Promise.reject('Comment is empty');\n    } else {\n      n_comment = new_machine_details.comment;\n    }\n\n    if (typeof new_machine_details.warranty === 'undefined' || new_machine_details.warranty === '') {\n      return Promise.reject('Warranty Expire Date is empty');\n    } else {\n      n_warranty = new_machine_details.warranty;\n    }\n\n    if (typeof new_machine_details.warranty_comment === 'undefined') {\n      return Promise.reject('Warranty Comment is empty');\n    } else {\n      n_warranty_comment = new_machine_details.warranty_comment;\n    }\n    if (typeof new_machine_details.warranty_years === 'undefined' || new_machine_details.warranty_years === '') {\n      return Promise.reject('select warranty expiry option');\n    } else {\n      n_option_warranty = new_machine_details.warranty_years;\n    }\n\n    if (typeof new_machine_details.repair_comment === 'undefined') {\n      return Promise.reject('Repair Comment is empty');\n    } else {\n      n_repair_comment = new_machine_details.repair_comment;\n    }\n      if (typeof new_machine_details.bill_no === 'undefined' || new_machine_details.bill_no.trim() === '') {\n        return Promise.reject('Excellenece No is empty');\n      } else {\n        n_bill_no = new_machine_details.bill_no;\n      }\n    \n    if (typeof new_machine_details.user_Id === 'undefined' || new_machine_details.user_Id === '') {\n      return Promise.reject('User Not Assign');\n    }else if(new_machine_details.user_Id=='unassign'){\n      n_user_Id=null;\n    }\n     else {\n      n_user_Id = new_machine_details.user_Id;\n    }\n\n    \n    \n    if(new_machine_details.user_Id=='unassign'){\n       if (typeof new_machine_details.unassign_comment === 'undefined' || new_machine_details.unassign_comment.trim() === '') {\n        return Promise.reject('unassign comment is empty');\n       }\n       else{\n        n_unassign_comment=new_machine_details.unassign_comment;\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_addNewMachine(n_machine_type,\n        n_machine_name,\n        n_machine_price,\n        n_serial_no,\n        n_purchase_date,\n        n_operating_system,\n        n_status,\n        n_comment,\n        n_warranty,\n        n_warranty_comment,\n        n_repair_comment,\n        n_bill_no,\n        n_user_Id,\n      n_unassign_comment,\n      n_option_warranty).then((json) => {\n          dispatch(hide_loading());\n          dispatch(deviceCount());\n          if (json.error === 0) {\n            dispatch(success_add_new_machine(json.message));\n            dispatch(get_machines_detail());\n            dispatch(unapprovedUser());\n            dispatch(showTab())\n            resolve(json.message);\n          } else {\n            dispatch(error_add_new_machine(json.message));\n            reject(json.message);\n          }\n        }, (error) => {\n          dispatch(hide_loading());\n          dispatch(error_add_new_machine('error occurs!!!'));\n          reject('error occurs!!!');\n        });\n    });\n  };\n}\nexport function showTab() {\n  return { type: \"ACTION_SHOW_TAB\", payload: true };\n}\nexport function noTab(){\n  return {type:\"ACTION_NO_TAB\", payload:false}\n}\n// Get Devicelist\n\nexport function success_device_list (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_LIST)(data);\n}\n\nexport function empty_device_list (data) {\n  return createAction(constants.ACTION_EMPTY_DEVICE_LIST)(data);\n}\n\nexport function error_device_list (data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_LIST)(data);\n}\n\nfunction async_get_AllDevice () {\n  return fireAjax('POST', '', {'action': 'get_machines_detail'});\n}\n\nexport function get_machines_detail () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_AllDevice().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_device_list(json.data));\n\n          resolve(json.data);\n        } else {\n          dispatch(empty_device_list([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_device_list([]));\n      });\n    });\n  };\n}\n\nexport function success_getDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICELIST)(data);\n}\n\nfunction getAsync_getDeviceById (n_inventory_id) {\n  return fireAjax('POST', '', {\n    'action': 'get_machine',\n    'id':     n_inventory_id\n  });\n}\n\nexport function getDeviceById (device_id) {\n  return (dispatch, getState) => {\n    let n_inventory_id = '';\n    \n    if (typeof device_id !== \"undefined\") {\n      n_inventory_id = device_id;\n    }\n    if (n_inventory_id.trim() === \"\") {\n      // return Promise.reject(\"inventory id is empty\");\n    }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      return getAsync_getDeviceById(n_inventory_id).then((json) => {\n        dispatch(hide_loading());\n        if (json.data) {\n          dispatch(success_getDevice(json.data));\n          dispatch(success_getDevice(json.data));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  }}\n\nexport function success_updateDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_DEVICELIST)(data);\n}\n\nfunction getAsync_updateDeviceById (deviceId, data) {\n  return fireAjax('POST', '', {\n    'action':           'update_office_machine',\n    'id':               deviceId,\n    'machine_type':     data.machine_type,\n    'machine_name':     data.machine_name,\n    'machine_price':    data.machine_price,\n    'serial_no':        data.serial_no,\n    'purchase_date':    data.purchase_date,\n    'mac_address':      data.mac_address,\n    'operating_system': data.operating_system,\n    'status':           data.status,\n    'comment':          data.comment,\n    'warranty':         data.warranty,\n    'warranty_comment': data.warranty_comment,\n    'repair_comment':   data.repair_comment,\n    'bill_no':          data.bill_no,\n    'user_id':          data.user_Id,\n    'unassign_comment': data.unassign_comment,\n    'warranty_years':data.warranty_years\n  });\n}\n\nexport function updateDevice (id, data) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_updateDeviceById(id, data).then((res) => {\n        dispatch(hide_loading());\n        if (res.error === 0) {\n          dispatch(deviceCount());\n          dispatch(get_machines_detail());\n          dispatch(unapprovedUser());\n          dispatch(success_updateDevice(res.message));\n          resolve(res.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function success_deleteDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_DELETE_DEVICELIST)(data);\n}\n\nfunction getAsync_deleteDeviceById (deviceId,userId) {\n  return fireAjax('POST', '', {\n    'action': 'remove_machine_detail',\n    'id':     deviceId,\n    'userId':     userId\n  });\n}\n\nexport function deleteDevice (id,userId) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_deleteDeviceById(id,userId).then((res) => {\n        dispatch(deviceCount());\n        dispatch(get_machines_detail());\n        dispatch(unapprovedUser());\n        dispatch(hide_loading());\n        if (res.error === 0) {\n          dispatch(success_deleteDevice(res.message));\n          resolve(res.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function success_assignDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_ASSIGN_DEVICE)(data);\n}\n\nexport function error_assignDevice (data) {\n  return createAction(constants.ACTION_ERROR_ASSIGN_DEVICE)(data);\n}\n\nfunction getAsync_assignDeviceToUser (n_inventory_id, n_user_id) {\n  return fireAjax('POST', '', {\n    'action':     'assign_user_machine',\n    'machine_id': n_inventory_id,\n    'user_id':    n_user_id\n  });\n}\n\nexport function assignDevice (assign_device) {\n  return (dispatch, getState) => {\n    let n_inventory_id = '';\n    let n_user_id = '';\n    \n    if (typeof assign_device.user_id !== \"undefined\") {\n      n_user_id = assign_device.user_id;\n    }\n    if (typeof assign_device.inventory_id !== \"undefined\") {\n      n_inventory_id = assign_device.inventory_id;\n    }\n    // if (n_user_id.trim() === \"\") {\n    //   return Promise.reject(\"User id is empty\");\n    // }\n    if (n_inventory_id.trim() === \"\") {\n      return Promise.reject(\"Inventory id is empty\");\n    }\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      dispatch(getDeviceById());\n      return getAsync_assignDeviceToUser(n_inventory_id, n_user_id).then((res) => {\n        dispatch(unapprovedUser());\n        dispatch(get_machines_detail());\n        dispatch(hide_loading());\n        resolve(res.message);// }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(error_assignDevice('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\nexport function success_deviceType (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_TYPE)(data);\n} \n\nexport function error_deviceType (data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_TYPE)(data);\n}\n\nfunction getAsync_assignDeviceType (deviceList) {\n  var newDevice = JSON.stringify(deviceList);\n\n  return fireAjax('POST', '', {\n    'action': 'add_machine_type',\n    'type':   'machine_type',\n    'value':  newDevice\n  });\n}\n\nexport function assignDeviceType (newDevice) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_assignDeviceType(newDevice).then((res) => {\n        dispatch(getDeviceType());\n        resolve(res);\n        dispatch(hide_loading());\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(error_deviceType('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\n// Device Type List\nexport function success_getDeviceType (data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICE_TYPE_LIST)(data);\n}\n\nfunction getAsync_getDeviceType () {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_type_list'\n  });\n}\n\nexport function getDeviceType () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_getDeviceType().then((res) => {\n        dispatch(hide_loading());\n        if (res.data) {\n          var list = JSON.parse(res.data.value);\n          resolve(list);\n          dispatch(success_getDeviceType(list));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n// Device Status---\n\nexport function success_deviceStatus (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_STATUS)(data);\n}\n\nexport function error_deviceStatus (data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_STATUS)(data);\n}\n\nfunction getAsync_assignDeviceStatus (statusValue, colorValue) {\n  // var statusNew = JSON.stringify(statusType)\n  // var colors = JSON.stringify(background)\n  return fireAjax('POST', '', {\n    'action': 'add_machine_status',\n    'type':   'machine_status',\n    'status': statusValue,\n    'color':  colorValue\n\n  });\n}\n\nexport function assignDeviceStatus (statusValue, colorValue) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_assignDeviceStatus(statusValue, colorValue).then((res) => {\n        // dispatch(getDeviceStatus())\n        resolve(res.data.message);\n        dispatch(hide_loading());\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(error_deviceType('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\nexport function success_getDeviceStatus (data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICE_STATUS_LIST)(data);\n}\n\nfunction getAsync_getDeviceStatus () {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_status_list'\n  });\n}\n\nexport function getDeviceStatus () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_getDeviceStatus().then((res) => {\n        dispatch(hide_loading());\n        resolve(res.data);\n        dispatch(success_getDeviceStatus(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function success_deleteDeviceStatus (data) {\n  return createAction(constants.ACTION_SUCCESS_DELETE_DEVICE_STATUS_LIST)(data);\n}\n\nfunction getAsync_deleteDeviceStatus (checkValue) {\n  return fireAjax('POST', '', {\n    'action': 'delete_machine_status',\n    'status': checkValue\n  });\n}\n\nexport function deleteDeviceStatus (checkValue) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_deleteDeviceStatus(checkValue).then((res) => {\n        dispatch(hide_loading());\n        resolve(res);\n        dispatch(success_deleteDeviceStatus(res));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function successDeviceCount (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_COUNT)(data);\n}\n\nfunction getAsyncDeviceCount () {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_count'\n  });\n}\n\nexport function deviceCount () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncDeviceCount().then((res) => {\n        dispatch(hide_loading());\n        resolve(res.data);\n        dispatch(successDeviceCount(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function successAddInventoryComment (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_INVENTORY_COMMENT)(data);\n}\n\nexport function errorAddInventoryComment (data) {\n  return createAction(constants.ACTION_ERROR_ADD_INVENTORY_COMMENT)(data);\n}\n\nfunction async_addInventoryComment ( n_comment, n_inventory_id) {\n  return fireAjax('POST', '', {\n    'action':         'add_inventory_comment',\n    'comment':        n_comment,\n    'inventory_id':   n_inventory_id\n  });\n}\n\nexport function addInventoryComment (add_inventory_comment) {\n  return function (dispatch, getState) {\n    let n_comment = '';\n    let n_inventory_id = '';\n    \n    if (typeof add_inventory_comment.comment !== \"undefined\") {\n      n_comment = add_inventory_comment.comment;\n    }\n    if (typeof add_inventory_comment.inventory_id !== \"undefined\") {\n      n_inventory_id = add_inventory_comment.inventory_id;\n    }\n    if (n_comment.trim() === \"\") {\n      return Promise.reject(\"Comment is empty\");\n    }\n    if (n_inventory_id.trim() === \"\") {\n      return Promise.reject(\"inventory id is empty\");\n    }\n    return new Promise((resolve, reject) => {\n      async_addInventoryComment(n_comment,n_inventory_id).then((res) => {\n          if (res.error === 0) {\n            dispatch(successAddInventoryComment(res.message));\n            resolve(res.message);\n          } else {\n            dispatch(errorAddInventoryComment(res.message));\n          }\n        }, (error) => {\n          dispatch(errorAddInventoryComment('error occurs!!!'));\n        });\n    });\n  };\n}\n\nexport function successUnapprovedList (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_UNAPPROVED_USER)(data);\n}\n\nfunction getAsyncUnapprovedData(dataLogin){\n  return fireAjax('POST','',{\n    'action':'get_unapproved_inventories'\n  });\n}\n\nexport function unapprovedUser () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncUnapprovedData().then((res) => {\n        dispatch(hide_loading());\n        resolve(res);\n        dispatch(successUnapprovedList(res));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n    })\n    })\n  }\n}\n\nexport function errorAddUserComment (data) {\n  return createAction(constants.ACTION_ERROR_ADD_USER_COMMENT)(data);\n}\n\nexport function successAddUserComment (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_USER_COMMENT)(data);\n}\n\nfunction asyncAddUserComment (n_comment, n_inventory_id){\n  return fireAjax('POST', '', {\n    'action':       'unassigned_my_inventory',\n    'comment':      n_comment,\n    'inventory_id':      n_inventory_id,\n  });\n}\n\nexport function addUserComment (addUserCommentDetails) {\n  return (dispatch, getState) => {\n\n    let n_comment = '';\n    let n_inventory_id = '';\n    if (typeof addUserCommentDetails.comment !== \"undefined\") {\n      n_comment = addUserCommentDetails.comment;\n    }\n    if (typeof addUserCommentDetails.inventory_id !== \"undefined\") {\n      n_inventory_id = addUserCommentDetails.inventory_id;\n    }\n    if (n_comment.trim() === \"\") {\n      notify('Warning!','Comment is empty','warning');\n      return Promise.reject(\"Comment is empty\");\n    }\n    if (n_inventory_id.trim() === \"\") {\n      notify('Warning!','Inventory id is empty','warning');\n      return Promise.reject(\"inventory id is empty\");\n    }\n\n    return new Promise(function (resolve, reject){\n      dispatch(show_loading());\n      return asyncAddUserComment(n_comment, n_inventory_id).then((json) => {\n        dispatch(hide_loading());\n        if(json.error==0){\n          dispatch(successAddUserComment(json.message));\n          notify('Success !','Comment added to unassign device','success');\n          dispatch(actionsMyProfile.getMyInventory());\n        }else{\n          dispatch(errorAddUserComment(json.message))\n          notify('Error !',json.message,'error');\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorAddUserComment('error occurs!!!'));\n        notify('Error !',error,'error');\n      });\n    });\n  };\n}\n\nexport function errorApprovedList(data){\n  return createAction(constants.ACTION_ERROR_UPDATE_APPROVED_USER)\n}\nexport function successApprovedList (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_APPROVED_USER)(data);\n}\n\nfunction getAsyncApprovedData(id){\n  return fireAjax('POST','',{\n    'action':'approve_machine',\n    id\n  });\n}\n\nexport function approvedUser (id) {\n  return (dispatch, getState) => {\n    \n    if(typeof id==='undefined'|| id==''){\n      return Promise.reject('id is empty') \n    }\n    else{\n      id=id;\n    }\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncApprovedData(id).then((json) => {\n        dispatch(hide_loading());\n        if(json.error==0){\n          dispatch(successApprovedList(json.message));\n          dispatch(unapprovedUser());\n          dispatch(get_machines_detail());\n        }else{\n          dispatch(errorApprovedList(json.message));\n        }\n    },(error) => {\n      // dispatch(errorAddusercomment('error occur'));\n      reject('error occur');\n    })\n  })\n}\n}\n\nexport function successUnassignedDeviceList (data) {\n  return createAction(constants.ACTION_SUCCESS_UNASSIGNED_DEVICE_LIST)(data);\n}\n\nfunction getAsyncUnassignDeviceList () {\n  return fireAjax('POST','',{\n    'action': 'get_unassigned_inventories'\n  });\n}\n\nexport function unassignDeviceList () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncUnassignDeviceList().then((res) => {\n        dispatch(hide_loading());\n        dispatch(successUnassignedDeviceList(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function successEditDeviceData (device,edit,open) {\n  return createAction(constants.ACTION_SUCCESS_EDIT_WITHOUT_API)({device,edit,open});\n}\n\nexport function editDeviceData (device,edit,open) {\n  return (dispatch, getState) => {\n    dispatch(successEditDeviceData(device,edit,open));\n  };\n}\n\nexport function successAuditList (data) {\n  return createAction(constants.ACTION_SUCCESS_AUDIT_LIST)(data);\n}\nexport function errorAuditList (data) {\n  return createAction(constants.ACTION_ERROR_AUDIT_LIST)(data);\n}\n\nfunction getAsyncAuditList (token, month, year) {\n  return fireAjax('POST','',{\n    'token': token,\n    'request': 'POST', \n    'action': 'get_inventory_audit_status_month_wise',\n    'month': month,\n    'year': year\n  });\n}\n\nexport function getAuditList(token, month, year){\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncAuditList(token, month, year).then((res) => {\n        dispatch(hide_loading());\n        dispatch(successAuditList(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\n\n","import {createAction} from 'redux-actions';\nimport _ from 'lodash';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport {confirm} from '../../../services/notify';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport {setLoggedUser, getLoggedUser} from '../../../services/generic';\nimport {userDataUpdated, showInventoryPending} from '../../../redux/actions';\nimport * as constants from '../../../redux/constants';\n\nexport function success_my_profile (data) {\n  return createAction(constants.ACTION_SUCCESS_MY_PROFILE)(data);\n}\nexport function empty_my_profile (data) {\n  return createAction(constants.ACTION_EMPTY_MY_PROFILE)(data);\n}\nexport function error_my_profile (data) {\n  return createAction(constants.ACTION_ERROR_MY_PROFILE)(data);\n}\n\nfunction async_getMyProfileDetails () {\n  return fireAjax('POST', '', {'action': 'get_user_profile_detail'});\n}\n\nexport function getMyProfileDetails () {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getMyProfileDetails().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_my_profile(json.data));\n        } else {\n          dispatch(empty_my_profile(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_my_profile('error occurs!!!'));\n      });\n    });\n  };\n}\n// -------update profile details\n\nexport function success_update_profile_details (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PROFILE_DETAILS)(data);\n}\nexport function error_update_profile_details (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateProfileDetails (n_marital_status, n_dob, n_address1, n_address2, n_em_contact1, n_em_contact2, n_blood_group, n_medical_con, n_emp_email) {\n  return fireAjax('POST', '', {\n    'action':            'update_user_profile_detail',\n    'permanent_address': n_address2,\n    'current_address':   n_address1,\n    'emergency_ph1':     n_em_contact1,\n    'emergency_ph2':     n_em_contact2,\n    'blood_group':       n_blood_group,\n    'medical_condition': n_medical_con,\n    'dob':               n_dob,\n    'marital_status':    n_marital_status,\n    'other_email':       n_emp_email\n  });\n}\n\nexport function updateProfileDetails (new_profile_details) {\n  return function (dispatch, getState) {\n    let n_marital_status = '';\n    let n_dob = '';\n    let n_address1 = '';\n    let n_address2 = '';\n    let n_em_contact1 = '';\n    let n_em_contact2 = '';\n    let n_blood_group = '';\n    let n_medical_con = '';\n    let n_emp_email = '';\n\n    if (typeof new_profile_details.marital_status !== 'undefined') {\n      n_marital_status = new_profile_details.marital_status;\n    }\n    if (typeof new_profile_details.dob !== 'undefined') {\n      n_dob = new_profile_details.dob;\n    }\n    if (typeof new_profile_details.address1 !== 'undefined') {\n      n_address1 = new_profile_details.address1;\n    }\n    if (typeof new_profile_details.address2 !== 'undefined') {\n      n_address2 = new_profile_details.address2;\n    }\n    if (typeof new_profile_details.emr_con_1 !== 'undefined') {\n      n_em_contact1 = new_profile_details.emr_con_1;\n    }\n    if (typeof new_profile_details.emr_con_2 !== 'undefined') {\n      n_em_contact2 = new_profile_details.emr_con_2;\n    }\n    if (typeof new_profile_details.blood_group !== 'undefined') {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_con !== 'undefined') {\n      n_medical_con = new_profile_details.medical_con;\n    }\n\n    if (typeof new_profile_details.emp_email !== 'undefined') {\n      n_emp_email = new_profile_details.emp_email;\n    }\n\n    if (n_marital_status.trim() === '') {\n      return Promise.reject('Marital status is empty');\n    }\n    if (n_dob.trim() === '') {\n      return Promise.reject('Date of birth is empty');\n    }\n    if (n_address1.trim() === '') {\n      return Promise.reject('Current address is empty');\n    }\n    if (n_address2.trim() === '') {\n      return Promise.reject('Permanent address is empty');\n    }\n    if (n_em_contact1.trim() === '') {\n      return Promise.reject('Emmergency contact 1 is empty');\n    }\n    if (n_em_contact2.trim() === '') {\n      return Promise.reject('Emmergency contact 2 is empty');\n    }\n    if (n_blood_group.trim() === '') {\n      return Promise.reject('Blood group not selected');\n    }\n    if (n_medical_con.trim() === '') {\n      return Promise.reject('Any medical conditions is empty');\n    }\n\n    if (n_emp_email.trim() === '') {\n      return Promise.reject('Personal email is empty');\n    }\n\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateProfileDetails(\n        n_marital_status,\n        n_dob, n_address1,\n        n_address2,\n        n_em_contact1,\n         n_em_contact2,\n        n_blood_group,\n        n_medical_con,\n       n_emp_email\n      ).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_profile_details(json.data.message));\n        } else {\n          dispatch(error_update_profile_details(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_profile_details('error occurs!!!'));\n      });\n    });\n  };\n}\n\n// -------update bank details\n\nexport function success_update_bank_details (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_BANK_DETAILS)(data);\n}\nexport function error_update_bank_details (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_BANK_DETAILS)(data);\n}\n\nfunction async_updateBankDetails (n_bank_account_no, n_bank_name, n_bank_address, n_ifsc) {\n  return fireAjax('POST', '', {\n    'action':          'update_user_bank_detail',\n    'bank_account_no': n_bank_account_no,\n    'bank_name':       n_bank_name,\n    'bank_address':    n_bank_address,\n    'ifsc':            n_ifsc\n  });\n}\n\nexport function updateBankDetails (new_bank_details) {\n  return function (dispatch, getState) {\n    let n_bank_name = '';\n    let n_bank_address = '';\n    let n_bank_account_no = '';\n    let n_ifsc = '';\n\n    if (typeof new_bank_details.bank_account_no !== 'undefined') {\n      n_bank_account_no = new_bank_details.bank_account_no;\n    }\n    if (typeof new_bank_details.bank_name !== 'undefined') {\n      n_bank_name = new_bank_details.bank_name;\n    }\n    if (typeof new_bank_details.bank_address !== 'undefined') {\n      n_bank_address = new_bank_details.bank_address;\n    }\n    if (typeof new_bank_details.ifsc !== 'undefined') {\n      n_ifsc = new_bank_details.ifsc;\n    }\n    if (n_bank_account_no === '') {\n      return Promise.reject('Account number is empty');\n    }\n    if (n_bank_name === '') {\n      return Promise.reject('Bank name is empty');\n    }\n    if(!n_bank_name.includes(\"ICICI\")){\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    }\n    if (n_bank_address === '') {\n      return Promise.reject('Bank address is empty');\n    }\n    if (n_ifsc === '') {\n      return Promise.reject('IFSC is empty');\n    }\n    const ifscRegex = /(ICIC)0[A-Z0-9]{6}$/;\n    if(!n_ifsc.includes(\"ICIC\")){\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    }\n   else if(!n_ifsc.match(ifscRegex)){\n      return Promise.reject('ICICI IFSC code you have entered is not valid. \\n Please enter valid ICICI IFSC code. ');\n    }\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateBankDetails(n_bank_account_no, n_bank_name, n_bank_address, n_ifsc).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_bank_details(json.data.message));\n        } else {\n          dispatch(error_update_bank_details(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_bank_details('error occurs!!!'));\n      });\n    });\n  };\n}\n\n// -------update password\n\nexport function success_update_password (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PASSWORD)(data);\n}\nexport function error_update_password (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PASSWORD)(data);\n}\n\nfunction async_updatePassword (n_new_password) {\n  return fireAjax('POST', '', {\n    'action':   'update_new_password',\n    'password': n_new_password\n  });\n}\n\nexport function updatePassword (new_password) {\n  return function (dispatch, getState) {\n    let n_new_password = '';\n\n    if (typeof new_password !== 'undefined' && new_password != '') {\n      n_new_password = new_password;\n    }\n\n    if (n_new_password === '') {\n      return Promise.reject('New Password is empty!!');\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updatePassword(n_new_password).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          dispatch(success_update_password(json.data.message));\n          resolve(json.data.message);\n        } else {\n          dispatch(error_update_password(json.data.message));\n          reject(json.data.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_password('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\n// ------update document\nfunction async_updateDocument (document_type, document_link, declearation) {\n  let data = {\n    'action':        'insert_user_document',\n    'document_type': document_type,\n    'document_link': document_link,\n    'declearation':  declearation\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function updateDocument (documents_link) {\n  return function (dispatch, getState) {\n    let document_type = '';\n    let document_link = '';\n    let declearation = documents_link.declearation;\n\n    if (typeof documents_link.doc_type === 'undefined' || documents_link.doc_type == '') {\n      return Promise.reject('Select document type');\n    } else {\n      document_type = documents_link.doc_type;\n    }\n    if (typeof documents_link.doc_link === 'undefined' || documents_link.doc_link.length == 0) {\n      return Promise.reject('Enter document link');\n    } else {\n      document_link = documents_link.doc_link;\n    }\n    return new Promise((resolve, reject) => {\n      _.map(document_link, (link) => {\n        async_updateDocument(document_type, link, declearation).then((json) => {\n          if (json.error == 0) {\n            resolve('Document updated successfully');\n          } else {\n            reject('Response with error 1');\n          }\n        }, (error) => {\n          reject('error occurs!!!');\n        });\n      });\n    });\n  };\n}\n\nfunction async_getMyInventory () {\n  return fireAjax('POST', '', {'action': \"get_my_inventories\"});\n}\n\nexport function getMyInventory () {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getMyInventory().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch({type : \"ACTION_GET_MY_INVENTORY\",payload:json.data});\n        } \n      });\n    });\n  };\n}\n\nfunction async_addInventoryAudit (id, message) {\n  let data = {\n    'action': 'add_inventory_audit',\n    'inventory_id': id,\n    'audit_message': message\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function addInventoryAudit (id, msg) {\n  return function (dispatch, getState) { \n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      dispatch(showInventoryPending(false))\n      async_addInventoryAudit(id, msg).then((json) => {\n        if(json.data && json.data.new_token){\n          let {userId} = getLoggedUser();\n          let tokenData = setLoggedUser(json.data.new_token, userId);\n          dispatch(userDataUpdated(tokenData));\n        }\n        dispatch(hide_loading()); // hide loading icon\n        reslove(json)\n      }).catch(()=>{\n        dispatch(showInventoryPending(true));\n        reject()\n      })\n    });\n  };\n}"],"sourceRoot":""}