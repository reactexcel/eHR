{"version":3,"sources":["modules/attendance/components/uploadAttendance/AttendanceSheatForm.jsx","modules/attendance/containers/uploadAttendance.jsx","redux/manageUsers/actions/manageUsers.js","components/generic/AlertNotification.jsx","redux/salary/actions/managePayslips.js"],"names":["AttendanceSheatForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user_id","open","doc_type","styles","_","cloneDeep","constructor","react_default","a","createElement","action","CONFIG","upload_attendance_url","method","encType","className","type","name","value","getToken","style","file","required","React","Component","padding","border","marginBottom","borderRadius","UploadAttendance","onIsAlreadyLogin","handleSubmit","bind","assertThisInitialized","onUsersList","window","scrollTo","isNotValid","isNotUserValid","location","pathname","loggedUser","status","history","push","redirectTo","setState","openIframe","AlertNotification","message","manageUsers","status_message","Menu","id","role","Header","pageTitle","showLoading","frontend","show_loading","onClick","VisibleUploadAttendance","connect","toJS","managePayslips","logged_user","userLogin","usersList","dispatch","actions","actionsUsersList","onUserProfileDetails","userid","username","actionsManageUsers","onUpdateUserBankDetails","newBankDetails","onUpdateUserProfileDetails","newProfileDetails","onAddNewEmployee","newEmployeeDetails","onUpdatedocuments","documentLink","onChangeEmployeeStatus","onGetUserDocument","onDeleteDocument","docId","onUserManagePayslipsData","actionsManagePayslips","RouterVisibleUploadAttendance","withRouter","__webpack_require__","d","__webpack_exports__","getUserProfileDetails","updateUserProfileDetails","addNewEmployee","getUserDocument","deleteDocument","changeEmployeeStatus","getSteps","changeSteps","addNewUserDetails","getAllEmployeeDetails","redux_actions__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","async_queue__WEBPACK_IMPORTED_MODULE_2__","async_queue__WEBPACK_IMPORTED_MODULE_2___default","n","_services_index__WEBPACK_IMPORTED_MODULE_3__","_redux_generic_actions_frontend__WEBPACK_IMPORTED_MODULE_4__","_redux_constants__WEBPACK_IMPORTED_MODULE_5__","moment","require","getState","Promise","resolve","reject","fireAjax","async_getUserProfileDetails","then","json","data","hide_loading","error","constants","payload","success_user_profile","createAction","error_update_user_profile_details","new_profile_details","n_user_id","n_name","n_jobtitle","n_team","n_dateofjoining","n_work_email","n_other_email","n_gender","n_dob","n_marital_status","n_address1","n_address2","n_emergency_ph1","n_emergency_ph2","n_blood_group","n_medical_condition","n_send_slack_msg","send_slack_msg","n_slack_msg","slack_msg","n_training_completion_date","n_termination_date","n_holding_comments","n_training_month","jobtitle","team","dateofjoining","training_month","work_email","other_email","gender","dob","mydate","Date","format","marital_status","address1","address2","emergency_ph1","emergency_ph2","blood_group","medical_condition","training_completion_date","termination_date","holding_comments","trim","permanent_address","current_address","async_updateUserProfileDetails","error_add_new_employee","new_employee_details","n_username","n_workemail","workemail","async_addNewEmployee","error_user_document","async_getUserDocument","doc_id","async_deleteDocument","async_changeEmployeeStatus","successGetStep","errorGetStep","queue","callback","asyncGetSteps","stepid","asyncChangeSteps","errorAddNewUserDetails","n_signature","signature","async_addNewUserDetails","res","successGetAllEmployeeDetails","length","getEmployeesSalaryDetails","users","i","arguments","undefined","user_Id","async_get_user_salary_details","salary_details","orderedSalary","current_salary","test","total_salary","console","log","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","lodash__WEBPACK_IMPORTED_MODULE_1___default","material_ui_Snackbar__WEBPACK_IMPORTED_MODULE_2__","material_ui_Snackbar__WEBPACK_IMPORTED_MODULE_2___default","_ref","showAlert","handleRequestClose","alertMessage","isEmpty","autoHideDuration","get_user_manage_payslips_data","get_user_month_manage_payslips_data","create_arrear","create_user_payslip","email_payslips","save_google_access_token","getTransferList","success_user_manage_payslips_data","error_user_manage_payslips_data","async_get_user_manage_payslips_data","year","month","async_get_user_month_manage_payslips_data","extraA","arrearMonth","extra_arrear","arrear_for_month","async_create_arrear","error_create_user_salary_slip","new_salary_slip_data","n_userid","n_year","n_month","n_designation","n_joining_date","n_total_working_days","n_days_present","n_paid_leaves","n_unpaid_leaves","n_total_leave_taken","n_allocated_leaves","n_leave_balance","n_final_leave_balance","n_basic","n_epf","n_hra","n_loan","n_conveyance","n_advance","n_medical_allowance","n_misc_deduction","n_misc_deduction_2","n_special_allowance","n_tds","n_arrear","n_bonus","n_total_earning","n_total_deduction","n_net_salary","n_send_email","n_key","designation","joining_date","total_working_days","days_present","paid_leaves","unpaid_leaves","total_leave_taken","allocated_leaves","leave_balance","final_leave_balance","basic","epf","hra","loan","conveyance","advance","medical_allowance","misc_deduction","misc_deduction_2","special_allowance","tds","arrear","bonus","total_earning","total_deduction","net_salary","send_email_only","send_slack_message","key","send_email","loyalty_bonus","async_create_user_payslip","error_email_payslips","payslips_ids","payslip_ids","async_email_payslips","error_save_google_access_token","accessToken","google_access_token","async_save_google_access_token","error_get_transfer_list","userIds","async_getTransferList"],"mappings":"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","file":"static/js/32.1f395f9c.chunk.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {CONFIG} from '../../../../config/index';\nimport {getToken} from '../../../../services/generic';\n\nclass AttendanceSheatForm extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      user_id:  '',\n      open:     false,\n      doc_type: ''\n    };\n  }\n  render () {\n    let styles = _.cloneDeep(this.constructor.styles);\n    return (\n      <div>\n        <div>\n          <form action={CONFIG.upload_attendance_url} method=\"POST\" encType=\"multipart/form-data\">\n            <div className=\"form-group\">\n              <input type=\"hidden\" name=\"token\" value={getToken()} />\n              <div style={styles.file}>\n                <input type=\"file\" name=\"image\" required />\n              </div>\n              <input type=\"submit\" name=\"submit\" value=\"Upload\" className=\"col-xs-12 md-btn md-raised indigo\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAttendanceSheatForm.styles = {\n  file: {\n    padding:      '20px',\n    border:       '1px solid rgba(128, 128, 128, 0.32)',\n    marginBottom: '12px',\n    borderRadius: '5px'\n  }\n};\n\nexport default AttendanceSheatForm;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport {CONFIG} from '../../../config/index';\nimport {isNotUserValid} from '../../../services/generic';\nimport AlertNotification from '../../../components/generic/AlertNotification';\nimport Header from '../../../components/generic/Header';\nimport AttendanceSheatForm from '../../../modules/attendance/components/uploadAttendance/AttendanceSheatForm';\nimport * as actions from '../../../redux/actions';\nimport * as actionsUsersList from '../../../redux/generic/actions/usersList';\nimport * as actionsManageUsers from '../../../redux/manageUsers/actions/manageUsers';\nimport * as actionsManagePayslips from '../../../redux/salary/actions/managePayslips';\n\nclass UploadAttendance extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentWillMount () {\n    this.props.onUsersList();\n  }\n  componentWillReceiveProps (props) {\n    window.scrollTo(0, 0);\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n  }\n  handleSubmit() {\n    window.open(CONFIG.upload_attendance_url)\n  }\n  handleOpenIframe () {\n    this.setState({openIframe: true});\n  }\n\n  handleCloseIframe () {\n    this.setState({openIframe: false});\n  }\n  render () {\n    return (\n      <div>\n        <AlertNotification message={this.props.manageUsers.status_message} />\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'UPLOAD ATTENDANCE SHEET'}\n            showLoading={this.props.frontend.show_loading}\n            />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-10 p\">\n                    <input type=\"button\" onClick={this.handleSubmit} name=\"submit\" value=\"CLICK TO UPLOAD ATTENDANCE\" className=\"col-xs-4 md-btn md-raised indigo\" />\n                 {/* <AttendanceSheatForm\n                    user_documents={this.state.user_documents}\n                    onUpdatedocuments={this.props.onUpdatedocuments}\n                    {...this.props}\n                    /> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:       state.frontend.toJS(),\n    managePayslips: state.managePayslips.toJS(),\n    loggedUser:     state.logged_user.userLogin,\n    usersList:      state.usersList.toJS(),\n    manageUsers:    state.manageUsers.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: () => {\n      return dispatch(actionsUsersList.get_users_list());\n    },\n    onUserProfileDetails: (userid, username) => {\n      return dispatch(actionsManageUsers.getUserProfileDetails(userid, username));\n    },\n    onUpdateUserBankDetails: (newBankDetails) => {\n      // return dispatch(actionsManageUsers.updateUserBankDetails(newBankDetails));\n    },\n    onUpdateUserProfileDetails: (newProfileDetails) => {\n      return dispatch(actionsManageUsers.updateUserProfileDetails(newProfileDetails));\n    },\n    onAddNewEmployee: (newEmployeeDetails) => {\n      return dispatch(actionsManageUsers.addNewEmployee(newEmployeeDetails));\n    },\n    onUpdatedocuments: (documentLink) => {\n      // return dispatch(actionsManageUsers.updateDocument(documentLink));\n    },\n    onChangeEmployeeStatus: (userid, status) => {\n      return dispatch(actionsManageUsers.changeEmployeeStatus(userid, status));\n    },\n    onGetUserDocument: (userid) => {\n      return dispatch(actionsManageUsers.getUserDocument(userid));\n    },\n    onDeleteDocument: (docId) => {\n      return dispatch(actionsManageUsers.deleteDocument(docId));\n    },\n    onUserManagePayslipsData: (userid) => {\n      return dispatch(actionsManagePayslips.get_user_manage_payslips_data(userid));\n    }\n  };\n};\n\nconst VisibleUploadAttendance = connect(mapStateToProps, mapDispatchToProps)(UploadAttendance);\n\nconst RouterVisibleUploadAttendance = withRouter(VisibleUploadAttendance);\n\nexport default RouterVisibleUploadAttendance;\n","import { createAction } from \"redux-actions\";\nimport * as _ from \"lodash\";\nimport queue from \"async/queue\";\n\nimport { fireAjax } from \"../../../services/index\";\nimport { show_loading, hide_loading } from \"../../../redux/generic/actions/frontend\";\nimport * as constants from \"../../../redux/constants\";\nimport { func } from \"prop-types\";\nvar moment = require(\"moment\");\n\nexport function success_user_profile(data, username) {\n  return {\n    type: constants.ACTION_SUCCESS_USER_PROFILE,\n    payload: data,\n    username: username\n  };\n}\nexport function empty_user_profile(data) {\n  return createAction(constants.ACTION_EMPTY_USER_PROFILE)(data);\n}\nexport function error_user_profile(data) {\n  return createAction(constants.ACTION_ERROR_USER_PROFILE)(data);\n}\n\nfunction async_getUserProfileDetails(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_profile_detail_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserProfileDetails(userid, username) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getUserProfileDetails(userid).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(success_user_profile(json.data, username));\n          } else {\n            dispatch(empty_user_profile(json.data.message));\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_user_profile(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\n// -------update profile details\n\nexport function success_update_user_profile_details(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_USER_PROFILE_DETAILS)(\n    data\n  );\n}\nexport function error_update_user_profile_details(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_USER_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateUserProfileDetails(\n  n_user_id,\n  n_name,\n  n_jobtitle,\n  n_team,\n  n_dateofjoining,\n  n_work_email,\n  n_other_email,\n  n_gender,\n  n_dob,\n  n_marital_status,\n  n_address1,\n  n_address2,\n  n_emergency_ph1,\n  n_emergency_ph2,\n  n_blood_group,\n  n_medical_condition,\n  n_training_completion_date,\n  n_termination_date,\n  n_holding_comments,\n  n_training_month,\n  n_send_slack_msg,\n  n_slack_msg\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    marital_status: n_marital_status,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    team: n_team,\n    dateofjoining: n_dateofjoining,\n    work_email: n_work_email,\n    other_email: n_other_email,\n    gender: n_gender,\n    dob: n_dob,\n    permanent_address: n_address2,\n    current_address: n_address1,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    training_completion_date: n_training_completion_date,\n    termination_date: n_termination_date,\n    training_month: n_training_month,\n    holding_comments: n_holding_comments,\n    send_slack_msg: n_send_slack_msg,\n    slack_msg: n_slack_msg\n  });\n}\n\nexport function updateUserProfileDetails(new_profile_details) {\n  return function(dispatch, getState) {\n    let n_user_id = \"\";\n    let n_name = \"\";\n    let n_jobtitle = \"\";\n    let n_team = \"\";\n    let n_dateofjoining = \"\";\n    let n_work_email = \"\";\n    let n_other_email = \"\";\n    let n_gender = \"\";\n    let n_dob = \"\";\n    let n_marital_status = \"\";\n    let n_address1 = \"\";\n    let n_address2 = \"\";\n    let n_emergency_ph1 = \"\";\n    let n_emergency_ph2 = \"\";\n    let n_blood_group = \"\";\n    let n_medical_condition = \"\";\n    let n_send_slack_msg = new_profile_details.send_slack_msg;\n    let n_slack_msg = new_profile_details.slack_msg;\n    let n_training_completion_date = \"\";\n    let n_termination_date = \"\";\n    let n_holding_comments = \"\";\n    let n_training_month = \"\";\n\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n    if (typeof new_profile_details.name !== \"undefined\") {\n      n_name = new_profile_details.name;\n    }\n    if (typeof new_profile_details.jobtitle !== \"undefined\") {\n      n_jobtitle = new_profile_details.jobtitle;\n    }\n    if (typeof new_profile_details.team !== \"undefined\") {\n      n_team = new_profile_details.team;\n    }\n    if (\n      typeof new_profile_details.dateofjoining !== \"undefined\" &&\n      new_profile_details.dateofjoining != null\n    ) {\n      n_dateofjoining = new_profile_details.dateofjoining;\n    }\n\n    if (\n      typeof new_profile_details.training_month !== \"undefined\" &&\n      new_profile_details.training_month != null\n    ) {\n      n_training_month = new_profile_details.training_month;\n    }\n\n    if (typeof new_profile_details.work_email !== \"undefined\") {\n      n_work_email = new_profile_details.work_email;\n    }\n    if (typeof new_profile_details.other_email !== \"undefined\") {\n      n_other_email = new_profile_details.other_email;\n    }\n    if (typeof new_profile_details.gender !== \"undefined\") {\n      n_gender = new_profile_details.gender;\n    }\n    if (\n      typeof new_profile_details.dob !== \"undefined\" &&\n      new_profile_details.dob != null\n    ) {\n      var mydate = new Date(new_profile_details.dob);\n      if (mydate) {\n        n_dob = moment(mydate).format(\"YYYY-MM-DD\");\n      }\n    }\n\n    if (typeof new_profile_details.marital_status !== \"undefined\") {\n      n_marital_status = new_profile_details.marital_status;\n    }\n\n    if (typeof new_profile_details.address1 !== \"undefined\") {\n      n_address1 = new_profile_details.address1;\n    }\n    if (typeof new_profile_details.address2 !== \"undefined\") {\n      n_address2 = new_profile_details.address2;\n    }\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n    if (\n      typeof new_profile_details.training_completion_date !== \"undefined\" &&\n      new_profile_details.training_completion_date != null\n    ) {\n      n_training_completion_date = new_profile_details.training_completion_date;\n    }\n    if (\n      typeof new_profile_details.termination_date !== \"undefined\" &&\n      new_profile_details.termination_date != null\n    ) {\n      n_termination_date = new_profile_details.termination_date;\n    }\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n    if (n_name.trim() === \"\") {\n      return Promise.reject(\"Name is empty\");\n    }\n    if (n_jobtitle.trim() === \"\") {\n      return Promise.reject(\"Jobtitle is empty\");\n    }\n    if (n_dateofjoining.trim() === \"\") {\n      return Promise.reject(\"Joining date is empty\");\n    }\n    if (n_work_email.trim() === \"\") {\n      return Promise.reject(\"Work email is empty\");\n    }\n    if (n_other_email.trim() === \"\") {\n      return Promise.reject(\"Personal email is empty\");\n    }\n    if (n_gender.trim() === \"\") {\n      return Promise.reject(\"Gender is empty\");\n    }\n    if (n_dob.trim() === \"\") {\n      return Promise.reject(\"Date of birth is empty\");\n    }\n    if (n_marital_status.trim() === \"\") {\n      return Promise.reject(\"Marital status not selected\");\n    }\n    if (n_address1.trim() === \"\") {\n      return Promise.reject(\"Current address is empty\");\n    }\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n\n    if (n_training_month.trim() === \"\") {\n      return Promise.reject(\"Training month is Empty\");\n    }\n    // if (n_training_completion_date.trim() === \"\") {\n    //   return Promise.reject('Training Completion Date  is empty')\n    // }\n    // if (n_termination_date.trim() === \"\") {\n    //   return Promise.reject('Termination date empty')\n    // }\n    // if (n_holding_comments.trim() === \"\") {\n    //   return Promise.reject('Holding amount comment is empty')\n    // }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateUserProfileDetails(\n        n_user_id,\n        n_name,\n        n_jobtitle,\n        n_team,\n        n_dateofjoining,\n        n_work_email,\n        n_other_email,\n        n_gender,\n        n_dob,\n        n_marital_status,\n        n_address1,\n        n_address2,\n        n_emergency_ph1,\n        n_emergency_ph2,\n        n_blood_group,\n        n_medical_condition,\n        n_training_completion_date,\n        n_termination_date,\n        n_holding_comments,\n        n_training_month,\n        n_send_slack_msg,\n        n_slack_msg\n      ).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(getUserProfileDetails(n_user_id));\n            dispatch(success_update_user_profile_details(json.data.message));\n          } else {\n            dispatch(error_update_user_profile_details(json.data.message));\n            reject(json.data)\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_update_user_profile_details(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\n// -------add New employee\n\nexport function success_add_new_employee(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_EMPLOYEE)(data);\n}\n\nexport function error_add_new_employee(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_EMPLOYEE)(data);\n}\n\nfunction async_addNewEmployee(\n  n_dateofjoining,\n  n_name,\n  n_jobtitle,\n  n_gender,\n  n_dob,\n  n_username,\n  n_training_month,\n  n_workemail\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"add_new_employee\",\n    dateofjoining: n_dateofjoining,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    gender: n_gender,\n    dob: n_dob,\n    username: n_username,\n    training_month: n_training_month,\n    workemail: n_workemail\n  });\n}\n\nexport function addNewEmployee(new_employee_details) {\n  return function(dispatch, getState) {\n    let n_dateofjoining = \"\";\n    let n_name = \"\";\n    let n_jobtitle = \"\";\n    let n_gender = \"\";\n    let n_dob = \"\";\n    let n_username = \"\";\n    let n_training_month = \"\";\n    let n_workemail = \"\";\n\n    if (\n      typeof new_employee_details.dateofjoining === \"undefined\" ||\n      new_employee_details.dateofjoining == \"\"\n    ) {\n      return Promise.reject(\"Date of Joining is empty\");\n    } else {\n      n_dateofjoining = new_employee_details.dateofjoining;\n    }\n\n    if (\n      typeof new_employee_details.name === \"undefined\" ||\n      new_employee_details.name == \"\"\n    ) {\n      return Promise.reject(\"Name is empty\");\n    } else {\n      n_name = new_employee_details.name;\n    }\n\n    if (\n      typeof new_employee_details.jobtitle === \"undefined\" ||\n      new_employee_details.jobtitle == \"\"\n    ) {\n      return Promise.reject(\"Job Title is empty\");\n    } else {\n      n_jobtitle = new_employee_details.jobtitle;\n    }\n\n    if (\n      typeof new_employee_details.gender === \"undefined\" ||\n      new_employee_details.gender == \"\"\n    ) {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (\n      typeof new_employee_details.dob === \"undefined\" ||\n      new_employee_details.dob == \"\"\n    ) {\n      return Promise.reject(\"Date of birth is empty\");\n    } else {\n      n_dob = new_employee_details.dob;\n    }\n\n    if (\n      typeof new_employee_details.gender === \"undefined\" ||\n      new_employee_details.gender == \"\"\n    ) {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (\n      typeof new_employee_details.username === \"undefined\" ||\n      new_employee_details.username == \"\"\n    ) {\n      return Promise.reject(\"Username is empty\");\n    } else {\n      n_username = new_employee_details.username;\n    }\n\n    if (\n      typeof new_employee_details.training_month === \"undefined\" ||\n      new_employee_details.training_month == \"\"\n    ) {\n      return Promise.reject(\"training month is empty\");\n    } else {\n      n_training_month = new_employee_details.training_month;\n    }\n\n    if (\n      typeof new_employee_details.workemail === \"undefined\" ||\n      new_employee_details.workemail == \"\"\n    ) {\n      return Promise.reject(\"Work email is empty\");\n    } else {\n      n_workemail = new_employee_details.workemail;\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_addNewEmployee(\n        n_dateofjoining,\n        n_name,\n        n_jobtitle,\n        n_gender,\n        n_dob,\n        n_username,\n        n_training_month,\n        n_workemail\n      ).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(success_add_new_employee(json.data));\n            resolve(json.data);\n          } else {\n            dispatch(error_add_new_employee(json.data.message));\n            reject(json.data.message);\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_add_new_employee(\"error occurs!!!\"));\n          reject(\"error occurs!!!\");\n        }\n      );\n    });\n  };\n}\n// ---------get user document\n\nexport function success_user_document(data) {\n  return createAction(constants.ACTION_SUCCESS_USER_DOCUMENT)(data);\n}\nexport function error_user_document(data) {\n  return createAction(constants.ACTION_ERROR_USER_DOCUMENT)(data);\n}\n\nfunction async_getUserDocument(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_document_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserDocument(userid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_getUserDocument(userid).then(\n        json => {\n          dispatch(hide_loading());\n          if (json.error == 0) {\n            dispatch(success_user_document(json.data));\n            // resolve('disabled')\n          } else {\n            dispatch(error_user_document(json.data.message));\n            // reject('response with Error')\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_user_document(\"error occurs!!!\"));\n          // reject('error occurs!!')\n        }\n      );\n    });\n  };\n}\n\n// ------Delete user document\nfunction async_deleteDocument(doc_id) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"delete_user_document\",\n    id: doc_id\n  });\n}\n\nexport function deleteDocument(doc_id) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_deleteDocument(doc_id).then(\n        json => {\n          dispatch(hide_loading());\n          if (json.error == 0) {\n            resolve(json.data.message);\n          } else {\n            reject(json.data.message);\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\n// --------changeEmployeeStatus Enable/Disable user\n\nfunction async_changeEmployeeStatus(userid, status) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"change_employee_status\",\n    user_id: userid,\n    status: status\n  });\n}\n\nexport function changeEmployeeStatus(userid, status) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      async_changeEmployeeStatus(userid, status).then(\n        json => {\n          if (json.error === 0) {\n            resolve(\"User disabled\");\n          } else {\n            reject(json.data.message);\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nfunction successGetStep(data) {\n  return createAction(constants.ACTION_SUCCESS_GET_STEPS)(data);\n}\nfunction errorGetStep(data) {\n  return createAction(constants.ACTION_ERROR_GET_STEPS)(data);\n}\n\nvar callApiSteps = queue(function(userid, dispatch, callback) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  }).then(json => {\n    if (json.error == 0) {\n      dispatch(successGetStep(json.data));\n    } else {\n      // reject(json.data.message);\n      dispatch(errorGetStep());\n    }\n  });\n  // callback(json);\n}, 1);\n\nfunction asyncGetSteps(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  });\n}\n\nexport function getSteps(userid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      asyncGetSteps(userid).then(\n        json => {\n          if (json.error == 0) {\n            resolve(json.message);\n            dispatch(successGetStep(json.data));\n          } else {\n            reject(json.data.message);\n            dispatch(errorGetStep(json.data.message));\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nfunction successEmployeeStep(data) {\n  return createAction(constants.ACTION_SUCCESS_EMPLOYEE_STEPS)(data);\n}\nfunction errorEmployeeStep(data) {\n  return createAction(constants.ACTION_ERROR_EMPLOYEE_STEPS)(data);\n}\n\nfunction asyncChangeSteps(userid, stepid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_employee_life_cycle\",\n    userid: userid,\n    stepid: stepid\n  });\n}\n\nexport function changeSteps(userid, stepid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      asyncChangeSteps(userid, stepid).then(\n        json => {\n          if (json.error == 0) {\n            resolve(json.data.message);\n            // dispatch(getSteps(userid));\n            // dispatch(successEmployeeStep(json.data));\n          } else {\n            reject(json.data.message);\n            dispatch(errorEmployeeStep(json.data.message));\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nexport function successAddNewUserDetails(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_USER_DETAILS)(data);\n}\nexport function errorAddNewUserDetails(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_USER_DETAILS)(data);\n}\n\nfunction async_addNewUserDetails(\n  n_user_id,\n  n_address2,\n  n_emergency_ph1,\n  n_emergency_ph2,\n  n_blood_group,\n  n_medical_condition,\n  n_holding_comments,\n  n_signature\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    permanent_address: n_address2,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    holding_comments: n_holding_comments,\n    signature: n_signature\n  });\n}\n\nexport function addNewUserDetails(new_profile_details) {\n  return function(dispatch, getState) {\n    let n_user_id = \"\";\n    let n_address2 = \"\";\n    let n_emergency_ph1 = \"\";\n    let n_emergency_ph2 = \"\";\n    let n_blood_group = \"\";\n    let n_medical_condition = \"\";\n    let n_holding_comments = \"\";\n    let n_signature = \"\";\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n    if (typeof new_profile_details.signature !== \"undefined\") {\n      n_signature = new_profile_details.signature;\n    }\n    if (typeof new_profile_details.permanent_address !== \"undefined\") {\n      n_address2 = new_profile_details.permanent_address;\n    }\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n    if (n_signature.trim() === \"\") {\n      return Promise.reject(\"signature is empty\");\n    }\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_addNewUserDetails(\n        n_user_id,\n        n_address2,\n        n_emergency_ph1,\n        n_emergency_ph2,\n        n_blood_group,\n        n_medical_condition,\n        n_holding_comments,\n        n_signature\n      ).then(\n        res => {\n          dispatch(hide_loading()); // hide loading icon\n          if (res.error == 0) {\n            resolve(res.data);\n            dispatch(successAddNewUserDetails(res.data));\n          } else {\n            dispatch(errorAddNewUserDetails(res.data));\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(errorAddNewUserDetails(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\nexport function successGetAllEmployeeDetails(data) {\n  return createAction(constants.SUCCESS_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\nexport function errorGetAllEmployeeDetails(data) {\n  return createAction(constants.ERROR_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\n\nfunction async_getAllEmployeeDetails(){\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_enabled_users_brief_details\"\n  })\n}\n \nexport function getAllEmployeeDetails() {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getAllEmployeeDetails().then(\n        res => {\n          if (res.error == 0) {\n            resolve(res.data);\n            dispatch(successGetAllEmployeeDetails(res.data));\n            if(res.data.length){\n              dispatch(getEmployeesSalaryDetails(res.data));\n            }\n          } else {\n            dispatch(errorGetAllEmployeeDetails(res.data));\n          }\n          dispatch(hide_loading()); // hide loading icon\n        },\n        error => {\n          console.log('error', error);\n          dispatch(hide_loading()); // hide loading icon\n        }\n      )\n    })\n  }\n}\n\nfunction async_get_user_salary_details (userid) {\n  return fireAjax('POST', '', {\n    action:  'get_user_salary_info_by_id',\n    user_id: userid\n  });\n}\n\nexport function getEmployeesSalaryDetails (users, i=0) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n        let userid = users[i].user_Id;\n        dispatch(show_loading()); // show loading icon\n        async_get_user_salary_details(userid).then(\n          (json) => {\n            if (typeof json.data !== 'undefined' && typeof json.data.salary_details !== 'undefined' && json.data.salary_details.length > 0) {\n              let data = json.data;\n              let orderedSalary = _.orderBy(json.data.salary_details,['date'],['desc']);\n              users[i].current_salary = orderedSalary[0].test && orderedSalary[0].test.total_salary;\n              dispatch(successGetAllEmployeeDetails(users));\n            }\n            dispatch(hide_loading()); // hide loading icon\n            if(users.length > ++i){\n              dispatch(getEmployeesSalaryDetails(users, i));\n            }\n          },\n          (error) => {\n            dispatch(hide_loading()); // hide loading icon\n            if(users.length > ++i){\n              dispatch(getEmployeesSalaryDetails(users, i));\n            }\n          }\n        );\n    });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Snackbar from 'material-ui/Snackbar';\n\nconst AlertNotification = ({message,handleRequestClose}) => {\n  let showAlert = false;\n  let alertMessage = '';\n  if (!_.isEmpty(message)) {\n    showAlert = true;\n    alertMessage = message;\n  }\n \n  return (\n    <Snackbar\n      open={showAlert}\n      message={alertMessage}\n      autoHideDuration={4000}\n    />\n  );\n};\n\nAlertNotification.propTypes = {\n  message: PropTypes.string.isRequired\n};\nexport default AlertNotification;\n","import {createAction} from 'redux-actions';\nimport * as _ from 'lodash';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\n\nexport function success_user_manage_payslips_data (data) {\n  return createAction(constants.ACTION_SUCCESS_USER_MANAGE_PAYSLIPS_DATA)(data);\n}\n\nexport function error_user_manage_payslips_data (data) {\n  return createAction(constants.ACTION_ERROR_USER_MANAGE_PAYSLIPS_DATA)(data);\n}\n\nfunction async_get_user_manage_payslips_data (userid) {\n  return fireAjax('POST', '', {\n    action:  'get_user_manage_payslips_data',\n    user_id: userid\n  });\n}\n\nexport function get_user_manage_payslips_data (userid) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_user_manage_payslips_data(userid).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.data !== 'undefined') {\n          // let data = json.data.salary_details.reverse()\n          let data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_user_manage_payslips_data([]));\n      });\n    });\n  };\n}\n\n// /month payslip genrater\n\nfunction async_get_user_month_manage_payslips_data (userid, year, month) {\n  return fireAjax('POST', '', {\n    action:  'get_user_manage_payslips_data',\n    user_id: userid,\n    year:    year,\n    month:   month\n  });\n}\n\nexport function get_user_month_manage_payslips_data (userid, year, month) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_user_month_manage_payslips_data(userid, year, month).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.data !== 'undefined') {\n          // let data = json.data.salary_details.reverse()\n          let data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_user_manage_payslips_data([]));\n      });\n    });\n  };\n}\n\n// /create arrear\n\nfunction async_create_arrear (userid, extraA, arrearMonth) {\n  return fireAjax('POST', '', {\n    action:           'get_user_manage_payslips_data',\n    user_id:          userid,\n    extra_arrear:     extraA,\n    arrear_for_month: arrearMonth\n  });\n}\nexport function create_arrear (userid, extraA, arrearMonth) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_create_arrear(userid, extraA, arrearMonth).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.data !== 'undefined') {\n          let data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n      });\n    });\n  };\n}\n\n// create user payslip\n\nexport function success_create_user_salary_slip (data) {\n  return createAction(constants.ACTION_SUCCESS_CREATE_USER_SALARY_SLIP)(data);\n}\nexport function error_create_user_salary_slip (data) {\n  return createAction(constants.ACTION_ERROR_CREATE_USER_SALARY_SLIP)(data);\n}\n\nfunction async_create_user_payslip (n_userid, n_year, n_month, n_name, n_designation, n_joining_date, n_total_working_days, n_days_present, n_paid_leaves, n_unpaid_leaves, n_total_leave_taken, n_allocated_leaves, n_leave_balance, n_final_leave_balance, n_basic, n_epf, n_hra, n_loan, n_conveyance, n_advance, n_medical_allowance, n_misc_deduction, n_misc_deduction_2, n_special_allowance, n_tds, n_arrear, n_bonus, n_total_earning, n_total_deduction, n_net_salary, n_send_email, send_slack_msg, n_key) {\n  let data = {\n    action:              'create_employee_salary_slip',\n    user_id:             n_userid,\n    year:                n_year,\n    month:               n_month,\n    name:                n_name,\n    designation:         n_designation,\n    joining_date:        n_joining_date,\n    total_working_days:  n_total_working_days,\n    days_present:        n_days_present,\n    paid_leaves:         n_paid_leaves,\n    unpaid_leaves:       n_unpaid_leaves,\n    total_leave_taken:   n_total_leave_taken,\n    allocated_leaves:    n_allocated_leaves,\n    leave_balance:       n_leave_balance,\n    final_leave_balance: n_final_leave_balance,\n    basic:               n_basic,\n    epf:                 n_epf,\n    hra:                 n_hra,\n    loan:                n_loan,\n    conveyance:          n_conveyance,\n    advance:             n_advance,\n    medical_allowance:   n_medical_allowance,\n    misc_deduction:      n_misc_deduction,\n    misc_deduction_2:    n_misc_deduction_2,\n    tds:                 n_tds,\n    arrear:              n_arrear,\n    bonus:               n_bonus,\n    total_earning:       n_total_earning,\n    total_deduction:     n_total_deduction,\n    net_salary:          n_net_salary,\n    send_email:          n_send_email,\n    send_slack_msg:      send_slack_msg\n  };\n  if (n_key == 1) {\n    data.special_allowance = n_special_allowance;\n  } else if (n_key == 2) {\n    data.loyalty_bonus = n_special_allowance;\n  }\n  return fireAjax('POST', '', data);\n}\n\nexport function create_user_payslip (new_salary_slip_data) {\n  return function (dispatch, getState) {\n    let n_userid = '';\n    let n_year = '';\n    let n_month = '';\n    let n_name = '';\n    let n_designation = '';\n    let n_joining_date = '';\n    let n_total_working_days = '';\n    let n_days_present = '';\n    let n_paid_leaves = '';\n    let n_unpaid_leaves = '';\n    let n_total_leave_taken = '';\n    let n_allocated_leaves = '';\n    let n_leave_balance = '';\n    let n_final_leave_balance = '';\n    let n_basic = '';\n    let n_epf = '';\n    let n_hra = '';\n    let n_loan = '';\n    let n_conveyance = '';\n    let n_advance = '';\n    let n_medical_allowance = '';\n    let n_misc_deduction = '';\n    let n_misc_deduction_2 = '';\n    let n_special_allowance = '';\n    let n_tds = '';\n    let n_arrear = '';\n    let n_bonus = '';\n    let n_total_earning = '';\n    let n_total_deduction = '';\n    let n_net_salary = '';\n    let n_send_email = '';\n    let send_slack_msg = '';\n    let n_key = '';\n\n    if (typeof new_salary_slip_data.user_id === 'undefined' || new_salary_slip_data.user_id == '') {\n      return Promise.reject('User Id is empty');\n    } else {\n      n_userid = new_salary_slip_data.user_id;\n    }\n\n    if (typeof new_salary_slip_data.name === 'undefined' || new_salary_slip_data.name == '') {\n      return Promise.reject('Name is empty');\n    } else {\n      n_name = new_salary_slip_data.name;\n    }\n\n    if (typeof new_salary_slip_data.year === 'undefined' || new_salary_slip_data.year == '') {\n      return Promise.reject('Year is empty');\n    } else {\n      n_year = new_salary_slip_data.year;\n    }\n\n    if (typeof new_salary_slip_data.month === 'undefined' || new_salary_slip_data.month == '') {\n      return Promise.reject('Month is empty');\n    } else {\n      n_month = new_salary_slip_data.month;\n    }\n\n    if (typeof new_salary_slip_data.designation === 'undefined' || new_salary_slip_data.designation == '') {\n      return Promise.reject('Designation is empty');\n    } else {\n      n_designation = new_salary_slip_data.designation;\n    }\n\n    if (typeof new_salary_slip_data.joining_date === 'undefined' || new_salary_slip_data.joining_date == '') {\n      return Promise.reject('Joining date is empty');\n    } else {\n      n_joining_date = new_salary_slip_data.joining_date;\n    }\n\n    if (typeof new_salary_slip_data.total_working_days === 'undefined' || new_salary_slip_data.total_working_days === '') {\n      return Promise.reject('Total working days is empty');\n    } else {\n      n_total_working_days = new_salary_slip_data.total_working_days;\n    }\n\n    if (typeof new_salary_slip_data.days_present === 'undefined' || new_salary_slip_data.days_present === '') {\n      return Promise.reject('Days present is empty');\n    } else {\n      n_days_present = new_salary_slip_data.days_present;\n    }\n\n    if (typeof new_salary_slip_data.paid_leaves === 'undefined' || new_salary_slip_data.paid_leaves === '') {\n      return Promise.reject('Paid leaves is empty');\n    } else {\n      n_paid_leaves = new_salary_slip_data.paid_leaves;\n    }\n\n    if (typeof new_salary_slip_data.unpaid_leaves === 'undefined' || new_salary_slip_data.unpaid_leaves === '') {\n      return Promise.reject('Unpaid leaves is empty');\n    } else {\n      n_unpaid_leaves = new_salary_slip_data.unpaid_leaves;\n    }\n\n    if (typeof new_salary_slip_data.total_leave_taken === 'undefined' || new_salary_slip_data.total_leave_taken === '') {\n      return Promise.reject('Total leave taken is empty');\n    } else {\n      n_total_leave_taken = new_salary_slip_data.total_leave_taken;\n    }\n\n    if (typeof new_salary_slip_data.allocated_leaves === 'undefined' || new_salary_slip_data.allocated_leaves === '') {\n      return Promise.reject('Allocated leaves is empty');\n    } else {\n      n_allocated_leaves = new_salary_slip_data.allocated_leaves;\n    }\n\n    if (typeof new_salary_slip_data.leave_balance === 'undefined' || new_salary_slip_data.leave_balance === '') {\n      return Promise.reject('Leave balance is empty');\n    } else {\n      n_leave_balance = new_salary_slip_data.leave_balance;\n    }\n\n    if (typeof new_salary_slip_data.final_leave_balance === 'undefined' || new_salary_slip_data.final_leave_balance === '') {\n      return Promise.reject('Final leave balance is empty');\n    } else {\n      n_final_leave_balance = new_salary_slip_data.final_leave_balance;\n    }\n\n    if (typeof new_salary_slip_data.basic === 'undefined' || new_salary_slip_data.basic === '') {\n      return Promise.reject('Basic is empty');\n    } else {\n      n_basic = new_salary_slip_data.basic;\n    }\n\n    if (typeof new_salary_slip_data.epf === 'undefined' || new_salary_slip_data.epf === '') {\n      return Promise.reject('EPF is empty');\n    } else {\n      n_epf = new_salary_slip_data.epf;\n    }\n\n    if (typeof new_salary_slip_data.hra === 'undefined' || new_salary_slip_data.hra === '') {\n      return Promise.reject('HRA is empty');\n    } else {\n      n_hra = new_salary_slip_data.hra;\n    }\n\n    if (typeof new_salary_slip_data.loan === 'undefined' || new_salary_slip_data.loan === '') {\n      return Promise.reject('Loan is empty');\n    } else {\n      n_loan = new_salary_slip_data.loan;\n    }\n\n    if (typeof new_salary_slip_data.conveyance === 'undefined' || new_salary_slip_data.conveyance === '') {\n      return Promise.reject('Conveyance is empty');\n    } else {\n      n_conveyance = new_salary_slip_data.conveyance;\n    }\n\n    if (typeof new_salary_slip_data.advance === 'undefined' || new_salary_slip_data.advance === '') {\n      return Promise.reject('Advance is empty');\n    } else {\n      n_advance = new_salary_slip_data.advance;\n    }\n\n    if (typeof new_salary_slip_data.medical_allowance === 'undefined' || new_salary_slip_data.medical_allowance === '') {\n      return Promise.reject('Medical allowance is empty');\n    } else {\n      n_medical_allowance = new_salary_slip_data.medical_allowance;\n    }\n\n    if (typeof new_salary_slip_data.misc_deduction === 'undefined' || new_salary_slip_data.misc_deduction === '') {\n      return Promise.reject('Holding is empty');\n    } else {\n      n_misc_deduction = new_salary_slip_data.misc_deduction;\n    }\n\n    if (typeof new_salary_slip_data.misc_deduction_2 === 'undefined' || new_salary_slip_data.misc_deduction_2 === '') {\n      return Promise.reject('Misc deduction  is empty');\n    } else {\n      n_misc_deduction_2 = new_salary_slip_data.misc_deduction_2;\n    }\n\n    if (typeof new_salary_slip_data.special_allowance === 'undefined' || new_salary_slip_data.special_allowance === '') {\n      return Promise.reject('Special allowance is empty');\n    } else {\n      n_special_allowance = new_salary_slip_data.special_allowance;\n    }\n\n    if (typeof new_salary_slip_data.tds === 'undefined' || new_salary_slip_data.tds === '') {\n      return Promise.reject('TDS is empty');\n    } else {\n      n_tds = new_salary_slip_data.tds;\n    }\n\n    if (typeof new_salary_slip_data.arrear === 'undefined' || new_salary_slip_data.arrear === '') {\n      return Promise.reject('Advance is empty');\n    } else {\n      n_arrear = new_salary_slip_data.arrear;\n    }\n\n    if (typeof new_salary_slip_data.bonus === 'undefined' || new_salary_slip_data.bonus === '') {\n      return Promise.reject('Bonus is empty');\n    } else {\n      n_bonus = new_salary_slip_data.bonus;\n    }\n\n    if (typeof new_salary_slip_data.total_earning === 'undefined' || new_salary_slip_data.total_earning === '') {\n      return Promise.reject('Total earning is empty');\n    } else {\n      n_total_earning = new_salary_slip_data.total_earning;\n    }\n\n    if (typeof new_salary_slip_data.total_deduction === 'undefined' || new_salary_slip_data.total_deduction === '') {\n      return Promise.reject('Total deduction is empty');\n    } else {\n      n_total_deduction = new_salary_slip_data.total_deduction;\n    }\n\n    if (typeof new_salary_slip_data.net_salary === 'undefined' || new_salary_slip_data.net_salary === '') {\n      return Promise.reject('Net salary is empty');\n    } else {\n      n_net_salary = new_salary_slip_data.net_salary;\n    }\n\n    if (typeof new_salary_slip_data.send_email_only !== 'undefined') {\n      n_send_email = new_salary_slip_data.send_email_only;\n    }\n    if (typeof new_salary_slip_data.send_slack_message !== 'undefined') {\n      send_slack_msg = new_salary_slip_data.send_slack_message;\n    }\n    if (typeof new_salary_slip_data.key !== 'undefined') {\n      n_key = new_salary_slip_data.key;\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_create_user_payslip(n_userid, n_year, n_month, n_name, n_designation, n_joining_date, n_total_working_days, n_days_present, n_paid_leaves, n_unpaid_leaves, n_total_leave_taken, n_allocated_leaves, n_leave_balance, n_final_leave_balance, n_basic, n_epf, n_hra, n_loan, n_conveyance, n_advance, n_medical_allowance, n_misc_deduction, n_misc_deduction_2, n_special_allowance, n_tds, n_arrear, n_bonus, n_total_earning, n_total_deduction, n_net_salary, n_send_email, send_slack_msg, n_key).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_create_user_salary_slip(json.data));\n          resolve('Payslip generated!!');\n        } else {\n          dispatch(error_create_user_salary_slip(json.data.message));\n          reject(json.data.message);\n        }\n      }, (error) => {\n        console.log('Tell Arun error occurs on Action - create_user_payslip');\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_create_user_salary_slip('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n// ------email payslips\n\nexport function success_email_payslips (data) {\n  return createAction(constants.ACTION_SUCCESS_EMAIL_PAYSLIPS)(data);\n}\n\nexport function error_email_payslips (data) {\n  return createAction(constants.ACTION_ERROR_EMAIL_PAYSLIPS)(data);\n}\n\nfunction async_email_payslips (payslips_ids) {\n  return fireAjax('POST', '', {\n    action:      'send_payslips_to_employees',\n    payslip_ids: payslips_ids\n  });\n}\n\nexport function email_payslips (payslips_ids) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_email_payslips(payslips_ids).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          // let data = json.data.salary_details.reverse()\n          dispatch(success_user_manage_payslips_data(json.data.message));\n          resolve(json.data.message);\n        } else {\n          dispatch(error_email_payslips('error occurs!!'));\n          reject('error occurs!!');\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_email_payslips('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n\n// ------save google access token\n\nexport function success_save_google_access_token (data) {\n  return createAction(constants.ACTION_SUCCESS_SAVE_GOOGLE_ACCESS_TOKEN)(data);\n}\n\nexport function error_save_google_access_token (data) {\n  return createAction(constants.ACTION_ERROR_SAVE_GOOGLE_ACCESS_TOKEN)(data);\n}\n\nfunction async_save_google_access_token (accessToken) {\n  return fireAjax('POST', '', {\n    action:              'save_google_payslip_drive_access_token',\n    google_access_token: accessToken\n  });\n}\n\nexport function save_google_access_token (accessToken) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_save_google_access_token(accessToken).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          // let data = json.data.salary_details.reverse()\n          let message = json.data.message;\n          dispatch(success_save_google_access_token(message));\n          resolve(message);\n        } else {\n          dispatch(error_save_google_access_token('error occurs!!'));\n          reject('error occurs!!');\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_save_google_access_token('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n\n// ----get transfer list\nexport function success_get_transfer_list (data) {\n  return createAction('ACTION_SUCCESS_GET_TRANSFER')(data);\n}\n\nexport function error_get_transfer_list (data) {\n  return createAction('ACTION_ERROR_GET_TRANSFER')(data);\n}\n\nfunction async_getTransferList (userIds) {\n  return fireAjax('POST', '', {\n    action:  'get_users_bankaccount_no',\n    user_id: userIds\n  });\n}\n\nexport function getTransferList (userIds) {\n  return function (dispatch, getState) {\n    if (userIds.length == 0) {\n      return Promise.reject('No user selected');\n    }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getTransferList(userIds).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_get_transfer_list(json.data));\n          resolve(json.data);\n        } else {\n          dispatch(error_get_transfer_list(json.data.message));\n          reject(json.data.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_get_transfer_list('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n"],"sourceRoot":""}