{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/healthStats/container/ContainerHealthStats.jsx\";\nimport React, { Component } from \"react\";\nimport Menu from \"../../../components/generic/Menu\";\nimport Header from \"../../../components/generic/Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from '../../../redux/actions';\nimport HealthStats from \"../../../modules/healthStats/component/HealthStats\";\nimport HealthStatsSecretKey from \"../../../modules/healthStats/component/HealthStatsSecretKey\";\nimport * as actionsUsersList from \"../../../redux/generic/actions/usersList\";\nimport { notify } from '../../../services/notify';\nimport EmployeeJoiningTerminationStats from \"../../../modules/healthStats/component/EmployeeJoiningTerminationStats\";\nimport LeaveStats from \"../../../modules/healthStats/component/LeaveStats\";\nimport { getYearArray } from '../../../services/generic';\nimport { dateFormatter } from \"../../../helper/helper\";\n\nvar ContainerHealthStats =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContainerHealthStats, _React$Component);\n\n  function ContainerHealthStats(props) {\n    var _this;\n\n    _classCallCheck(this, ContainerHealthStats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContainerHealthStats).call(this, props));\n\n    _this.onChange = function (e) {\n      if (e.target.name === \"month\") {\n        _this.setState({\n          month: e.target.value\n        });\n\n        _this.props.requestStatsLeaveHistory({\n          month: e.target.value,\n          year: _this.state.year\n        });\n      }\n\n      if (e.target.name === \"year\") {\n        _this.setState({\n          year: e.target.value\n        });\n\n        _this.props.requestStatsLeaveHistory({\n          month: _this.state.month,\n          year: e.target.value\n        });\n      }\n    };\n\n    _this.state = {\n      month: new Date().getMonth() + 1,\n      year: new Date().getYear() + 1900\n    };\n    _this.year = [];\n    return _this;\n  }\n\n  _createClass(ContainerHealthStats, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onIsAlreadyLogin();\n      this.props.healthStatsRequest();\n      this.props.requestStatsHistory();\n      this.props.healthStatsKeyListRequest();\n      this.year = getYearArray();\n      this.props.requestStatsLeaveHistory({\n        year: this.state.year,\n        month: this.state.month\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var deleteHealthData = props.deleteHealthData,\n          addSecretKeyData = props.addSecretKeyData,\n          deleteSecretKeyData = props.deleteSecretKeyData,\n          regenerateSecretKeyData = props.regenerateSecretKeyData;\n\n      if (deleteHealthData.isError) {\n        notify('Error !', deleteHealthData.message, 'error');\n      }\n\n      if (deleteHealthData.isSuccess) {\n        notify('Success !', deleteHealthData.message, 'success');\n      }\n\n      if (addSecretKeyData.isError) {\n        notify('Error !', addSecretKeyData.message, 'error');\n      }\n\n      if (addSecretKeyData.isSuccess) {\n        notify('Success !', addSecretKeyData.message, 'success');\n      }\n\n      if (deleteSecretKeyData.isError) {\n        notify('Error !', deleteSecretKeyData.message, 'error');\n      }\n\n      if (deleteSecretKeyData.isSuccess) {\n        notify('Success !', deleteSecretKeyData.message, 'success');\n      }\n\n      if (regenerateSecretKeyData.isError) {\n        notify('Error !', regenerateSecretKeyData.message, 'error');\n      }\n\n      if (regenerateSecretKeyData.isSuccess) {\n        notify('Success !', regenerateSecretKeyData.message, 'success');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0 content-health-stats\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: \"App Health & Stats\",\n        showLoading: this.props.frontend.show_loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(HealthStats, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row m-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 secret-key-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(HealthStatsSecretKey, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row m-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6 b-health-stats bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Recruitment Stats\"), React.createElement(EmployeeJoiningTerminationStats, {\n        data: this.props.statsHistory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-6 b2-health-stats bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row leave_stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Leave Stats\")), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        onChange: this.onChange,\n        value: this.state.year,\n        name: \"year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.year.map(function (data, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, data);\n      }))), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        onChange: this.onChange,\n        value: this.state.month,\n        name: \"month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, dateFormatter().months.map(function (item, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, item);\n      })))), React.createElement(LeaveStats, {\n        data: this.props.statsLeaveHistory.data,\n        flag: this.props.statsLeaveHistory.flag,\n        handleFlag: this.props.updateFlag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return ContainerHealthStats;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    healthData: state.healthstats.healthStats.data,\n    deleteHealthData: state.healthstats.deleteHealthStats,\n    statsHistory: state.healthstats.statsHistory,\n    healthKeyData: state.healthstats.healthStatsSecretKeyList.data,\n    addSecretKeyData: state.healthstats.healthStatsAddSecretKey,\n    deleteSecretKeyData: state.healthstats.healthStatsDeleteSecretKey,\n    regenerateSecretKeyData: state.healthstats.healthStatsRegenerateSecretKey,\n    statsLeaveHistory: state.healthstats.statsLeaveHistory\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    healthStatsRequest: function healthStatsRequest() {\n      return dispatch(actions.requestHealthStats());\n    },\n    deleteHealthStats: function deleteHealthStats(year) {\n      return dispatch(actions.requestDeleteHealthStats(year));\n    },\n    requestStatsHistory: function requestStatsHistory() {\n      return dispatch(actions.requestStatsHistory());\n    },\n    healthStatsKeyListRequest: function healthStatsKeyListRequest() {\n      return dispatch(actions.requestHealthStatsSecretKeyList());\n    },\n    healthStatsAddKeyRequest: function healthStatsAddKeyRequest(appname) {\n      return dispatch(actions.requestHealthStatsAddSecretKey(appname));\n    },\n    healthStatsDeleteKeyRequest: function healthStatsDeleteKeyRequest(appid) {\n      return dispatch(actions.requestHealthStatsDeleteSecretKey(appid));\n    },\n    healthStatsRegenerateKeyRequest: function healthStatsRegenerateKeyRequest(appid) {\n      return dispatch(actions.requestHealthStatsRegenerateSecretKey(appid));\n    },\n    requestStatsLeaveHistory: function requestStatsLeaveHistory(payload) {\n      return dispatch(actions.requestStatsLeaveHistory(payload));\n    },\n    updateFlag: function updateFlag() {\n      return dispatch(actions.updateFlag());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerHealthStats);","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/healthStats/container/ContainerHealthStats.jsx"],"names":["React","Component","Menu","Header","connect","actions","HealthStats","HealthStatsSecretKey","actionsUsersList","notify","EmployeeJoiningTerminationStats","LeaveStats","getYearArray","dateFormatter","ContainerHealthStats","props","onChange","e","target","name","setState","month","value","requestStatsLeaveHistory","year","state","Date","getMonth","getYear","onIsAlreadyLogin","healthStatsRequest","requestStatsHistory","healthStatsKeyListRequest","deleteHealthData","addSecretKeyData","deleteSecretKeyData","regenerateSecretKeyData","isError","message","isSuccess","frontend","show_loading","statsHistory","map","data","index","months","item","statsLeaveHistory","flag","updateFlag","mapStateToProps","toJS","loggedUser","logged_user","userLogin","healthData","healthstats","healthStats","deleteHealthStats","healthKeyData","healthStatsSecretKeyList","healthStatsAddSecretKey","healthStatsDeleteSecretKey","healthStatsRegenerateSecretKey","mapDispatchToProps","dispatch","isAlreadyLogin","requestHealthStats","requestDeleteHealthStats","requestHealthStatsSecretKeyList","healthStatsAddKeyRequest","appname","requestHealthStatsAddSecretKey","healthStatsDeleteKeyRequest","appid","requestHealthStatsDeleteSecretKey","healthStatsRegenerateKeyRequest","requestHealthStatsRegenerateSecretKey","payload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,oDAAxB;AACA,OAAOC,oBAAP,MAAiC,6DAAjC;AACA,OAAO,KAAKC,gBAAZ,MAAkC,0CAAlC;AACA,SAAQC,MAAR,QAAqB,0BAArB;AACA,OAAOC,+BAAP,MAA4C,wEAA5C;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAGMC,oB;;;;;AACF,gCAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,8FAAMA,KAAN;;AADgB,UA2CpBC,QA3CoB,GA2CX,UAACC,CAAD,EAAO;AACZ,UAAGA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAgB,OAAnB,EAA2B;AACvB,cAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASI;AAAlB,SAAd;;AACA,cAAKP,KAAL,CAAWQ,wBAAX,CAAoC;AAACF,UAAAA,KAAK,EAACJ,CAAC,CAACC,MAAF,CAASI,KAAhB;AAAuBE,UAAAA,IAAI,EAAC,MAAKC,KAAL,CAAWD;AAAvC,SAApC;AACH;;AACD,UAAGP,CAAC,CAACC,MAAF,CAASC,IAAT,KAAgB,MAAnB,EAA0B;AACtB,cAAKC,QAAL,CAAc;AAAEI,UAAAA,IAAI,EAAEP,CAAC,CAACC,MAAF,CAASI;AAAjB,SAAd;;AACA,cAAKP,KAAL,CAAWQ,wBAAX,CAAoC;AAACF,UAAAA,KAAK,EAAC,MAAKI,KAAL,CAAWJ,KAAlB;AAAyBG,UAAAA,IAAI,EAACP,CAAC,CAACC,MAAF,CAASI;AAAvC,SAApC;AACH;AACJ,KApDmB;;AAEhB,UAAKG,KAAL,GAAW;AACPJ,MAAAA,KAAK,EAAC,IAAIK,IAAJ,GAAWC,QAAX,KAAwB,CADvB;AAEPH,MAAAA,IAAI,EAAE,IAAIE,IAAJ,GAAWE,OAAX,KAAuB;AAFtB,KAAX;AAIA,UAAKJ,IAAL,GAAU,EAAV;AANgB;AAOjB;;;;yCACkB;AACjB,WAAKT,KAAL,CAAWc,gBAAX;AACA,WAAKd,KAAL,CAAWe,kBAAX;AACA,WAAKf,KAAL,CAAWgB,mBAAX;AACA,WAAKhB,KAAL,CAAWiB,yBAAX;AACA,WAAKR,IAAL,GAAYZ,YAAY,EAAxB;AACA,WAAKG,KAAL,CAAWQ,wBAAX,CAAoC;AAACC,QAAAA,IAAI,EAAC,KAAKC,KAAL,CAAWD,IAAjB;AAAsBH,QAAAA,KAAK,EAAC,KAAKI,KAAL,CAAWJ;AAAvC,OAApC;AACH;;;8CACyBN,K,EAAO;AAAA,UACtBkB,gBADsB,GAC8DlB,KAD9D,CACtBkB,gBADsB;AAAA,UACJC,gBADI,GAC8DnB,KAD9D,CACJmB,gBADI;AAAA,UACcC,mBADd,GAC8DpB,KAD9D,CACcoB,mBADd;AAAA,UACmCC,uBADnC,GAC8DrB,KAD9D,CACmCqB,uBADnC;;AAE7B,UAAIH,gBAAgB,CAACI,OAArB,EAA8B;AAC1B5B,QAAAA,MAAM,CAAC,SAAD,EAAYwB,gBAAgB,CAACK,OAA7B,EAAsC,OAAtC,CAAN;AACD;;AACH,UAAIL,gBAAgB,CAACM,SAArB,EAAgC;AAC5B9B,QAAAA,MAAM,CAAC,WAAD,EAAcwB,gBAAgB,CAACK,OAA/B,EAAwC,SAAxC,CAAN;AACD;;AACH,UAAIJ,gBAAgB,CAACG,OAArB,EAA8B;AAC1B5B,QAAAA,MAAM,CAAC,SAAD,EAAYyB,gBAAgB,CAACI,OAA7B,EAAsC,OAAtC,CAAN;AACD;;AACH,UAAIJ,gBAAgB,CAACK,SAArB,EAAgC;AAC5B9B,QAAAA,MAAM,CAAC,WAAD,EAAcyB,gBAAgB,CAACI,OAA/B,EAAwC,SAAxC,CAAN;AACD;;AACH,UAAIH,mBAAmB,CAACE,OAAxB,EAAiC;AAC7B5B,QAAAA,MAAM,CAAC,SAAD,EAAY0B,mBAAmB,CAACG,OAAhC,EAAyC,OAAzC,CAAN;AACD;;AACH,UAAIH,mBAAmB,CAACI,SAAxB,EAAmC;AAC/B9B,QAAAA,MAAM,CAAC,WAAD,EAAc0B,mBAAmB,CAACG,OAAlC,EAA2C,SAA3C,CAAN;AACD;;AACH,UAAIF,uBAAuB,CAACC,OAA5B,EAAqC;AACjC5B,QAAAA,MAAM,CAAC,SAAD,EAAY2B,uBAAuB,CAACE,OAApC,EAA6C,OAA7C,CAAN;AACD;;AACH,UAAIF,uBAAuB,CAACG,SAA5B,EAAuC;AACnC9B,QAAAA,MAAM,CAAC,WAAD,EAAc2B,uBAAuB,CAACE,OAAtC,EAA+C,SAA/C,CAAN;AACD;AACN;;;6BAWQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,oBAAU,KAAKvB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAK,QAAA,EAAE,EAAC,SAAR;AAAkB,QAAA,SAAS,EAAC,gDAA5B;AAA6E,QAAA,IAAI,EAAC,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAE,oBADf;AAEI,QAAA,WAAW,EAAE,KAAKA,KAAL,CAAWyB,QAAX,CAAoBC,YAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,EAAE,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD,oBAAiB,KAAK1B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CADA,EAMA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,oBAAD,oBAA0B,KAAKA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CANA,EAWA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAEA,oBAAC,+BAAD;AAAiC,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAW2B,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,QAAQ,EAAE,KAAK1B,QAAhD;AAA0D,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWD,IAA5E;AAAkF,QAAA,IAAI,EAAC,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKA,IAAL,CAAUmB,GAAV,CAAc,UAACC,IAAD,EAAMC,KAAN;AAAA,eAAc;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,KAAK,EAAED,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCA,IAAlC,CAAd;AAAA,OAAd,CADD,CADJ,CAJJ,EASI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,QAAQ,EAAE,KAAK5B,QAAhD;AAA0D,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWJ,KAA5E;AAAmF,QAAA,IAAI,EAAC,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIR,aAAa,GAAGiC,MAAhB,CAAuBH,GAAvB,CAA2B,UAACI,IAAD,EAAOF,KAAP;AAAA,eAAe;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,KAAK,EAAEA,KAAK,GAAG,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCE,IAAvC,CAAf;AAAA,OAA3B,CADJ,CADJ,CATJ,CADJ,EAgBI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWiC,iBAAX,CAA6BJ,IAA/C;AAAqD,QAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWiC,iBAAX,CAA6BC,IAAxF;AAA8F,QAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWmC,UAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CALJ,CAXA,CADJ,CALJ,CAFJ,CADJ;AAiDH;;;;EAxG8BlD,KAAK,CAACC,S;;AA0GzC,IAAMkD,eAAe,GAAG,SAAlBA,eAAkB,CAAC1B,KAAD;AAAA,SAAY;AAChCe,IAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,CAAeY,IAAf,EADsB;AAEhCC,IAAAA,UAAU,EAAE5B,KAAK,CAAC6B,WAAN,CAAkBC,SAFE;AAGhCC,IAAAA,UAAU,EAAE/B,KAAK,CAACgC,WAAN,CAAkBC,WAAlB,CAA8Bd,IAHV;AAIhCX,IAAAA,gBAAgB,EAAER,KAAK,CAACgC,WAAN,CAAkBE,iBAJJ;AAKhCjB,IAAAA,YAAY,EAAEjB,KAAK,CAACgC,WAAN,CAAkBf,YALA;AAMhCkB,IAAAA,aAAa,EAAEnC,KAAK,CAACgC,WAAN,CAAkBI,wBAAlB,CAA2CjB,IAN1B;AAOhCV,IAAAA,gBAAgB,EAAET,KAAK,CAACgC,WAAN,CAAkBK,uBAPJ;AAQhC3B,IAAAA,mBAAmB,EAAEV,KAAK,CAACgC,WAAN,CAAkBM,0BARP;AAShC3B,IAAAA,uBAAuB,EAAEX,KAAK,CAACgC,WAAN,CAAkBO,8BATX;AAUhChB,IAAAA,iBAAiB,EAAEvB,KAAK,CAACgC,WAAN,CAAkBT;AAVL,GAAZ;AAAA,CAAxB;;AAcA,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCrC,IAAAA,gBAAgB,EAAE;AAAA,aAAMqC,QAAQ,CAAC7D,OAAO,CAAC8D,cAAR,EAAD,CAAd;AAAA,KADkB;AAEpCrC,IAAAA,kBAAkB,EAAE;AAAA,aAAMoC,QAAQ,CAAC7D,OAAO,CAAC+D,kBAAR,EAAD,CAAd;AAAA,KAFgB;AAGpCT,IAAAA,iBAAiB,EAAE,2BAACnC,IAAD;AAAA,aAAU0C,QAAQ,CAAC7D,OAAO,CAACgE,wBAAR,CAAiC7C,IAAjC,CAAD,CAAlB;AAAA,KAHiB;AAIpCO,IAAAA,mBAAmB,EAAE;AAAA,aAAMmC,QAAQ,CAAC7D,OAAO,CAAC0B,mBAAR,EAAD,CAAd;AAAA,KAJe;AAKpCC,IAAAA,yBAAyB,EAAE;AAAA,aAAMkC,QAAQ,CAAC7D,OAAO,CAACiE,+BAAR,EAAD,CAAd;AAAA,KALS;AAMpCC,IAAAA,wBAAwB,EAAE,kCAACC,OAAD;AAAA,aAAaN,QAAQ,CAAC7D,OAAO,CAACoE,8BAAR,CAAuCD,OAAvC,CAAD,CAArB;AAAA,KANU;AAOpCE,IAAAA,2BAA2B,EAAE,qCAACC,KAAD;AAAA,aAAWT,QAAQ,CAAC7D,OAAO,CAACuE,iCAAR,CAA0CD,KAA1C,CAAD,CAAnB;AAAA,KAPO;AAQpCE,IAAAA,+BAA+B,EAAE,yCAACF,KAAD;AAAA,aAAWT,QAAQ,CAAC7D,OAAO,CAACyE,qCAAR,CAA8CH,KAA9C,CAAD,CAAnB;AAAA,KARG;AASpCpD,IAAAA,wBAAwB,EAAE,kCAACwD,OAAD;AAAA,aAAab,QAAQ,CAAC7D,OAAO,CAACkB,wBAAR,CAAiCwD,OAAjC,CAAD,CAArB;AAAA,KATU;AAUpC7B,IAAAA,UAAU,EAAE;AAAA,aAAMgB,QAAQ,CAAC7D,OAAO,CAAC6C,UAAR,EAAD,CAAd;AAAA;AAVwB,GAAL;AAAA,CAAnC;;AAcA,eAAe9C,OAAO,CAAC+C,eAAD,EAAkBc,kBAAlB,CAAP,CAA6CnD,oBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Menu from \"../../../components/generic/Menu\";\nimport Header from \"../../../components/generic/Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from '../../../redux/actions';\nimport HealthStats from \"../../../modules/healthStats/component/HealthStats\";\nimport HealthStatsSecretKey from \"../../../modules/healthStats/component/HealthStatsSecretKey\";\nimport * as actionsUsersList from \"../../../redux/generic/actions/usersList\";\nimport {notify} from '../../../services/notify';\nimport EmployeeJoiningTerminationStats from \"../../../modules/healthStats/component/EmployeeJoiningTerminationStats\";\nimport LeaveStats from \"../../../modules/healthStats/component/LeaveStats\";\nimport { getYearArray } from '../../../services/generic';\nimport { dateFormatter } from \"../../../helper/helper\";\n\n\nclass ContainerHealthStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state={\n            month:new Date().getMonth() + 1, \n            year: new Date().getYear() + 1900,\n        };\n        this.year=[];\n      }\n    componentWillMount() {\n        this.props.onIsAlreadyLogin();\n        this.props.healthStatsRequest();\n        this.props.requestStatsHistory();\n        this.props.healthStatsKeyListRequest();\n        this.year = getYearArray();\n        this.props.requestStatsLeaveHistory({year:this.state.year,month:this.state.month});\n    }\n    componentWillReceiveProps(props) {        \n        const {deleteHealthData, addSecretKeyData, deleteSecretKeyData, regenerateSecretKeyData} = props;\n        if (deleteHealthData.isError) {    \n            notify('Error !', deleteHealthData.message, 'error');\n          }\n        if (deleteHealthData.isSuccess) {\n            notify('Success !', deleteHealthData.message, 'success');\n          }\n        if (addSecretKeyData.isError) {    \n            notify('Error !', addSecretKeyData.message, 'error');\n          }\n        if (addSecretKeyData.isSuccess) {\n            notify('Success !', addSecretKeyData.message, 'success');\n          }\n        if (deleteSecretKeyData.isError) {    \n            notify('Error !', deleteSecretKeyData.message, 'error');\n          }\n        if (deleteSecretKeyData.isSuccess) {\n            notify('Success !', deleteSecretKeyData.message, 'success');\n          }\n        if (regenerateSecretKeyData.isError) {    \n            notify('Error !', regenerateSecretKeyData.message, 'error');\n          }\n        if (regenerateSecretKeyData.isSuccess) {\n            notify('Success !', regenerateSecretKeyData.message, 'success');\n          }\n    }\n    onChange=(e) => {\n        if(e.target.name===\"month\"){\n            this.setState({ month: e.target.value});\n            this.props.requestStatsLeaveHistory({month:e.target.value, year:this.state.year}); \n        }\n        if(e.target.name===\"year\"){\n            this.setState({ year: e.target.value});\n            this.props.requestStatsLeaveHistory({month:this.state.month, year:e.target.value});\n        }\n    } \n    render() {\n        return (\n            <div>\n                <Menu {...this.props} />\n                <div id=\"content\" className=\"app-content box-shadow-z0 content-health-stats\" role=\"main\">\n                    <Header\n                        pageTitle={\"App Health & Stats\"}\n                        showLoading={this.props.frontend.show_loading}\n                    />\n                    <div className=\"app-body\" id=\"view\">\n                        <div className=\"padding\">\n                        <div className=\"row m-10\">\n                            <div className=\"col-sm-12 bg-white\">\n                                <HealthStats {...this.props} />\n                            </div>\n                        </div>\n                        <div className=\"row m-10\">\n                            <div className=\"col-sm-12 secret-key-block\">\n                                <HealthStatsSecretKey {...this.props} />\n                            </div>\n                        </div>\n                        <div className=\"row m-10\">\n                            <div className=\"col-sm-6 b-health-stats bg-white\">\n                            <h5>Recruitment Stats</h5>\n                            <EmployeeJoiningTerminationStats data={this.props.statsHistory}/>\n                            </div>\n                            <div className=\"col-sm-6 b2-health-stats bg-white\">\n                                <div className=\"row leave_stats\">\n                                    <div className=\"col-sm-6\">\n                                        <h5>Leave Stats</h5>\n                                    </div>\n                                    <div className=\"col-sm-3\">\n                                        <select className=\"form-control\" onChange={this.onChange} value={this.state.year} name=\"year\">\n                                        {this.year.map((data,index)=><option key={index} value={data}>{data}</option>)}\n                                        </select>\n                                    </div>\n                                    <div className=\"col-sm-3\">\n                                        <select className=\"form-control\" onChange={this.onChange} value={this.state.month} name=\"month\">\n                                           {dateFormatter().months.map((item, index)=><option key={index} value={index + 1}>{item}</option>)}\n                                        </select>\n                                    </div>\n                                </div>\n                                <LeaveStats data={this.props.statsLeaveHistory.data} flag={this.props.statsLeaveHistory.flag} handleFlag={this.props.updateFlag}/>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    healthData: state.healthstats.healthStats.data,\n    deleteHealthData: state.healthstats.deleteHealthStats,\n    statsHistory: state.healthstats.statsHistory,\n    healthKeyData: state.healthstats.healthStatsSecretKeyList.data,\n    addSecretKeyData: state.healthstats.healthStatsAddSecretKey,\n    deleteSecretKeyData: state.healthstats.healthStatsDeleteSecretKey,\n    regenerateSecretKeyData: state.healthstats.healthStatsRegenerateSecretKey,\n    statsLeaveHistory: state.healthstats.statsLeaveHistory\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onIsAlreadyLogin: () => dispatch(actions.isAlreadyLogin()),\n    healthStatsRequest: () => dispatch(actions.requestHealthStats()),\n    deleteHealthStats: (year) => dispatch(actions.requestDeleteHealthStats(year)),\n    requestStatsHistory: () => dispatch(actions.requestStatsHistory()),\n    healthStatsKeyListRequest: () => dispatch(actions.requestHealthStatsSecretKeyList()),\n    healthStatsAddKeyRequest: (appname) => dispatch(actions.requestHealthStatsAddSecretKey(appname)),\n    healthStatsDeleteKeyRequest: (appid) => dispatch(actions.requestHealthStatsDeleteSecretKey(appid)),\n    healthStatsRegenerateKeyRequest: (appid) => dispatch(actions.requestHealthStatsRegenerateSecretKey(appid)),\n    requestStatsLeaveHistory: (payload) => dispatch(actions.requestStatsLeaveHistory(payload)),\n    updateFlag: () => dispatch(actions.updateFlag()) \n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerHealthStats);"]},"metadata":{},"sourceType":"module"}