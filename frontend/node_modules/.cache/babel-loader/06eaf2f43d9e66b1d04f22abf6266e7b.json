{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/components/generic/employeeMonthGrid/Day.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery';\nimport * as dayType from '../../../redux/attendance/constants';\nimport DaySection from './DaySection';\nvar styles = {\n  timeInputBox: {\n    'width': '40px'\n  }\n};\n\nvar Day = function Day(_ref) {\n  var dayData = _ref.dayData,\n      classname = _ref.classname,\n      forEmployeeHours = _ref.forEmployeeHours,\n      day = _ref.day,\n      userid = _ref.userid,\n      showDaySummary = _ref.showDaySummary,\n      onWorkingHoursChange = _ref.onWorkingHoursChange;\n  $(document).ready(function () {\n    $('input.timepicker').timepicker({\n      'minTime': '5:00',\n      'maxTime': '12:00',\n      'timeFormat': 'h:i',\n      'step': 10\n    });\n  });\n  var d = dayData;\n  var officeWorkingHours = d.office_working_hours;\n  var main = '';\n  var _class = 'fc-day-grid-event fc-h-event fc-event fc-start fc-end fc-draggable ';\n  var extraTimebg = '';\n  var date = d.date;\n  var datebg = 'dark-white';\n  var workTimeData = d.total_time + ' - Total Work Time';\n\n  if (d.extra_time_status === '-') {\n    extraTimebg = 'red';\n  } else if (d.extra_time_status === '+') {\n    extraTimebg = 'green';\n  }\n\n  if (d.admin_alert === 1) {\n    date = date + ' * ';\n    datebg = 'indigo';\n    workTimeData = d.admin_alert_message;\n  }\n\n  if (!forEmployeeHours && d.day_type === dayType.WORKING_DAY) {\n    main = React.createElement(\"div\", {\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#modalUserDaySummary\",\n      onClick: function onClick() {\n        return showDaySummary(userid, dayData.full_date);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(DaySection, {\n      classname: _class + datebg,\n      block: \"type1\",\n      time: React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, date),\n      title: d.day,\n      officeTime: d.office_working_hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'dark-white',\n      block: \"type1\",\n      time: d.in_time + ' - ' + d.out_time,\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'dark-white center',\n      block: \"type2\",\n      dataToDisplay: workTimeData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + extraTimebg,\n      block: \"type1\",\n      time: d.extra_time,\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  } else if (!forEmployeeHours && d.day_type === dayType.NON_WORKING_DAY) {\n    main = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(DaySection, {\n      classname: _class + 'yellow',\n      block: \"type1\",\n      time: React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, d.date),\n      title: d.day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'yellow',\n      block: \"type1\",\n      time: 'Non Working day',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'yellow',\n      block: \"type1\",\n      time: d.day_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  } else if (!forEmployeeHours && d.day_type === dayType.FUTURE_WORKING_DAY) {\n    main = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(DaySection, {\n      classname: _class + 'dark-white',\n      block: \"type1\",\n      time: React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, d.date),\n      title: d.day,\n      officeTime: d.office_working_hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'dark-white',\n      block: \"type1\",\n      time: \"\",\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'dark-white',\n      block: \"type1\",\n      dataToDi: true,\n      splay: d.day_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'dark-white center',\n      block: \"type2\",\n      dataToDisplay: workTimeData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  } else if (!forEmployeeHours && d.day_type === dayType.LEAVE_DAY) {\n    main = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(DaySection, {\n      classname: _class + 'red',\n      block: \"type1\",\n      time: React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, d.date),\n      title: d.day,\n      officeTime: d.office_working_hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'red',\n      block: \"type1\",\n      time: 'On Leave',\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'red',\n      block: \"type1\",\n      time: d.day_text,\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  } else if (!forEmployeeHours && d.day_type === dayType.HALF_DAY) {\n    main = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(DaySection, {\n      classname: _class + 'red-100',\n      block: \"type1\",\n      time: React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, d.date),\n      title: d.day,\n      officeTime: d.office_working_hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'red-100',\n      block: \"type1\",\n      time: 'Half day',\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'red-100',\n      block: \"type1\",\n      time: d.day_text,\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  } else if (forEmployeeHours && d.day_type === dayType.WORKING_DAY) {\n    main = React.createElement(\"div\", {\n      \"data-toggle\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(DaySection, {\n      classname: _class + 'dark-white',\n      block: \"type1\",\n      time: React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, d.date),\n      title: d.day,\n      officeTime: d.office_working_hours,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'dark-white',\n      block: \"type1\",\n      time: React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Hours : \", officeWorkingHours),\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"fc-day-grid-event fc-h-event fc-event fc-start fc-end dark-white fc-draggable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fc-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fc-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Change to \\xA0:\\xA0\"), React.createElement(\"span\", {\n      className: \"fc-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"timepicker\",\n      style: styles.timeInputBox,\n      onBlur: function onBlur(e) {\n        return onWorkingHoursChange(dayData.full_date, e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))));\n  } else if (forEmployeeHours && d.day_type === dayType.NON_WORKING_DAY) {\n    main = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(DaySection, {\n      classname: _class + 'yellow',\n      block: \"type1\",\n      time: React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, d.date),\n      title: d.day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'yellow',\n      block: \"type1\",\n      time: 'Non Working day',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(DaySection, {\n      classname: _class + 'yellow',\n      block: \"type1\",\n      time: d.day_text,\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"fc-day-grid-event fc-h-event fc-event fc-start fc-end dark-white fc-draggable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fc-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fc-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Change to \\xA0:\\xA0\"), React.createElement(\"span\", {\n      className: \"fc-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"timepicker\",\n      style: styles.timeInputBox,\n      onBlur: function onBlur(e) {\n        return onWorkingHoursChange(dayData.full_date, e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, main);\n};\n\nDay.propTypes = {\n  classname: PropTypes.string,\n  forEmployeeHours: PropTypes.bool,\n  day: PropTypes.string,\n  userid: PropTypes.number,\n  showDaySummary: PropTypes.func,\n  onWorkingHoursChange: PropTypes.func,\n  dayData: PropTypes.shape({\n    date: PropTypes.number.isRequired,\n    day: PropTypes.string.isRequired,\n    day_type: PropTypes.string.isRequired,\n    full_date: PropTypes.string.isRequired,\n    admin_alert: PropTypes.number,\n    admin_alert_message: PropTypes.string,\n    day_text: PropTypes.string,\n    extra_time: PropTypes.string,\n    in_time: PropTypes.string,\n    out_time: PropTypes.string,\n    total_time: PropTypes.string,\n    office_working_hours: PropTypes.string,\n    text: PropTypes.string\n  }).isRequired\n};\nexport default Day;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/components/generic/employeeMonthGrid/Day.jsx"],"names":["React","PropTypes","$","dayType","DaySection","styles","timeInputBox","Day","dayData","classname","forEmployeeHours","day","userid","showDaySummary","onWorkingHoursChange","document","ready","timepicker","d","officeWorkingHours","office_working_hours","main","_class","extraTimebg","date","datebg","workTimeData","total_time","extra_time_status","admin_alert","admin_alert_message","day_type","WORKING_DAY","full_date","in_time","out_time","extra_time","NON_WORKING_DAY","day_text","FUTURE_WORKING_DAY","LEAVE_DAY","HALF_DAY","e","target","value","propTypes","string","bool","number","func","shape","isRequired","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery';\nimport * as dayType from '../../../redux/attendance/constants';\nimport DaySection from './DaySection';\n\nconst styles = {\n  timeInputBox: {\n    'width': '40px'\n  }\n};\n\nconst Day = ({dayData, classname, forEmployeeHours, day, userid, showDaySummary, onWorkingHoursChange}) => {\n  $(document).ready(function () {\n    $('input.timepicker').timepicker({'minTime': '5:00', 'maxTime': '12:00', 'timeFormat': 'h:i', 'step': 10});\n  });\n\n  let d = dayData;\n  let officeWorkingHours = d.office_working_hours;\n  let main = '';\n  let _class = 'fc-day-grid-event fc-h-event fc-event fc-start fc-end fc-draggable ';\n\n  let extraTimebg = '';\n  let date = d.date;\n  let datebg = 'dark-white';\n  let workTimeData = d.total_time + ' - Total Work Time';\n\n  if (d.extra_time_status === '-') {\n    extraTimebg = 'red';\n  } else if (d.extra_time_status === '+') {\n    extraTimebg = 'green';\n  }\n  if (d.admin_alert === 1) {\n    date = date + ' * ';\n    datebg = 'indigo';\n    workTimeData = d.admin_alert_message;\n  }\n  if (!forEmployeeHours && d.day_type === dayType.WORKING_DAY) {\n    main = <div data-toggle=\"modal\" data-target=\"#modalUserDaySummary\" onClick={() => showDaySummary(userid, dayData.full_date)}>\n      <DaySection classname={_class + datebg} block=\"type1\" time={<h5>{date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={d.in_time + ' - ' + d.out_time} title='' />\n      <DaySection classname={_class + 'dark-white center'} block=\"type2\" dataToDisplay={workTimeData} />\n      <DaySection classname={_class + extraTimebg} block=\"type1\" time={d.extra_time} title='' />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.NON_WORKING_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={'Non Working day'} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={d.day_text} />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.FUTURE_WORKING_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time='' title='' />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" dataToDi splay={d.day_text} />\n      <DaySection classname={_class + 'dark-white center'} block=\"type2\" dataToDisplay={workTimeData} />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.LEAVE_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'red'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'red'} block=\"type1\" time={'On Leave'} title='' />\n      <DaySection classname={_class + 'red'} block=\"type1\" time={d.day_text} title='' />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.HALF_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'red-100'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'red-100'} block=\"type1\" time={'Half day'} title='' />\n      <DaySection classname={_class + 'red-100'} block=\"type1\" time={d.day_text} title='' />\n    </div>;\n  } else if (forEmployeeHours && d.day_type === dayType.WORKING_DAY) {\n    main = <div data-toggle=\"modal\">\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={<h6>Hours : {officeWorkingHours}</h6>} title='' />\n\n      <div className=\"fc-day-grid-event fc-h-event fc-event fc-start fc-end dark-white fc-draggable\">\n        <div className=\"fc-content\">\n          <span className=\"fc-title\">\n            Change to &nbsp;:&nbsp;\n          </span>\n          <span className=\"fc-time\">\n            <input type=\"text\" className=\"timepicker\" style={styles.timeInputBox} onBlur={(e) => onWorkingHoursChange(dayData.full_date, e.target.value)} />\n          </span>\n        </div>\n      </div>\n\n    </div>;\n  } else if (forEmployeeHours && d.day_type === dayType.NON_WORKING_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={'Non Working day'} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={d.day_text} title='' />\n\n      <div className=\"fc-day-grid-event fc-h-event fc-event fc-start fc-end dark-white fc-draggable\">\n        <div className=\"fc-content\">\n          <span className=\"fc-title\">\n            Change to &nbsp;:&nbsp;\n          </span>\n          <span className=\"fc-time\">\n            <input type=\"text\" className=\"timepicker\" style={styles.timeInputBox} onBlur={(e) => onWorkingHoursChange(dayData.full_date, e.target.value)} />\n          </span>\n        </div>\n      </div>\n    </div>;\n  }\n\n  return (\n    <div>\n      {main}\n    </div>\n  );\n};\n\nDay.propTypes = {\n  classname:            PropTypes.string,\n  forEmployeeHours:     PropTypes.bool,\n  day:                  PropTypes.string,\n  userid:               PropTypes.number,\n  showDaySummary:       PropTypes.func,\n  onWorkingHoursChange: PropTypes.func,\n  dayData:              PropTypes.shape({\n    date:                 PropTypes.number.isRequired,\n    day:                  PropTypes.string.isRequired,\n    day_type:             PropTypes.string.isRequired,\n    full_date:            PropTypes.string.isRequired,\n    admin_alert:          PropTypes.number,\n    admin_alert_message:  PropTypes.string,\n    day_text:             PropTypes.string,\n    extra_time:           PropTypes.string,\n    in_time:              PropTypes.string,\n    out_time:             PropTypes.string,\n    total_time:           PropTypes.string,\n    office_working_hours: PropTypes.string,\n    text:                 PropTypes.string\n  }).isRequired\n};\n\nexport default Day;\n"]},"metadata":{},"sourceType":"module"}