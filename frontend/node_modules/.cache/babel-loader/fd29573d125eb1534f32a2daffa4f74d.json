{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/inventory/containers/myInventory.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { notify } from \"../../../services/notify\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport DeviceDetails from \"../../../components/inventory/deviceDetails\";\nimport * as actionsMyProfile from \"../../../redux/myProfile/actions/myProfile\";\nimport * as actions from '../../../redux/actions';\nimport * as actionsManageDevice from \"../../../redux/inventory/actions/inventory\";\nimport UnassignDevice from \"../../../modules/inventory/components/UnassignDevice\";\nimport AssignDevice from \"../../../modules/inventory/components/AssignDevice\";\nimport _ from \"lodash\";\nimport $ from 'jquery';\n\nvar MyInventory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyInventory, _React$Component);\n\n  function MyInventory(props) {\n    var _this;\n\n    _classCallCheck(this, MyInventory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyInventory).call(this, props));\n\n    _this.handleAuditClick = function (val) {\n      _this.setState({\n        activeAuditId: val.id,\n        activeItemName: val.machine_name\n      });\n    };\n\n    _this.handleAuditSubmit = function (activeAuditId, auditMsg) {\n      var activeBtn = _this.state.activeAudits.concat(activeAuditId);\n\n      _this.setState({\n        activeAudits: activeBtn\n      });\n\n      $(\"#modalAudit\").modal(\"hide\");\n\n      _this.props.onAddAuditComment(activeAuditId, auditMsg).then(function (res) {\n        _this.props.onGetMyInventory();\n      }).catch(function () {\n        var remainActive = _.filter(_this.state.activeAudits, function (n) {\n          return n !== activeAuditId;\n        });\n\n        _this.setState({\n          activeAudits: remainActive\n        });\n      });\n\n      _this.setState({\n        auditMsg: \"\"\n      });\n    };\n\n    _this.state = {\n      user_id: [],\n      status_message: \"\",\n      openUnassigned: false,\n      openAssigned: false,\n      user_profile_detail: {},\n      user_assign_machine: [],\n      device: [],\n      unassignDeviceList: [],\n      activeAuditId: \"\",\n      auditMsg: \"\",\n      activeItemName: \"\",\n      show_alert_message: true,\n      activeAudits: []\n    };\n\n    _this.props.onIsAlreadyLogin();\n\n    _this.callUpdateUserDeviceDetails = _this.callUpdateUserDeviceDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.unassignDevice = _this.unassignDevice.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddDialog = _this.handleAddDialog.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseAssign = _this.handleCloseAssign.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callAddUserComment = _this.callAddUserComment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callAssignDevice = _this.callAssignDevice.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MyInventory, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onUnassignDeviceList();\n      this.props.onMyProfileDetails();\n      this.props.onGetMyInventory();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var _this2 = this;\n\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status && isNotValid.redirectTo !== '/my_inventory') {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n\n      this.setState({\n        user_profile_detail: props.myProfile.user_profile_detail,\n        user_assign_machine: props.myProfile.myInventory,\n        show_alert_message: true\n      });\n\n      if (props && props.myProfile && props.myProfile.myInventory) {\n        _.map(props.myProfile.myInventory, function (val) {\n          if (!val.audit_current_month_status.status) {\n            _this2.setState({\n              show_alert_message: false\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"callUpdateUserDeviceDetails\",\n    value: function callUpdateUserDeviceDetails(newDeviceDetails) {\n      this.props.onUpdateDeviceDetails(newDeviceDetails);\n    }\n  }, {\n    key: \"callAssignDevice\",\n    value: function callAssignDevice(assign_device) {\n      var _this3 = this;\n\n      this.props.onAssignDevice(assign_device).then(function (data) {\n        _this3.props.onGetMyInventory();\n\n        notify(\"Success!\", data, \"success\");\n      }, function (error) {\n        notify(\"Error!\", error, \"error\");\n      });\n    }\n  }, {\n    key: \"unassignDevice\",\n    value: function unassignDevice(val) {\n      this.setState({\n        openUnassigned: true,\n        status_message: \"\",\n        device: val\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        openUnassigned: false,\n        status_message: \"\"\n      });\n    }\n  }, {\n    key: \"handleCloseAssign\",\n    value: function handleCloseAssign() {\n      this.setState({\n        openAssigned: false,\n        status_message: \"\"\n      });\n    }\n  }, {\n    key: \"handleAddDialog\",\n    value: function handleAddDialog() {\n      this.setState({\n        user_id: this.props.loggedUser.data.id,\n        unassignDeviceList: this.props.unassignedDeviceList.unassignedDeviceList,\n        openAssigned: true,\n        status_message: \"\"\n      });\n    }\n  }, {\n    key: \"callAddUserComment\",\n    value: function callAddUserComment(addUserCommentDetails) {\n      this.props.onAddUserComment(addUserCommentDetails);\n      this.setState({\n        openUnassigned: false,\n        status_message: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          auditMsg = _this$state.auditMsg,\n          activeAuditId = _this$state.activeAuditId,\n          activeItemName = _this$state.activeItemName,\n          show_alert_message = _this$state.show_alert_message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        pageTitle: \"My Inventory\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"modalAudit\",\n        className: \"modal\",\n        \"data-backdrop\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog modal-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Audit of \", activeItemName)), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-icon white\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"modal-body p-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 form-control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Message\"), React.createElement(\"div\", {\n        className: \"col-sm-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-red-np\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Add a short description about inventory. Eg. Working fine, keys not working, etc.\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: auditMsg,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            auditMsg: e.target.value\n          });\n        },\n        onKeyUp: function onKeyUp(e) {\n          if (e.keyCode === 13) {\n            if (auditMsg != \"\") {\n              _this4.handleAuditSubmit(activeAuditId, auditMsg);\n            }\n          }\n        },\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), auditMsg === \"\" ? React.createElement(\"small\", {\n        className: \"text-red-np\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \" \", \"Please write something\") : null)), React.createElement(\"div\", {\n        className: \"form-group row m-t-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"md-btn md-raised m-b-sm w-xs blue\",\n        onClick: function onClick() {\n          if (auditMsg != \"\") {\n            _this4.handleAuditSubmit(activeAuditId, auditMsg);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Submit\"))))))), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row no-gutter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, !show_alert_message ? React.createElement(\"div\", {\n        className: \"col-xs-12 text-red bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Important:\"), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"-Your monthly audit of inventories is pending.\"), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"-Click on Audit Pending button to do audit of an inventory.\"), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"-Once you are done with all the inventories you will be able to access rest of HR app.\")) : null), React.createElement(AssignDevice, {\n        handleCloseAssign: this.handleCloseAssign,\n        openAssign: this.state.openAssigned,\n        handleAddDialog: this.handleAddDialog,\n        unassignDeviceList: this.state.unassignDeviceList,\n        callAssignDevice: this.callAssignDevice,\n        user_id: this.state.user_id,\n        loggedUser: this.props.loggedUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(DeviceDetails, {\n        unassignDevice: this.unassignDevice,\n        userAssignMachine: this.state.user_assign_machine,\n        callUpdateUserDeviceDetails: this.callUpdateUserDeviceDetails,\n        loggedUser: this.props.loggedUser,\n        handleAuditClick: this.handleAuditClick,\n        activeAuditId: this.state.activeAuditId,\n        activeAudits: this.state.activeAudits,\n        showPending: this.props.showPending,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })), React.createElement(UnassignDevice, {\n        callAddUserComment: this.callAddUserComment,\n        user_Id: this.state.user_profile_detail.user_Id,\n        handleClose: this.handleClose,\n        open: this.state.openUnassigned,\n        device: this.state.device,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MyInventory;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    myProfile: state.myProfile.toJS(),\n    unassignedDeviceList: state.manageDevice.toJS(),\n    showPending: state.myProfile.toJS().showPending\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onAddAuditComment: function onAddAuditComment(id, msg) {\n      return dispatch(actionsMyProfile.addInventoryAudit(id, msg));\n    },\n    onMyProfileDetails: function onMyProfileDetails() {\n      return dispatch(actionsMyProfile.getMyProfileDetails());\n    },\n    onUpdateDeviceDetails: function onUpdateDeviceDetails(newDeviceDetails) {\n      return dispatch();\n    },\n    onAddUserComment: function onAddUserComment(addUserCommentDetails) {\n      return dispatch(actionsManageDevice.addUserComment(addUserCommentDetails));\n    },\n    onUnassignDeviceList: function onUnassignDeviceList() {\n      return dispatch(actionsManageDevice.unassignDeviceList());\n    },\n    onAssignDevice: function onAssignDevice(assign_device) {\n      return dispatch(actionsManageDevice.assignDevice(assign_device));\n    },\n    onGetMyInventory: function onGetMyInventory() {\n      return dispatch(actionsMyProfile.getMyInventory());\n    }\n  };\n};\n\nvar RouterVisibleMyInventory = withRouter(connect(mapStateToProps, mapDispatchToProps)(MyInventory));\nexport default RouterVisibleMyInventory;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/inventory/containers/myInventory.jsx"],"names":["React","connect","withRouter","notify","Menu","isNotUserValid","Header","DeviceDetails","actionsMyProfile","actions","actionsManageDevice","UnassignDevice","AssignDevice","_","$","MyInventory","props","handleAuditClick","val","setState","activeAuditId","id","activeItemName","machine_name","handleAuditSubmit","auditMsg","activeBtn","state","activeAudits","concat","modal","onAddAuditComment","then","res","onGetMyInventory","catch","remainActive","filter","n","user_id","status_message","openUnassigned","openAssigned","user_profile_detail","user_assign_machine","device","unassignDeviceList","show_alert_message","onIsAlreadyLogin","callUpdateUserDeviceDetails","bind","unassignDevice","handleClose","handleAddDialog","handleCloseAssign","callAddUserComment","callAssignDevice","onUnassignDeviceList","onMyProfileDetails","isNotValid","location","pathname","loggedUser","status","redirectTo","history","push","myProfile","myInventory","map","audit_current_month_status","newDeviceDetails","onUpdateDeviceDetails","assign_device","onAssignDevice","data","error","unassignedDeviceList","addUserCommentDetails","onAddUserComment","e","target","value","keyCode","showPending","user_Id","Component","mapStateToProps","frontend","toJS","logged_user","userLogin","manageDevice","mapDispatchToProps","dispatch","isAlreadyLogin","msg","addInventoryAudit","getMyProfileDetails","addUserComment","assignDevice","getMyInventory","RouterVisibleMyInventory"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { notify } from \"../../../services/notify\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport DeviceDetails from \"../../../components/inventory/deviceDetails\";\nimport * as actionsMyProfile from \"../../../redux/myProfile/actions/myProfile\";\nimport * as actions from '../../../redux/actions';\nimport * as actionsManageDevice from \"../../../redux/inventory/actions/inventory\";\nimport UnassignDevice from \"../../../modules/inventory/components/UnassignDevice\";\nimport AssignDevice from \"../../../modules/inventory/components/AssignDevice\";\nimport _ from \"lodash\";\nimport $ from 'jquery';\n\nclass MyInventory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_id: [],\n      status_message: \"\",\n      openUnassigned: false,\n      openAssigned: false,\n      user_profile_detail: {},\n      user_assign_machine: [],\n      device: [],\n      unassignDeviceList: [],\n      activeAuditId: \"\",\n      auditMsg: \"\",\n      activeItemName: \"\",\n      show_alert_message: true,\n      activeAudits: []\n    };\n    this.props.onIsAlreadyLogin();\n    this.callUpdateUserDeviceDetails = this.callUpdateUserDeviceDetails.bind(\n      this\n    );\n    this.unassignDevice = this.unassignDevice.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleAddDialog = this.handleAddDialog.bind(this);\n    this.handleCloseAssign = this.handleCloseAssign.bind(this);\n    this.callAddUserComment = this.callAddUserComment.bind(this);\n    this.callAssignDevice = this.callAssignDevice.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.onUnassignDeviceList();\n    this.props.onMyProfileDetails();\n    this.props.onGetMyInventory();\n  }\n  componentWillReceiveProps(props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status && isNotValid.redirectTo !== '/my_inventory') {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    this.setState({\n      user_profile_detail: props.myProfile.user_profile_detail,\n      user_assign_machine: props.myProfile.myInventory,\n      show_alert_message: true\n    });\n    if (props && props.myProfile && props.myProfile.myInventory) {\n      _.map(props.myProfile.myInventory, val => {\n        if (!val.audit_current_month_status.status) {\n          this.setState({ show_alert_message: false });\n        }\n      });\n    }\n  }\n\n  callUpdateUserDeviceDetails(newDeviceDetails) {\n    this.props.onUpdateDeviceDetails(newDeviceDetails);\n  }\n  callAssignDevice(assign_device) {\n    this.props.onAssignDevice(assign_device).then(\n      data => {\n        this.props.onGetMyInventory();\n        notify(\"Success!\", data, \"success\");\n      },\n      error => {\n        notify(\"Error!\", error, \"error\");\n      }\n    );\n  }\n  unassignDevice(val) {\n    this.setState({\n      openUnassigned: true,\n      status_message: \"\",\n      device: val\n    });\n  }\n  handleClose() {\n    this.setState({\n      openUnassigned: false,\n      status_message: \"\"\n    });\n  }\n  handleCloseAssign() {\n    this.setState({\n      openAssigned: false,\n      status_message: \"\"\n    });\n  }\n  handleAddDialog() {\n    this.setState({\n      user_id: this.props.loggedUser.data.id,\n      unassignDeviceList: this.props.unassignedDeviceList.unassignedDeviceList,\n      openAssigned: true,\n      status_message: \"\"\n    });\n  }\n  callAddUserComment(addUserCommentDetails) {\n    this.props.onAddUserComment(addUserCommentDetails);\n    this.setState({\n      openUnassigned: false,\n      status_message: \"\"\n    });\n  }\n  handleAuditClick = val => {\n    this.setState({\n      activeAuditId: val.id,\n      activeItemName: val.machine_name\n    });\n  };\n  handleAuditSubmit = (activeAuditId, auditMsg) => {\n    const activeBtn = this.state.activeAudits.concat(activeAuditId);\n    this.setState({\n      activeAudits: activeBtn\n    });\n    $(\"#modalAudit\").modal(\"hide\");\n    this.props\n      .onAddAuditComment(activeAuditId, auditMsg)\n      .then(res => {\n        this.props.onGetMyInventory();\n      })\n      .catch(() => {\n        const remainActive = _.filter(this.state.activeAudits, function(n) {          \n          return n !== activeAuditId;\n        });        \n        this.setState({\n          activeAudits: remainActive\n        });\n      });\n    this.setState({\n      auditMsg: \"\"\n    });\n  };\n  render() {\n    const {\n      auditMsg,\n      activeAuditId,\n      activeItemName,\n      show_alert_message\n    } = this.state;\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={\"My Inventory\"} {...this.props} />\n          <div id=\"modalAudit\" className=\"modal\" data-backdrop=\"true\">\n            <div className=\"modal-dialog modal-lg\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <div>\n                    <div className=\"col-xs-11\">\n                      <h5 className=\"modal-title\">Audit of {activeItemName}</h5>\n                    </div>\n                    <div className=\"col-xs-1\">\n                      <button\n                        className=\"btn btn-icon white\"\n                        data-dismiss=\"modal\"\n                      >\n                        <i className=\"fa fa-remove\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"modal-body p-lg\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 form-control-label\">\n                      Message\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <small className=\"text-red-np\">\n                        <i>\n                          Add a short description about inventory. Eg. Working\n                          fine, keys not working, etc.\n                        </i>\n                      </small>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={auditMsg}\n                        onChange={e =>\n                          this.setState({\n                            auditMsg: e.target.value\n                          })\n                        }\n                        onKeyUp={e => {\n                          if (e.keyCode === 13) {\n                            if (auditMsg != \"\") {\n                              this.handleAuditSubmit(activeAuditId, auditMsg);\n                            }\n                          }\n                        }}\n                        required\n                      />\n                      {auditMsg === \"\" ? (\n                        <small className=\"text-red-np\">\n                          {\" \"}\n                          Please write something\n                        </small>\n                      ) : null}\n                    </div>\n                  </div>\n                  <div className=\"form-group row m-t-md\">\n                    <div className=\"col-sm-10\">\n                      <button\n                        className=\"md-btn md-raised m-b-sm w-xs blue\"\n                        onClick={() => {\n                          if (auditMsg != \"\") {\n                            this.handleAuditSubmit(activeAuditId, auditMsg);\n                          }\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row no-gutter\">\n                {!show_alert_message ? (\n                  <div className=\"col-xs-12 text-red bg-white\">\n                    <h6>Important:</h6>\n                    <h6>-Your monthly audit of inventories is pending.</h6>\n                    <h6>\n                      -Click on Audit Pending button to do audit of an\n                      inventory.\n                    </h6>\n                    <h6>\n                      -Once you are done with all the inventories you will be\n                      able to access rest of HR app.\n                    </h6>\n                  </div>\n                ) : null}\n              </div>\n              <AssignDevice\n                handleCloseAssign={this.handleCloseAssign}\n                openAssign={this.state.openAssigned}\n                handleAddDialog={this.handleAddDialog}\n                unassignDeviceList={this.state.unassignDeviceList}\n                callAssignDevice={this.callAssignDevice}\n                user_id={this.state.user_id}\n                loggedUser={this.props.loggedUser}\n              />\n              <DeviceDetails\n                unassignDevice={this.unassignDevice}\n                userAssignMachine={this.state.user_assign_machine}\n                callUpdateUserDeviceDetails={this.callUpdateUserDeviceDetails}\n                loggedUser={this.props.loggedUser}\n                handleAuditClick={this.handleAuditClick}\n                activeAuditId={this.state.activeAuditId}\n                activeAudits={this.state.activeAudits}\n                showPending={this.props.showPending}\n              />\n            </div>\n            <UnassignDevice\n              callAddUserComment={this.callAddUserComment}\n              user_Id={this.state.user_profile_detail.user_Id}\n              handleClose={this.handleClose}\n              open={this.state.openUnassigned}\n              device={this.state.device}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) { \n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    myProfile: state.myProfile.toJS(),\n    unassignedDeviceList: state.manageDevice.toJS(),\n    showPending: state.myProfile.toJS().showPending\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onAddAuditComment: (id, msg) => {\n      return dispatch(actionsMyProfile.addInventoryAudit(id, msg));\n    },\n    onMyProfileDetails: () => {\n      return dispatch(actionsMyProfile.getMyProfileDetails());\n    },\n    onUpdateDeviceDetails: newDeviceDetails => {\n      return dispatch(\n        // actionsMyProfile.updateUserDeviceDetails(newDeviceDetails)\n      );\n    },\n    onAddUserComment: addUserCommentDetails => {\n      return dispatch(\n        actionsManageDevice.addUserComment(addUserCommentDetails)\n      );\n    },\n    onUnassignDeviceList: () => {\n      return dispatch(actionsManageDevice.unassignDeviceList());\n    },\n    onAssignDevice: assign_device => {\n      return dispatch(actionsManageDevice.assignDevice(assign_device));\n    },\n    onGetMyInventory: () => {\n      return dispatch(actionsMyProfile.getMyInventory());\n    }\n  };\n};\n\nconst RouterVisibleMyInventory = withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyInventory)\n);\n\nexport default RouterVisibleMyInventory;\n"]},"metadata":{},"sourceType":"module"}