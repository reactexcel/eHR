{"ast":null,"code":"import Immutable from 'immutable';\nvar initialState = {\n  show_loading: '',\n  form_login_status: '',\n  form_adduser_status: '',\n  form_addpoll_title: '',\n  form_addpoll_options: Immutable.List([]),\n  form_addpoll_status: '',\n  poll_vote_status: '',\n  voted_poll_ids: Immutable.List([]),\n  edit_poll_status: ''\n};\nexport function frontend() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.Map(initialState);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ACTION_SHOW_LOADING') {\n    return state.set('show_loading', '1');\n  } else if (action.type === 'ACTION_HIDE_LOADING') {\n    return state.set('show_loading', '');\n  } else if (action.type === 'ACTION_FORM_ADD_USER_STATUS_SUCCESS') {\n    return state.set('form_adduser_status', action.payload);\n  } else if (action.type === 'ACTION_FORM_ADD_USER_STATUS_FAIL') {\n    return state.set('form_adduser_status', action.payload);\n  } else if (action.type === 'ACTION_FRONTEND_ADD_POLL_OPTION') {\n    var ss = state.get('form_addpoll_options');\n    return state.set('form_addpoll_options', ss.push(action.payload));\n  } else if (action.type === 'ACTION_FRONTEND_DELETE_ADD_POLL_OPTION') {\n    var _ss = state.get('form_addpoll_options');\n\n    return state.set('form_addpoll_options', _ss.delete(action.payload));\n  } else if (action.type === 'ACTION_ADD_POLL_STATUS_SUCCESS') {\n    // let ss = state.get('form_addpoll_options')\n    return state.set('form_addpoll_options', Immutable.List([])).set('form_addpoll_status', action.payload);\n  } else if (action.type === 'ACTION_POLL_VOTE_SUCCESS') {\n    return state.set('poll_vote_status', action.payload);\n  } else if (action.type === 'ACTION_POLL_VOTE_FAIL') {\n    return state.set('poll_vote_status', action.payload);\n  } else if (action.type === 'ACTION_POLL_VOTE_ERROR') {\n    return state.set('poll_vote_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_VOTED_POLLS_ID') {\n    var _ss2 = state.get('voted_poll_ids');\n\n    return state.set('voted_poll_ids', _ss2.push(action.payload));\n  } else if (action.type === 'ACTION_NEW_OPTION_ADDED_SUCCESS') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_NEW_OPTION_ADDED_FAIL') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_NEW_OPTION_ADDED_ERROR') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_OPTION_SUCCESS') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_OPTION_FAIL') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_OPTION_ERROR') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_POLL_TITLE_SUCCESS') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_POLL_TITLE_FAIL') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_POLL_TITLE_ERROR') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_SUCCESS') {\n    return state.set('form_addpoll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_FAIL') {\n    return state.set('form_addpoll_status', action.payload);\n  } else {\n    return state;\n  }\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/generic/reducers/frontend.js"],"names":["Immutable","initialState","show_loading","form_login_status","form_adduser_status","form_addpoll_title","form_addpoll_options","List","form_addpoll_status","poll_vote_status","voted_poll_ids","edit_poll_status","frontend","state","Map","action","type","set","payload","ss","get","push","delete"],"mappings":"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","sourcesContent":["import Immutable from 'immutable';\n\nlet initialState = {\n  show_loading:         '',\n  form_login_status:    '',\n  form_adduser_status:  '',\n  form_addpoll_title:   '',\n  form_addpoll_options: Immutable.List([]),\n  form_addpoll_status:  '',\n  poll_vote_status:     '',\n  voted_poll_ids:       Immutable.List([]),\n  edit_poll_status:     ''\n};\n\nexport function frontend (state = Immutable.Map(initialState), action) {\n  if (action.type === 'ACTION_SHOW_LOADING') {\n    return state.set('show_loading', '1');\n  } else if (action.type === 'ACTION_HIDE_LOADING') {\n    return state.set('show_loading', '');\n  }\telse if (action.type === 'ACTION_FORM_ADD_USER_STATUS_SUCCESS') {\n    return state.set('form_adduser_status', action.payload);\n  } else if (action.type === 'ACTION_FORM_ADD_USER_STATUS_FAIL') {\n    return state.set('form_adduser_status', action.payload);\n  } else if (action.type === 'ACTION_FRONTEND_ADD_POLL_OPTION') {\n    let ss = state.get('form_addpoll_options');\n    return state.set('form_addpoll_options', ss.push(action.payload));\n  } else if (action.type === 'ACTION_FRONTEND_DELETE_ADD_POLL_OPTION') {\n    let ss = state.get('form_addpoll_options');\n    return state.set('form_addpoll_options', ss.delete(action.payload));\n  } else if (action.type === 'ACTION_ADD_POLL_STATUS_SUCCESS') {\n    // let ss = state.get('form_addpoll_options')\n    return state.set('form_addpoll_options', Immutable.List([]))\n    .set('form_addpoll_status', action.payload);\n  } else if (action.type === 'ACTION_POLL_VOTE_SUCCESS') {\n    return state.set('poll_vote_status', action.payload);\n  } else if (action.type === 'ACTION_POLL_VOTE_FAIL') {\n    return state.set('poll_vote_status', action.payload);\n  } else if (action.type === 'ACTION_POLL_VOTE_ERROR') {\n    return state.set('poll_vote_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_VOTED_POLLS_ID') {\n    let ss = state.get('voted_poll_ids');\n    return state.set('voted_poll_ids', ss.push(action.payload));\n  } else if (action.type === 'ACTION_NEW_OPTION_ADDED_SUCCESS') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_NEW_OPTION_ADDED_FAIL') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_NEW_OPTION_ADDED_ERROR') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_OPTION_SUCCESS') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_OPTION_FAIL') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_OPTION_ERROR') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_POLL_TITLE_SUCCESS') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_POLL_TITLE_FAIL') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_UPDATE_POLL_TITLE_ERROR') {\n    return state.set('edit_poll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_SUCCESS') {\n    return state.set('form_addpoll_status', action.payload);\n  } else if (action.type === 'ACTION_DELETE_POLL_FAIL') {\n    return state.set('form_addpoll_status', action.payload);\n  } else {\n    return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}