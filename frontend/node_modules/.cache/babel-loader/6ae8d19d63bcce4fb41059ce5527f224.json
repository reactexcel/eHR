{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUsersList);\n\nimport { createAction } from 'redux-actions';\nimport * as constants from '../../../redux/constants';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend'; //* *********************************\n\nimport { fireAjax } from '../../../services/index';\nimport { call, put } from 'redux-saga/effects';\nimport * as actions from '../../../redux/actions';\nexport function getUsersList(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function getUsersList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_enable_user'\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.error === 0)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(actions.successUsersList(response.data));\n\n        case 7:\n          _context.next = 11;\n          break;\n\n        case 9:\n          _context.next = 11;\n          return put(actions.errorUsersList(response.data.message));\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put(actions.errorUsersList('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_enable_user\" action\\n', _context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n} //* ************************************\n\nexport function success_usersList(data) {\n  return createAction(constants.SUCCESS_USERSLIST)(data);\n}\nexport function empty_usersList(data) {// return createAction(constants.EMPTY_USERSLIST)(data);\n}\nexport function error_usersList(data) {\n  return createAction(constants.ERROR_USERSLIST)(data);\n}\n\nfunction async_get_users_list(action) {\n  return fireAjax('POST', '', {\n    'action': 'get_enable_user',\n    'sorted_by': action && action.sort_by ? action.sort_by : null\n  });\n}\n\nexport function get_users_list(action) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_get_users_list(action).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_usersList(json.data));\n          resolve(json.data);\n        } else {// dispatch(empty_usersList([]));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_usersList([]));\n      });\n    });\n  };\n} // ------get disabled user list\n\nexport function success_disabled_user_list(data) {\n  return createAction(constants.ACTION_SUCCESS_DISABLED_USERSLIST)(data);\n}\nexport function error_disabled_users_list(data) {\n  return createAction(constants.ACTION_ERROR_DISABLED_USERSLIST)(data);\n}\n\nfunction async_getDisabledUsersList() {\n  return fireAjax('POST', '', {\n    'action': 'show_disabled_users'\n  });\n}\n\nexport function getDisabledUsersList() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getDisabledUsersList().then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(success_disabled_user_list(json));\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_disabled_users_list([]));\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/generic/actions/usersList.js"],"names":["getUsersList","createAction","constants","show_loading","hide_loading","fireAjax","call","put","actions","action","response","error","successUsersList","data","errorUsersList","message","console","warn","success_usersList","SUCCESS_USERSLIST","empty_usersList","error_usersList","ERROR_USERSLIST","async_get_users_list","sort_by","get_users_list","dispatch","getState","Promise","resolve","reject","then","json","success_disabled_user_list","ACTION_SUCCESS_DISABLED_USERSLIST","error_disabled_users_list","ACTION_ERROR_DISABLED_USERSLIST","async_getDisabledUsersList","getDisabledUsersList"],"mappings":";;;;yBASiBA,Y;;AATjB,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAO,KAAKC,SAAZ,MAA2B,0BAA3B;AACA,SAAQC,YAAR,EAAsBC,YAAtB,QAAyC,yCAAzC,C,CAEA;;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,oBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AAEA,OAAO,SAAUR,YAAV,CAAwBS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMH,IAAI,CAACD,QAAD,EAAW,MAAX,EAAmB,EAAnB,EAAuB;AAChD,sBAAU;AADsC,WAAvB,CAAV;;AAFd;AAEGK,UAAAA,QAFH;;AAAA,gBAKCA,QAAQ,CAACC,KAAT,KAAmB,CALpB;AAAA;AAAA;AAAA;;AAAA;AAMD,iBAAMJ,GAAG,CAACC,OAAO,CAACI,gBAAR,CAAyBF,QAAQ,CAACG,IAAlC,CAAD,CAAT;;AANC;AAAA;AAAA;;AAAA;AAAA;AAQD,iBAAMN,GAAG,CAACC,OAAO,CAACM,cAAR,CAAuBJ,QAAQ,CAACG,IAAT,CAAcE,OAArC,CAAD,CAAT;;AARC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWH,iBAAMR,GAAG,CAACC,OAAO,CAACM,cAAR,CAAuB,iBAAvB,CAAD,CAAT;;AAXG;AAYHE,UAAAA,OAAO,CAACC,IAAR,CAAa,gDAAb;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAeP;;AAEA,OAAO,SAASC,iBAAT,CAA4BL,IAA5B,EAAkC;AACvC,SAAOZ,YAAY,CAACC,SAAS,CAACiB,iBAAX,CAAZ,CAA0CN,IAA1C,CAAP;AACD;AAED,OAAO,SAASO,eAAT,CAA0BP,IAA1B,EAAgC,CACrC;AACD;AAED,OAAO,SAASQ,eAAT,CAA0BR,IAA1B,EAAgC;AACrC,SAAOZ,YAAY,CAACC,SAAS,CAACoB,eAAX,CAAZ,CAAwCT,IAAxC,CAAP;AACD;;AAED,SAASU,oBAAT,CAA+Bd,MAA/B,EAAuC;AACrC,SAAOJ,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAAC,cAAU,iBAAX;AAA8B,iBAAaI,MAAM,IAAIA,MAAM,CAACe,OAAjB,GAA2Bf,MAAM,CAACe,OAAlC,GAA4C;AAAvF,GAAb,CAAf;AACD;;AAED,OAAO,SAASC,cAAT,CAAyBhB,MAAzB,EAAiC;AACtC,SAAO,UAAUiB,QAAV,EAAoBC,QAApB,EAA8B;AACnC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACvB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1BoB,MAAAA,oBAAoB,CAACd,MAAD,CAApB,CAA6BsB,IAA7B,CAAkC,UAACC,IAAD,EAAU;AAC1CN,QAAAA,QAAQ,CAACtB,YAAY,EAAb,CAAR,CAD0C,CAChB;;AAC1B,YAAI4B,IAAI,CAACrB,KAAL,IAAc,CAAlB,EAAqB;AACnBe,UAAAA,QAAQ,CAACR,iBAAiB,CAACc,IAAI,CAACnB,IAAN,CAAlB,CAAR;AACAgB,UAAAA,OAAO,CAACG,IAAI,CAACnB,IAAN,CAAP;AACD,SAHD,MAGO,CACL;AACD;AACF,OARD,EAQG,UAACF,KAAD,EAAW;AACZe,QAAAA,QAAQ,CAACtB,YAAY,EAAb,CAAR,CADY,CACc;;AAC1BsB,QAAAA,QAAQ,CAACL,eAAe,CAAC,EAAD,CAAhB,CAAR;AACD,OAXD;AAYD,KAdM,CAAP;AAeD,GAhBD;AAiBD,C,CAED;;AAEA,OAAO,SAASY,0BAAT,CAAqCpB,IAArC,EAA2C;AAChD,SAAOZ,YAAY,CAACC,SAAS,CAACgC,iCAAX,CAAZ,CAA0DrB,IAA1D,CAAP;AACD;AAED,OAAO,SAASsB,yBAAT,CAAoCtB,IAApC,EAA0C;AAC/C,SAAOZ,YAAY,CAACC,SAAS,CAACkC,+BAAX,CAAZ,CAAwDvB,IAAxD,CAAP;AACD;;AAED,SAASwB,0BAAT,GAAuC;AACrC,SAAOhC,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAAC,cAAU;AAAX,GAAb,CAAf;AACD;;AAED,OAAO,SAASiC,oBAAT,GAAiC;AACtC,SAAO,UAAUZ,QAAV,EAAoBC,QAApB,EAA8B;AACnC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACvB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1BkC,MAAAA,0BAA0B,GAAGN,IAA7B,CAAkC,UAACC,IAAD,EAAU;AAC1CN,QAAAA,QAAQ,CAACtB,YAAY,EAAb,CAAR,CAD0C,CAChB;;AAC1BsB,QAAAA,QAAQ,CAACO,0BAA0B,CAACD,IAAD,CAA3B,CAAR;AACD,OAHD,EAGG,UAACrB,KAAD,EAAW;AACZe,QAAAA,QAAQ,CAACtB,YAAY,EAAb,CAAR,CADY,CACc;;AAC1BsB,QAAAA,QAAQ,CAACS,yBAAyB,CAAC,EAAD,CAA1B,CAAR;AACD,OAND;AAOD,KATM,CAAP;AAUD,GAXD;AAYD","sourcesContent":["import {createAction} from 'redux-actions';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\n//* *********************************\nimport {fireAjax} from '../../../services/index';\nimport {call, put} from 'redux-saga/effects';\nimport * as actions from '../../../redux/actions';\n\nexport function* getUsersList (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action': 'get_enable_user'\n    });\n    if (response.error === 0) {\n      yield put(actions.successUsersList(response.data));\n    } else {\n      yield put(actions.errorUsersList(response.data.message));\n    }\n  } catch (e) {\n    yield put(actions.errorUsersList('Error Occurs !!'));\n    console.warn('Some error found in \"get_enable_user\" action\\n', e);\n  }\n}\n//* ************************************\n\nexport function success_usersList (data) {\n  return createAction(constants.SUCCESS_USERSLIST)(data);\n}\n\nexport function empty_usersList (data) {\n  // return createAction(constants.EMPTY_USERSLIST)(data);\n}\n\nexport function error_usersList (data) {\n  return createAction(constants.ERROR_USERSLIST)(data);\n}\n\nfunction async_get_users_list (action) {\n  return fireAjax('POST', '', {'action': 'get_enable_user', 'sorted_by': action && action.sort_by ? action.sort_by : null});\n}\n\nexport function get_users_list (action) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_users_list(action).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_usersList(json.data));\n          resolve(json.data);\n        } else {\n          // dispatch(empty_usersList([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_usersList([]));\n      });\n    });\n  };\n}\n\n// ------get disabled user list\n\nexport function success_disabled_user_list (data) {\n  return createAction(constants.ACTION_SUCCESS_DISABLED_USERSLIST)(data);\n}\n\nexport function error_disabled_users_list (data) {\n  return createAction(constants.ACTION_ERROR_DISABLED_USERSLIST)(data);\n}\n\nfunction async_getDisabledUsersList () {\n  return fireAjax('POST', '', {'action': 'show_disabled_users'});\n}\n\nexport function getDisabledUsersList () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getDisabledUsersList().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(success_disabled_user_list(json));\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_disabled_users_list([]));\n      });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}