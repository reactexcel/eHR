{"ast":null,"code":"import Immutable from 'immutable';\nvar initialState = {\n  'status_message': '',\n  'name': '',\n  'profileImage': '',\n  'userid': '',\n  'year': '',\n  'month': '',\n  'monthName': '',\n  'date': '',\n  'day': '',\n  'entry_time': '',\n  'exit_time': '',\n  'total_working': ''\n};\nexport function userDaySummary() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.fromJS(initialState);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ACTION_SUCCESS_USER_DAY_SUMMARY') {\n    return state.set('name', action.payload.name).set('profileImage', action.payload.profileImage).set('userid', action.payload.userid).set('year', action.payload.year).set('month', action.payload.month).set('monthName', action.payload.monthName).set('date', action.payload.date).set('day', action.payload.day).set('entry_time', action.payload.entry_time).set('exit_time', action.payload.exit_time).set('total_working', action.payload.total_working).set('status_message', '');\n  } else if (action.type === 'ACTION_EMPTY_USER_DAY_SUMMARY') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_USER_DAY_SUMMARY') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_SUCCESS_UPDATE_USER_DAY_SUMMARY') {\n    return state.set('name', action.payload.name).set('profileImage', action.payload.profileImage).set('userid', action.payload.userid).set('year', action.payload.year).set('month', action.payload.month).set('monthName', action.payload.monthName).set('date', action.payload.date).set('day', action.payload.day).set('entry_time', action.payload.entry_time).set('exit_time', action.payload.exit_time).set('total_working', action.payload.total_working).set('status_message', '');\n  } else if (action.type === 'ACTION_EMPTY_UPDATE_USER_DAY_SUMMARY') {\n    return state.set('status_message', action.payload);\n  } else if (action.type === 'ACTION_ERROR_UPDATE_USER_DAY_SUMMARY') {\n    return state.set('status_message', '');\n  } else {\n    return state.set('status_message', '');\n  }\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/attendance/reducers/userDaySummary.js"],"names":["Immutable","initialState","userDaySummary","state","fromJS","action","type","set","payload","name","profileImage","userid","year","month","monthName","date","day","entry_time","exit_time","total_working"],"mappings":"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","sourcesContent":["import Immutable from 'immutable';\n\nlet initialState = {\n  'status_message': '',\n  'name':           '',\n  'profileImage':   '',\n  'userid':         '',\n  'year':           '',\n  'month':          '',\n  'monthName':      '',\n  'date':           '',\n  'day':            '',\n  'entry_time':     '',\n  'exit_time':      '',\n  'total_working':  ''\n};\n\nexport function userDaySummary (state = Immutable.fromJS(initialState), action) {\n  if (action.type === 'ACTION_SUCCESS_USER_DAY_SUMMARY') {\n    return state.set('name', action.payload.name)\n        .set('profileImage', action.payload.profileImage)\n        .set('userid', action.payload.userid)\n        .set('year', action.payload.year)\n        .set('month', action.payload.month)\n        .set('monthName', action.payload.monthName)\n        .set('date', action.payload.date)\n        .set('day', action.payload.day)\n        .set('entry_time', action.payload.entry_time)\n        .set('exit_time', action.payload.exit_time)\n        .set('total_working', action.payload.total_working)\n        .set('status_message', '');\n  } else if (action.type === 'ACTION_EMPTY_USER_DAY_SUMMARY') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_USER_DAY_SUMMARY') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_SUCCESS_UPDATE_USER_DAY_SUMMARY') {\n    return state.set('name', action.payload.name)\n        .set('profileImage', action.payload.profileImage)\n        .set('userid', action.payload.userid)\n        .set('year', action.payload.year)\n        .set('month', action.payload.month)\n        .set('monthName', action.payload.monthName)\n        .set('date', action.payload.date)\n        .set('day', action.payload.day)\n        .set('entry_time', action.payload.entry_time)\n        .set('exit_time', action.payload.exit_time)\n        .set('total_working', action.payload.total_working)\n        .set('status_message', '');\n  } else if (action.type === 'ACTION_EMPTY_UPDATE_USER_DAY_SUMMARY') {\n    return state.set('status_message', action.payload);\n  } else if (action.type === 'ACTION_ERROR_UPDATE_USER_DAY_SUMMARY') {\n    return state.set('status_message', '');\n  } else {\n    return state.set('status_message', '');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}