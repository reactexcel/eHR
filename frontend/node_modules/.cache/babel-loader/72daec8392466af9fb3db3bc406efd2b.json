{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport { fireAjax } from '../../../services/index';\nimport { notify } from '../../../services/notify';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nimport * as actionsMyProfile from \"../../../redux/myProfile/actions/myProfile\";\nimport * as constants from '../../../redux/constants';\nimport { createInflate } from 'zlib';\nexport function success_add_new_machine(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_MACHINE)(data);\n}\nexport function error_add_new_machine(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_MACHINE)(data);\n}\n\nfunction async_addNewMachine(n_machine_type, n_machine_name, n_machine_price, n_serial_no, n_purchase_date, n_operating_system, n_status, n_comment, n_warranty, n_warranty_comment, n_repair_comment, n_bill_no, n_user_Id, n_unassign_comment, n_option_warranty) {\n  return fireAjax('POST', '', {\n    'action': 'add_office_machine',\n    'machine_type': n_machine_type,\n    'machine_name': n_machine_name,\n    'machine_price': n_machine_price,\n    'serial_no': n_serial_no,\n    'purchase_date': n_purchase_date,\n    'operating_system': n_operating_system,\n    'status': n_status,\n    'comment': n_comment,\n    'warranty': n_warranty,\n    'warranty_comment': n_warranty_comment,\n    'repair_comment': n_repair_comment,\n    'bill_no': n_bill_no,\n    'user_id': n_user_Id,\n    'unassign_comment': n_unassign_comment,\n    'warranty_years': n_option_warranty\n  });\n}\n\nexport function addNewMachine(new_machine_details) {\n  return function (dispatch, getState) {\n    var n_machine_type = '';\n    var n_machine_name = '';\n    var n_machine_price = '';\n    var n_serial_no = '';\n    var n_purchase_date = '';\n    var n_operating_system = '';\n    var n_status = '';\n    var n_comment = '';\n    var n_warranty = '';\n    var n_warranty_comment = '';\n    var n_repair_comment = '';\n    var n_bill_no = '';\n    var n_user_Id = '';\n    var n_unassign_comment = '';\n    var n_option_warranty = '';\n\n    if (typeof new_machine_details.machine_type === 'undefined' || new_machine_details.machine_type === '') {\n      return Promise.reject('Machine Type is empty');\n    } else {\n      n_machine_type = new_machine_details.machine_type;\n    }\n\n    if (typeof new_machine_details.machine_name === 'undefined' || new_machine_details.machine_name.trim() === '') {\n      return Promise.reject('Machine Name is empty');\n    } else {\n      n_machine_name = new_machine_details.machine_name;\n    }\n\n    if (typeof new_machine_details.machine_price === 'undefined' || new_machine_details.machine_price.trim() === '') {\n      return Promise.reject('Machine Price is empty');\n    } else {\n      n_machine_price = new_machine_details.machine_price;\n    }\n\n    if (typeof new_machine_details.serial_no === 'undefined' || new_machine_details.serial_no.trim() === '') {\n      return Promise.reject('Serial Number is empty');\n    } else {\n      n_serial_no = new_machine_details.serial_no;\n    }\n\n    if (typeof new_machine_details.purchase_date === 'undefined' || new_machine_details.purchase_date === '') {\n      return Promise.reject('Date of Purchase is empty');\n    } else {\n      n_purchase_date = new_machine_details.purchase_date;\n    }\n\n    if (typeof new_machine_details.operating_system === 'undefined') {\n      return Promise.reject('Operating System is empty');\n    } else {\n      n_operating_system = new_machine_details.operating_system;\n    }\n\n    if (typeof new_machine_details.status === 'undefined' || new_machine_details.status === '') {\n      return Promise.reject('Status is empty');\n    } else {\n      n_status = new_machine_details.status;\n    }\n\n    if (typeof new_machine_details.comment === 'undefined') {\n      return Promise.reject('Comment is empty');\n    } else {\n      n_comment = new_machine_details.comment;\n    }\n\n    if (typeof new_machine_details.warranty === 'undefined' || new_machine_details.warranty === '') {\n      return Promise.reject('Warranty Expire Date is empty');\n    } else {\n      n_warranty = new_machine_details.warranty;\n    }\n\n    if (typeof new_machine_details.warranty_comment === 'undefined') {\n      return Promise.reject('Warranty Comment is empty');\n    } else {\n      n_warranty_comment = new_machine_details.warranty_comment;\n    }\n\n    if (typeof new_machine_details.warranty_years === 'undefined' || new_machine_details.warranty_years === '') {\n      return Promise.reject('select warranty expiry option');\n    } else {\n      n_option_warranty = new_machine_details.warranty_years;\n    }\n\n    if (typeof new_machine_details.repair_comment === 'undefined') {\n      return Promise.reject('Repair Comment is empty');\n    } else {\n      n_repair_comment = new_machine_details.repair_comment;\n    }\n\n    if (typeof new_machine_details.bill_no === 'undefined' || new_machine_details.bill_no.trim() === '') {\n      return Promise.reject('Excellenece No is empty');\n    } else {\n      n_bill_no = new_machine_details.bill_no;\n    }\n\n    if (typeof new_machine_details.user_Id === 'undefined' || new_machine_details.user_Id === '') {\n      return Promise.reject('User Not Assign');\n    } else if (new_machine_details.user_Id == 'unassign') {\n      n_user_Id = null;\n    } else {\n      n_user_Id = new_machine_details.user_Id;\n    }\n\n    if (new_machine_details.user_Id == 'unassign') {\n      if (typeof new_machine_details.unassign_comment === 'undefined' || new_machine_details.unassign_comment.trim() === '') {\n        return Promise.reject('unassign comment is empty');\n      } else {\n        n_unassign_comment = new_machine_details.unassign_comment;\n      }\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      async_addNewMachine(n_machine_type, n_machine_name, n_machine_price, n_serial_no, n_purchase_date, n_operating_system, n_status, n_comment, n_warranty, n_warranty_comment, n_repair_comment, n_bill_no, n_user_Id, n_unassign_comment, n_option_warranty).then(function (json) {\n        dispatch(hide_loading());\n        dispatch(deviceCount());\n\n        if (json.error === 0) {\n          dispatch(success_add_new_machine(json.message));\n          dispatch(get_machines_detail());\n          dispatch(unapprovedUser());\n          dispatch(showTab());\n          resolve(json.message);\n        } else {\n          dispatch(error_add_new_machine(json.message));\n          reject(json.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(error_add_new_machine('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\nexport function showTab() {\n  return {\n    type: \"ACTION_SHOW_TAB\",\n    payload: true\n  };\n}\nexport function noTab() {\n  return {\n    type: \"ACTION_NO_TAB\",\n    payload: false\n  };\n} // Get Devicelist\n\nexport function success_device_list(data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_LIST)(data);\n}\nexport function empty_device_list(data) {\n  return createAction(constants.ACTION_EMPTY_DEVICE_LIST)(data);\n}\nexport function error_device_list(data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_LIST)(data);\n}\n\nfunction async_get_AllDevice() {\n  return fireAjax('POST', '', {\n    'action': 'get_machines_detail'\n  });\n}\n\nexport function get_machines_detail() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_get_AllDevice().then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_device_list(json.data));\n          resolve(json.data);\n        } else {\n          dispatch(empty_device_list([]));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_device_list([]));\n      });\n    });\n  };\n}\nexport function success_getDevice(data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICELIST)(data);\n}\n\nfunction getAsync_getDeviceById(n_inventory_id) {\n  return fireAjax('POST', '', {\n    'action': 'get_machine',\n    'id': n_inventory_id\n  });\n}\n\nexport function getDeviceById(device_id) {\n  return function (dispatch, getState) {\n    var n_inventory_id = '';\n\n    if (typeof device_id !== \"undefined\") {\n      n_inventory_id = device_id;\n    }\n\n    if (n_inventory_id.trim() === \"\") {// return Promise.reject(\"inventory id is empty\");\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_getDeviceById(n_inventory_id).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.data) {\n          dispatch(success_getDevice(json.data));\n          dispatch(success_getDevice(json.data));\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function success_updateDevice(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_DEVICELIST)(data);\n}\n\nfunction getAsync_updateDeviceById(deviceId, data) {\n  return fireAjax('POST', '', {\n    'action': 'update_office_machine',\n    'id': deviceId,\n    'machine_type': data.machine_type,\n    'machine_name': data.machine_name,\n    'machine_price': data.machine_price,\n    'serial_no': data.serial_no,\n    'purchase_date': data.purchase_date,\n    'mac_address': data.mac_address,\n    'operating_system': data.operating_system,\n    'status': data.status,\n    'comment': data.comment,\n    'warranty': data.warranty,\n    'warranty_comment': data.warranty_comment,\n    'repair_comment': data.repair_comment,\n    'bill_no': data.bill_no,\n    'user_id': data.user_Id,\n    'unassign_comment': data.unassign_comment,\n    'warranty_years': data.warranty_years\n  });\n}\n\nexport function updateDevice(id, data) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_updateDeviceById(id, data).then(function (res) {\n        dispatch(hide_loading());\n\n        if (res.error === 0) {\n          dispatch(deviceCount());\n          dispatch(get_machines_detail());\n          dispatch(unapprovedUser());\n          dispatch(success_updateDevice(res.message));\n          resolve(res.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function success_deleteDevice(data) {\n  return createAction(constants.ACTION_SUCCESS_DELETE_DEVICELIST)(data);\n}\n\nfunction getAsync_deleteDeviceById(deviceId, userId) {\n  return fireAjax('POST', '', {\n    'action': 'remove_machine_detail',\n    'id': deviceId,\n    'userId': userId\n  });\n}\n\nexport function deleteDevice(id, userId) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_deleteDeviceById(id, userId).then(function (res) {\n        dispatch(deviceCount());\n        dispatch(get_machines_detail());\n        dispatch(unapprovedUser());\n        dispatch(hide_loading());\n\n        if (res.error === 0) {\n          dispatch(success_deleteDevice(res.message));\n          resolve(res.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function success_assignDevice(data) {\n  return createAction(constants.ACTION_SUCCESS_ASSIGN_DEVICE)(data);\n}\nexport function error_assignDevice(data) {\n  return createAction(constants.ACTION_ERROR_ASSIGN_DEVICE)(data);\n}\n\nfunction getAsync_assignDeviceToUser(n_inventory_id, n_user_id) {\n  return fireAjax('POST', '', {\n    'action': 'assign_user_machine',\n    'machine_id': n_inventory_id,\n    'user_id': n_user_id\n  });\n}\n\nexport function assignDevice(assign_device) {\n  return function (dispatch, getState) {\n    var n_inventory_id = '';\n    var n_user_id = '';\n\n    if (typeof assign_device.user_id !== \"undefined\") {\n      n_user_id = assign_device.user_id;\n    }\n\n    if (typeof assign_device.inventory_id !== \"undefined\") {\n      n_inventory_id = assign_device.inventory_id;\n    } // if (n_user_id.trim() === \"\") {\n    //   return Promise.reject(\"User id is empty\");\n    // }\n\n\n    if (n_inventory_id.trim() === \"\") {\n      return Promise.reject(\"Inventory id is empty\");\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      dispatch(getDeviceById());\n      return getAsync_assignDeviceToUser(n_inventory_id, n_user_id).then(function (res) {\n        dispatch(unapprovedUser());\n        dispatch(get_machines_detail());\n        dispatch(hide_loading());\n        resolve(res.message); // }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(error_assignDevice('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\nexport function success_deviceType(data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_TYPE)(data);\n}\nexport function error_deviceType(data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_TYPE)(data);\n}\n\nfunction getAsync_assignDeviceType(deviceList) {\n  var newDevice = JSON.stringify(deviceList);\n  return fireAjax('POST', '', {\n    'action': 'add_machine_type',\n    'type': 'machine_type',\n    'value': newDevice\n  });\n}\n\nexport function assignDeviceType(newDevice) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_assignDeviceType(newDevice).then(function (res) {\n        dispatch(getDeviceType());\n        resolve(res);\n        dispatch(hide_loading());\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(error_deviceType('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n} // Device Type List\n\nexport function success_getDeviceType(data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICE_TYPE_LIST)(data);\n}\n\nfunction getAsync_getDeviceType() {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_type_list'\n  });\n}\n\nexport function getDeviceType() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_getDeviceType().then(function (res) {\n        dispatch(hide_loading());\n\n        if (res.data) {\n          var list = JSON.parse(res.data.value);\n          resolve(list);\n          dispatch(success_getDeviceType(list));\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n} // Device Status---\n\nexport function success_deviceStatus(data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_STATUS)(data);\n}\nexport function error_deviceStatus(data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_STATUS)(data);\n}\n\nfunction getAsync_assignDeviceStatus(statusValue, colorValue) {\n  // var statusNew = JSON.stringify(statusType)\n  // var colors = JSON.stringify(background)\n  return fireAjax('POST', '', {\n    'action': 'add_machine_status',\n    'type': 'machine_status',\n    'status': statusValue,\n    'color': colorValue\n  });\n}\n\nexport function assignDeviceStatus(statusValue, colorValue) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_assignDeviceStatus(statusValue, colorValue).then(function (res) {\n        // dispatch(getDeviceStatus())\n        resolve(res.data.message);\n        dispatch(hide_loading());\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(error_deviceType('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\nexport function success_getDeviceStatus(data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICE_STATUS_LIST)(data);\n}\n\nfunction getAsync_getDeviceStatus() {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_status_list'\n  });\n}\n\nexport function getDeviceStatus() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_getDeviceStatus().then(function (res) {\n        dispatch(hide_loading());\n        resolve(res.data);\n        dispatch(success_getDeviceStatus(res.data));\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function success_deleteDeviceStatus(data) {\n  return createAction(constants.ACTION_SUCCESS_DELETE_DEVICE_STATUS_LIST)(data);\n}\n\nfunction getAsync_deleteDeviceStatus(checkValue) {\n  return fireAjax('POST', '', {\n    'action': 'delete_machine_status',\n    'status': checkValue\n  });\n}\n\nexport function deleteDeviceStatus(checkValue) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_deleteDeviceStatus(checkValue).then(function (res) {\n        dispatch(hide_loading());\n        resolve(res);\n        dispatch(success_deleteDeviceStatus(res));\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function successDeviceCount(data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_COUNT)(data);\n}\n\nfunction getAsyncDeviceCount() {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_count'\n  });\n}\n\nexport function deviceCount() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncDeviceCount().then(function (res) {\n        dispatch(hide_loading());\n        resolve(res.data);\n        dispatch(successDeviceCount(res.data));\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function successAddInventoryComment(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_INVENTORY_COMMENT)(data);\n}\nexport function errorAddInventoryComment(data) {\n  return createAction(constants.ACTION_ERROR_ADD_INVENTORY_COMMENT)(data);\n}\n\nfunction async_addInventoryComment(n_comment, n_inventory_id) {\n  return fireAjax('POST', '', {\n    'action': 'add_inventory_comment',\n    'comment': n_comment,\n    'inventory_id': n_inventory_id\n  });\n}\n\nexport function addInventoryComment(add_inventory_comment) {\n  return function (dispatch, getState) {\n    var n_comment = '';\n    var n_inventory_id = '';\n\n    if (typeof add_inventory_comment.comment !== \"undefined\") {\n      n_comment = add_inventory_comment.comment;\n    }\n\n    if (typeof add_inventory_comment.inventory_id !== \"undefined\") {\n      n_inventory_id = add_inventory_comment.inventory_id;\n    }\n\n    if (n_comment.trim() === \"\") {\n      return Promise.reject(\"Comment is empty\");\n    }\n\n    if (n_inventory_id.trim() === \"\") {\n      return Promise.reject(\"inventory id is empty\");\n    }\n\n    return new Promise(function (resolve, reject) {\n      async_addInventoryComment(n_comment, n_inventory_id).then(function (res) {\n        if (res.error === 0) {\n          dispatch(successAddInventoryComment(res.message));\n          resolve(res.message);\n        } else {\n          dispatch(errorAddInventoryComment(res.message));\n        }\n      }, function (error) {\n        dispatch(errorAddInventoryComment('error occurs!!!'));\n      });\n    });\n  };\n}\nexport function successUnapprovedList(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_UNAPPROVED_USER)(data);\n}\n\nfunction getAsyncUnapprovedData(dataLogin) {\n  return fireAjax('POST', '', {\n    'action': 'get_unapproved_inventories'\n  });\n}\n\nexport function unapprovedUser() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncUnapprovedData().then(function (res) {\n        dispatch(hide_loading());\n        resolve(res);\n        dispatch(successUnapprovedList(res));\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function errorAddUserComment(data) {\n  return createAction(constants.ACTION_ERROR_ADD_USER_COMMENT)(data);\n}\nexport function successAddUserComment(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_USER_COMMENT)(data);\n}\n\nfunction asyncAddUserComment(n_comment, n_inventory_id) {\n  return fireAjax('POST', '', {\n    'action': 'unassigned_my_inventory',\n    'comment': n_comment,\n    'inventory_id': n_inventory_id\n  });\n}\n\nexport function addUserComment(addUserCommentDetails) {\n  return function (dispatch, getState) {\n    var n_comment = '';\n    var n_inventory_id = '';\n\n    if (typeof addUserCommentDetails.comment !== \"undefined\") {\n      n_comment = addUserCommentDetails.comment;\n    }\n\n    if (typeof addUserCommentDetails.inventory_id !== \"undefined\") {\n      n_inventory_id = addUserCommentDetails.inventory_id;\n    }\n\n    if (n_comment.trim() === \"\") {\n      notify('Warning!', 'Comment is empty', 'warning');\n      return Promise.reject(\"Comment is empty\");\n    }\n\n    if (n_inventory_id.trim() === \"\") {\n      notify('Warning!', 'Inventory id is empty', 'warning');\n      return Promise.reject(\"inventory id is empty\");\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return asyncAddUserComment(n_comment, n_inventory_id).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          dispatch(successAddUserComment(json.message));\n          notify('Success !', 'Comment added to unassign device', 'success');\n          dispatch(actionsMyProfile.getMyInventory());\n        } else {\n          dispatch(errorAddUserComment(json.message));\n          notify('Error !', json.message, 'error');\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(errorAddUserComment('error occurs!!!'));\n        notify('Error !', error, 'error');\n      });\n    });\n  };\n}\nexport function errorApprovedList(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_APPROVED_USER);\n}\nexport function successApprovedList(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_APPROVED_USER)(data);\n}\n\nfunction getAsyncApprovedData(id) {\n  return fireAjax('POST', '', {\n    'action': 'approve_machine',\n    id: id\n  });\n}\n\nexport function approvedUser(id) {\n  return function (dispatch, getState) {\n    if (typeof id === 'undefined' || id == '') {\n      return Promise.reject('id is empty');\n    } else {\n      id = id;\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncApprovedData(id).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          dispatch(successApprovedList(json.message));\n          dispatch(unapprovedUser());\n          dispatch(get_machines_detail());\n        } else {\n          dispatch(errorApprovedList(json.message));\n        }\n      }, function (error) {\n        // dispatch(errorAddusercomment('error occur'));\n        reject('error occur');\n      });\n    });\n  };\n}\nexport function successUnassignedDeviceList(data) {\n  return createAction(constants.ACTION_SUCCESS_UNASSIGNED_DEVICE_LIST)(data);\n}\n\nfunction getAsyncUnassignDeviceList() {\n  return fireAjax('POST', '', {\n    'action': 'get_unassigned_inventories'\n  });\n}\n\nexport function unassignDeviceList() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncUnassignDeviceList().then(function (res) {\n        dispatch(hide_loading());\n        dispatch(successUnassignedDeviceList(res.data));\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function successEditDeviceData(device, edit, open) {\n  return createAction(constants.ACTION_SUCCESS_EDIT_WITHOUT_API)({\n    device: device,\n    edit: edit,\n    open: open\n  });\n}\nexport function editDeviceData(device, edit, open) {\n  return function (dispatch, getState) {\n    dispatch(successEditDeviceData(device, edit, open));\n  };\n}\nexport function successAuditList(data) {\n  return createAction(constants.ACTION_SUCCESS_AUDIT_LIST)(data);\n}\nexport function errorAuditList(data) {\n  return createAction(constants.ACTION_ERROR_AUDIT_LIST)(data);\n}\n\nfunction getAsyncAuditList(token, month, year) {\n  return fireAjax('POST', '', {\n    'token': token,\n    'request': 'POST',\n    'action': 'get_inventory_audit_status_month_wise',\n    'month': month,\n    'year': year\n  });\n}\n\nexport function getAuditList(token, month, year) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncAuditList(token, month, year).then(function (res) {\n        dispatch(hide_loading());\n        dispatch(successAuditList(res.data));\n      }, function (error) {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/inventory/actions/inventory.js"],"names":["createAction","fireAjax","notify","show_loading","hide_loading","actionsMyProfile","constants","createInflate","success_add_new_machine","data","ACTION_SUCCESS_ADD_NEW_MACHINE","error_add_new_machine","ACTION_ERROR_ADD_NEW_MACHINE","async_addNewMachine","n_machine_type","n_machine_name","n_machine_price","n_serial_no","n_purchase_date","n_operating_system","n_status","n_comment","n_warranty","n_warranty_comment","n_repair_comment","n_bill_no","n_user_Id","n_unassign_comment","n_option_warranty","addNewMachine","new_machine_details","dispatch","getState","machine_type","Promise","reject","machine_name","trim","machine_price","serial_no","purchase_date","operating_system","status","comment","warranty","warranty_comment","warranty_years","repair_comment","bill_no","user_Id","unassign_comment","resolve","then","json","deviceCount","error","message","get_machines_detail","unapprovedUser","showTab","type","payload","noTab","success_device_list","ACTION_SUCCESS_DEVICE_LIST","empty_device_list","ACTION_EMPTY_DEVICE_LIST","error_device_list","ACTION_ERROR_DEVICE_LIST","async_get_AllDevice","success_getDevice","ACTION_SUCCESS_GET_DEVICELIST","getAsync_getDeviceById","n_inventory_id","getDeviceById","device_id","success_updateDevice","ACTION_SUCCESS_UPDATE_DEVICELIST","getAsync_updateDeviceById","deviceId","mac_address","updateDevice","id","res","success_deleteDevice","ACTION_SUCCESS_DELETE_DEVICELIST","getAsync_deleteDeviceById","userId","deleteDevice","success_assignDevice","ACTION_SUCCESS_ASSIGN_DEVICE","error_assignDevice","ACTION_ERROR_ASSIGN_DEVICE","getAsync_assignDeviceToUser","n_user_id","assignDevice","assign_device","user_id","inventory_id","success_deviceType","ACTION_SUCCESS_DEVICE_TYPE","error_deviceType","ACTION_ERROR_DEVICE_TYPE","getAsync_assignDeviceType","deviceList","newDevice","JSON","stringify","assignDeviceType","getDeviceType","success_getDeviceType","ACTION_SUCCESS_GET_DEVICE_TYPE_LIST","getAsync_getDeviceType","list","parse","value","success_deviceStatus","ACTION_SUCCESS_DEVICE_STATUS","error_deviceStatus","ACTION_ERROR_DEVICE_STATUS","getAsync_assignDeviceStatus","statusValue","colorValue","assignDeviceStatus","success_getDeviceStatus","ACTION_SUCCESS_GET_DEVICE_STATUS_LIST","getAsync_getDeviceStatus","getDeviceStatus","success_deleteDeviceStatus","ACTION_SUCCESS_DELETE_DEVICE_STATUS_LIST","getAsync_deleteDeviceStatus","checkValue","deleteDeviceStatus","successDeviceCount","ACTION_SUCCESS_DEVICE_COUNT","getAsyncDeviceCount","successAddInventoryComment","ACTION_SUCCESS_ADD_INVENTORY_COMMENT","errorAddInventoryComment","ACTION_ERROR_ADD_INVENTORY_COMMENT","async_addInventoryComment","addInventoryComment","add_inventory_comment","successUnapprovedList","ACTION_SUCCESS_UPDATE_UNAPPROVED_USER","getAsyncUnapprovedData","dataLogin","errorAddUserComment","ACTION_ERROR_ADD_USER_COMMENT","successAddUserComment","ACTION_SUCCESS_ADD_USER_COMMENT","asyncAddUserComment","addUserComment","addUserCommentDetails","getMyInventory","errorApprovedList","ACTION_ERROR_UPDATE_APPROVED_USER","successApprovedList","ACTION_SUCCESS_UPDATE_APPROVED_USER","getAsyncApprovedData","approvedUser","successUnassignedDeviceList","ACTION_SUCCESS_UNASSIGNED_DEVICE_LIST","getAsyncUnassignDeviceList","unassignDeviceList","successEditDeviceData","device","edit","open","ACTION_SUCCESS_EDIT_WITHOUT_API","editDeviceData","successAuditList","ACTION_SUCCESS_AUDIT_LIST","errorAuditList","ACTION_ERROR_AUDIT_LIST","getAsyncAuditList","token","month","year","getAuditList"],"mappings":"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","sourcesContent":["import {createAction} from 'redux-actions';\nimport {fireAjax} from '../../../services/index';\nimport {notify} from '../../../services/notify'; \nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as actionsMyProfile from \"../../../redux/myProfile/actions/myProfile\";\nimport * as constants from '../../../redux/constants';\nimport { createInflate } from 'zlib';\n\nexport function success_add_new_machine (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_MACHINE)(data);\n}\n\nexport function error_add_new_machine (data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_MACHINE)(data);\n}\n\nfunction async_addNewMachine (\n  \n  n_machine_type,\n  n_machine_name,\n  n_machine_price,\n  n_serial_no,\n  n_purchase_date,\n  n_operating_system,\n  n_status,\n  n_comment,\n  n_warranty, \n  n_warranty_comment,\n  n_repair_comment,\n  n_bill_no,\n  n_user_Id,\n  n_unassign_comment,\n  n_option_warranty\n\n) {\n  return fireAjax('POST', '', {\n    'action':           'add_office_machine',\n    'machine_type':     n_machine_type,\n    'machine_name':     n_machine_name,\n    'machine_price':    n_machine_price,\n    'serial_no':        n_serial_no,\n    'purchase_date':    n_purchase_date,\n    'operating_system': n_operating_system, \n    'status':           n_status,\n    'comment':          n_comment,\n    'warranty':         n_warranty,\n    'warranty_comment': n_warranty_comment,\n    'repair_comment':   n_repair_comment,\n    'bill_no':          n_bill_no,\n    'user_id':          n_user_Id,\n    'unassign_comment': n_unassign_comment,\n    'warranty_years':n_option_warranty\n  });\n}\n\nexport function addNewMachine (new_machine_details) {\n  \n  return function (dispatch, getState) {\n    let n_machine_type = '';\n    let n_machine_name = '';\n    let n_machine_price = '';\n    let n_serial_no = '';\n    let n_purchase_date = '';\n    let n_operating_system = '';\n    let n_status = '';\n    let n_comment = '';\n    let n_warranty = '';\n    let n_warranty_comment = '';\n    let n_repair_comment = '';\n    let n_bill_no='';\n    let n_user_Id = '';\n    let n_unassign_comment='';\n    let n_option_warranty='';\n    \n\n    if (typeof new_machine_details.machine_type === 'undefined' || new_machine_details.machine_type === '') {\n      return Promise.reject('Machine Type is empty');\n    } else {\n      n_machine_type = new_machine_details.machine_type;\n    }\n\n    if (typeof new_machine_details.machine_name === 'undefined' || new_machine_details.machine_name.trim() === '') {\n      return Promise.reject('Machine Name is empty');\n    } else {\n      n_machine_name = new_machine_details.machine_name;\n    }\n\n    if (typeof new_machine_details.machine_price === 'undefined' || new_machine_details.machine_price.trim() === '') {\n      return Promise.reject('Machine Price is empty');\n    } else {\n      n_machine_price = new_machine_details.machine_price;\n    }\n\n    if (typeof new_machine_details.serial_no === 'undefined' || new_machine_details.serial_no.trim() === '') {\n      return Promise.reject('Serial Number is empty');\n    } else {\n      n_serial_no = new_machine_details.serial_no;\n    }\n\n    if (typeof new_machine_details.purchase_date === 'undefined' || new_machine_details.purchase_date === '') {\n      return Promise.reject('Date of Purchase is empty');\n    } else {\n      n_purchase_date = new_machine_details.purchase_date;\n    }\n    if (typeof new_machine_details.operating_system === 'undefined') {\n      return Promise.reject('Operating System is empty');\n    } else {\n      n_operating_system = new_machine_details.operating_system;\n    }\n\n    if (typeof new_machine_details.status === 'undefined' || new_machine_details.status === '') {\n      return Promise.reject('Status is empty');\n    } else {\n      n_status = new_machine_details.status;\n    }\n\n    if (typeof new_machine_details.comment === 'undefined') {\n      return Promise.reject('Comment is empty');\n    } else {\n      n_comment = new_machine_details.comment;\n    }\n\n    if (typeof new_machine_details.warranty === 'undefined' || new_machine_details.warranty === '') {\n      return Promise.reject('Warranty Expire Date is empty');\n    } else {\n      n_warranty = new_machine_details.warranty;\n    }\n\n    if (typeof new_machine_details.warranty_comment === 'undefined') {\n      return Promise.reject('Warranty Comment is empty');\n    } else {\n      n_warranty_comment = new_machine_details.warranty_comment;\n    }\n    if (typeof new_machine_details.warranty_years === 'undefined' || new_machine_details.warranty_years === '') {\n      return Promise.reject('select warranty expiry option');\n    } else {\n      n_option_warranty = new_machine_details.warranty_years;\n    }\n\n    if (typeof new_machine_details.repair_comment === 'undefined') {\n      return Promise.reject('Repair Comment is empty');\n    } else {\n      n_repair_comment = new_machine_details.repair_comment;\n    }\n      if (typeof new_machine_details.bill_no === 'undefined' || new_machine_details.bill_no.trim() === '') {\n        return Promise.reject('Excellenece No is empty');\n      } else {\n        n_bill_no = new_machine_details.bill_no;\n      }\n    \n    if (typeof new_machine_details.user_Id === 'undefined' || new_machine_details.user_Id === '') {\n      return Promise.reject('User Not Assign');\n    }else if(new_machine_details.user_Id=='unassign'){\n      n_user_Id=null;\n    }\n     else {\n      n_user_Id = new_machine_details.user_Id;\n    }\n\n    \n    \n    if(new_machine_details.user_Id=='unassign'){\n       if (typeof new_machine_details.unassign_comment === 'undefined' || new_machine_details.unassign_comment.trim() === '') {\n        return Promise.reject('unassign comment is empty');\n       }\n       else{\n        n_unassign_comment=new_machine_details.unassign_comment;\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_addNewMachine(n_machine_type,\n        n_machine_name,\n        n_machine_price,\n        n_serial_no,\n        n_purchase_date,\n        n_operating_system,\n        n_status,\n        n_comment,\n        n_warranty,\n        n_warranty_comment,\n        n_repair_comment,\n        n_bill_no,\n        n_user_Id,\n      n_unassign_comment,\n      n_option_warranty).then((json) => {\n          dispatch(hide_loading());\n          dispatch(deviceCount());\n          if (json.error === 0) {\n            dispatch(success_add_new_machine(json.message));\n            dispatch(get_machines_detail());\n            dispatch(unapprovedUser());\n            dispatch(showTab())\n            resolve(json.message);\n          } else {\n            dispatch(error_add_new_machine(json.message));\n            reject(json.message);\n          }\n        }, (error) => {\n          dispatch(hide_loading());\n          dispatch(error_add_new_machine('error occurs!!!'));\n          reject('error occurs!!!');\n        });\n    });\n  };\n}\nexport function showTab() {\n  return { type: \"ACTION_SHOW_TAB\", payload: true };\n}\nexport function noTab(){\n  return {type:\"ACTION_NO_TAB\", payload:false}\n}\n// Get Devicelist\n\nexport function success_device_list (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_LIST)(data);\n}\n\nexport function empty_device_list (data) {\n  return createAction(constants.ACTION_EMPTY_DEVICE_LIST)(data);\n}\n\nexport function error_device_list (data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_LIST)(data);\n}\n\nfunction async_get_AllDevice () {\n  return fireAjax('POST', '', {'action': 'get_machines_detail'});\n}\n\nexport function get_machines_detail () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_AllDevice().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_device_list(json.data));\n\n          resolve(json.data);\n        } else {\n          dispatch(empty_device_list([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_device_list([]));\n      });\n    });\n  };\n}\n\nexport function success_getDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICELIST)(data);\n}\n\nfunction getAsync_getDeviceById (n_inventory_id) {\n  return fireAjax('POST', '', {\n    'action': 'get_machine',\n    'id':     n_inventory_id\n  });\n}\n\nexport function getDeviceById (device_id) {\n  return (dispatch, getState) => {\n    let n_inventory_id = '';\n    \n    if (typeof device_id !== \"undefined\") {\n      n_inventory_id = device_id;\n    }\n    if (n_inventory_id.trim() === \"\") {\n      // return Promise.reject(\"inventory id is empty\");\n    }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      return getAsync_getDeviceById(n_inventory_id).then((json) => {\n        dispatch(hide_loading());\n        if (json.data) {\n          dispatch(success_getDevice(json.data));\n          dispatch(success_getDevice(json.data));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  }}\n\nexport function success_updateDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_DEVICELIST)(data);\n}\n\nfunction getAsync_updateDeviceById (deviceId, data) {\n  return fireAjax('POST', '', {\n    'action':           'update_office_machine',\n    'id':               deviceId,\n    'machine_type':     data.machine_type,\n    'machine_name':     data.machine_name,\n    'machine_price':    data.machine_price,\n    'serial_no':        data.serial_no,\n    'purchase_date':    data.purchase_date,\n    'mac_address':      data.mac_address,\n    'operating_system': data.operating_system,\n    'status':           data.status,\n    'comment':          data.comment,\n    'warranty':         data.warranty,\n    'warranty_comment': data.warranty_comment,\n    'repair_comment':   data.repair_comment,\n    'bill_no':          data.bill_no,\n    'user_id':          data.user_Id,\n    'unassign_comment': data.unassign_comment,\n    'warranty_years':data.warranty_years\n  });\n}\n\nexport function updateDevice (id, data) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_updateDeviceById(id, data).then((res) => {\n        dispatch(hide_loading());\n        if (res.error === 0) {\n          dispatch(deviceCount());\n          dispatch(get_machines_detail());\n          dispatch(unapprovedUser());\n          dispatch(success_updateDevice(res.message));\n          resolve(res.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function success_deleteDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_DELETE_DEVICELIST)(data);\n}\n\nfunction getAsync_deleteDeviceById (deviceId,userId) {\n  return fireAjax('POST', '', {\n    'action': 'remove_machine_detail',\n    'id':     deviceId,\n    'userId':     userId\n  });\n}\n\nexport function deleteDevice (id,userId) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_deleteDeviceById(id,userId).then((res) => {\n        dispatch(deviceCount());\n        dispatch(get_machines_detail());\n        dispatch(unapprovedUser());\n        dispatch(hide_loading());\n        if (res.error === 0) {\n          dispatch(success_deleteDevice(res.message));\n          resolve(res.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function success_assignDevice (data) {\n  return createAction(constants.ACTION_SUCCESS_ASSIGN_DEVICE)(data);\n}\n\nexport function error_assignDevice (data) {\n  return createAction(constants.ACTION_ERROR_ASSIGN_DEVICE)(data);\n}\n\nfunction getAsync_assignDeviceToUser (n_inventory_id, n_user_id) {\n  return fireAjax('POST', '', {\n    'action':     'assign_user_machine',\n    'machine_id': n_inventory_id,\n    'user_id':    n_user_id\n  });\n}\n\nexport function assignDevice (assign_device) {\n  return (dispatch, getState) => {\n    let n_inventory_id = '';\n    let n_user_id = '';\n    \n    if (typeof assign_device.user_id !== \"undefined\") {\n      n_user_id = assign_device.user_id;\n    }\n    if (typeof assign_device.inventory_id !== \"undefined\") {\n      n_inventory_id = assign_device.inventory_id;\n    }\n    // if (n_user_id.trim() === \"\") {\n    //   return Promise.reject(\"User id is empty\");\n    // }\n    if (n_inventory_id.trim() === \"\") {\n      return Promise.reject(\"Inventory id is empty\");\n    }\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      dispatch(getDeviceById());\n      return getAsync_assignDeviceToUser(n_inventory_id, n_user_id).then((res) => {\n        dispatch(unapprovedUser());\n        dispatch(get_machines_detail());\n        dispatch(hide_loading());\n        resolve(res.message);// }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(error_assignDevice('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\nexport function success_deviceType (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_TYPE)(data);\n} \n\nexport function error_deviceType (data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_TYPE)(data);\n}\n\nfunction getAsync_assignDeviceType (deviceList) {\n  var newDevice = JSON.stringify(deviceList);\n\n  return fireAjax('POST', '', {\n    'action': 'add_machine_type',\n    'type':   'machine_type',\n    'value':  newDevice\n  });\n}\n\nexport function assignDeviceType (newDevice) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_assignDeviceType(newDevice).then((res) => {\n        dispatch(getDeviceType());\n        resolve(res);\n        dispatch(hide_loading());\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(error_deviceType('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\n// Device Type List\nexport function success_getDeviceType (data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICE_TYPE_LIST)(data);\n}\n\nfunction getAsync_getDeviceType () {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_type_list'\n  });\n}\n\nexport function getDeviceType () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_getDeviceType().then((res) => {\n        dispatch(hide_loading());\n        if (res.data) {\n          var list = JSON.parse(res.data.value);\n          resolve(list);\n          dispatch(success_getDeviceType(list));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n// Device Status---\n\nexport function success_deviceStatus (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_STATUS)(data);\n}\n\nexport function error_deviceStatus (data) {\n  return createAction(constants.ACTION_ERROR_DEVICE_STATUS)(data);\n}\n\nfunction getAsync_assignDeviceStatus (statusValue, colorValue) {\n  // var statusNew = JSON.stringify(statusType)\n  // var colors = JSON.stringify(background)\n  return fireAjax('POST', '', {\n    'action': 'add_machine_status',\n    'type':   'machine_status',\n    'status': statusValue,\n    'color':  colorValue\n\n  });\n}\n\nexport function assignDeviceStatus (statusValue, colorValue) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_assignDeviceStatus(statusValue, colorValue).then((res) => {\n        // dispatch(getDeviceStatus())\n        resolve(res.data.message);\n        dispatch(hide_loading());\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(error_deviceType('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\nexport function success_getDeviceStatus (data) {\n  return createAction(constants.ACTION_SUCCESS_GET_DEVICE_STATUS_LIST)(data);\n}\n\nfunction getAsync_getDeviceStatus () {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_status_list'\n  });\n}\n\nexport function getDeviceStatus () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_getDeviceStatus().then((res) => {\n        dispatch(hide_loading());\n        resolve(res.data);\n        dispatch(success_getDeviceStatus(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function success_deleteDeviceStatus (data) {\n  return createAction(constants.ACTION_SUCCESS_DELETE_DEVICE_STATUS_LIST)(data);\n}\n\nfunction getAsync_deleteDeviceStatus (checkValue) {\n  return fireAjax('POST', '', {\n    'action': 'delete_machine_status',\n    'status': checkValue\n  });\n}\n\nexport function deleteDeviceStatus (checkValue) {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsync_deleteDeviceStatus(checkValue).then((res) => {\n        dispatch(hide_loading());\n        resolve(res);\n        dispatch(success_deleteDeviceStatus(res));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\nexport function successDeviceCount (data) {\n  return createAction(constants.ACTION_SUCCESS_DEVICE_COUNT)(data);\n}\n\nfunction getAsyncDeviceCount () {\n  return fireAjax('POST', '', {\n    'action': 'get_machine_count'\n  });\n}\n\nexport function deviceCount () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncDeviceCount().then((res) => {\n        dispatch(hide_loading());\n        resolve(res.data);\n        dispatch(successDeviceCount(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function successAddInventoryComment (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_INVENTORY_COMMENT)(data);\n}\n\nexport function errorAddInventoryComment (data) {\n  return createAction(constants.ACTION_ERROR_ADD_INVENTORY_COMMENT)(data);\n}\n\nfunction async_addInventoryComment ( n_comment, n_inventory_id) {\n  return fireAjax('POST', '', {\n    'action':         'add_inventory_comment',\n    'comment':        n_comment,\n    'inventory_id':   n_inventory_id\n  });\n}\n\nexport function addInventoryComment (add_inventory_comment) {\n  return function (dispatch, getState) {\n    let n_comment = '';\n    let n_inventory_id = '';\n    \n    if (typeof add_inventory_comment.comment !== \"undefined\") {\n      n_comment = add_inventory_comment.comment;\n    }\n    if (typeof add_inventory_comment.inventory_id !== \"undefined\") {\n      n_inventory_id = add_inventory_comment.inventory_id;\n    }\n    if (n_comment.trim() === \"\") {\n      return Promise.reject(\"Comment is empty\");\n    }\n    if (n_inventory_id.trim() === \"\") {\n      return Promise.reject(\"inventory id is empty\");\n    }\n    return new Promise((resolve, reject) => {\n      async_addInventoryComment(n_comment,n_inventory_id).then((res) => {\n          if (res.error === 0) {\n            dispatch(successAddInventoryComment(res.message));\n            resolve(res.message);\n          } else {\n            dispatch(errorAddInventoryComment(res.message));\n          }\n        }, (error) => {\n          dispatch(errorAddInventoryComment('error occurs!!!'));\n        });\n    });\n  };\n}\n\nexport function successUnapprovedList (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_UNAPPROVED_USER)(data);\n}\n\nfunction getAsyncUnapprovedData(dataLogin){\n  return fireAjax('POST','',{\n    'action':'get_unapproved_inventories'\n  });\n}\n\nexport function unapprovedUser () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncUnapprovedData().then((res) => {\n        dispatch(hide_loading());\n        resolve(res);\n        dispatch(successUnapprovedList(res));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n    })\n    })\n  }\n}\n\nexport function errorAddUserComment (data) {\n  return createAction(constants.ACTION_ERROR_ADD_USER_COMMENT)(data);\n}\n\nexport function successAddUserComment (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_USER_COMMENT)(data);\n}\n\nfunction asyncAddUserComment (n_comment, n_inventory_id){\n  return fireAjax('POST', '', {\n    'action':       'unassigned_my_inventory',\n    'comment':      n_comment,\n    'inventory_id':      n_inventory_id,\n  });\n}\n\nexport function addUserComment (addUserCommentDetails) {\n  return (dispatch, getState) => {\n\n    let n_comment = '';\n    let n_inventory_id = '';\n    if (typeof addUserCommentDetails.comment !== \"undefined\") {\n      n_comment = addUserCommentDetails.comment;\n    }\n    if (typeof addUserCommentDetails.inventory_id !== \"undefined\") {\n      n_inventory_id = addUserCommentDetails.inventory_id;\n    }\n    if (n_comment.trim() === \"\") {\n      notify('Warning!','Comment is empty','warning');\n      return Promise.reject(\"Comment is empty\");\n    }\n    if (n_inventory_id.trim() === \"\") {\n      notify('Warning!','Inventory id is empty','warning');\n      return Promise.reject(\"inventory id is empty\");\n    }\n\n    return new Promise(function (resolve, reject){\n      dispatch(show_loading());\n      return asyncAddUserComment(n_comment, n_inventory_id).then((json) => {\n        dispatch(hide_loading());\n        if(json.error==0){\n          dispatch(successAddUserComment(json.message));\n          notify('Success !','Comment added to unassign device','success');\n          dispatch(actionsMyProfile.getMyInventory());\n        }else{\n          dispatch(errorAddUserComment(json.message))\n          notify('Error !',json.message,'error');\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorAddUserComment('error occurs!!!'));\n        notify('Error !',error,'error');\n      });\n    });\n  };\n}\n\nexport function errorApprovedList(data){\n  return createAction(constants.ACTION_ERROR_UPDATE_APPROVED_USER)\n}\nexport function successApprovedList (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_APPROVED_USER)(data);\n}\n\nfunction getAsyncApprovedData(id){\n  return fireAjax('POST','',{\n    'action':'approve_machine',\n    id\n  });\n}\n\nexport function approvedUser (id) {\n  return (dispatch, getState) => {\n    \n    if(typeof id==='undefined'|| id==''){\n      return Promise.reject('id is empty') \n    }\n    else{\n      id=id;\n    }\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncApprovedData(id).then((json) => {\n        dispatch(hide_loading());\n        if(json.error==0){\n          dispatch(successApprovedList(json.message));\n          dispatch(unapprovedUser());\n          dispatch(get_machines_detail());\n        }else{\n          dispatch(errorApprovedList(json.message));\n        }\n    },(error) => {\n      // dispatch(errorAddusercomment('error occur'));\n      reject('error occur');\n    })\n  })\n}\n}\n\nexport function successUnassignedDeviceList (data) {\n  return createAction(constants.ACTION_SUCCESS_UNASSIGNED_DEVICE_LIST)(data);\n}\n\nfunction getAsyncUnassignDeviceList () {\n  return fireAjax('POST','',{\n    'action': 'get_unassigned_inventories'\n  });\n}\n\nexport function unassignDeviceList () {\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncUnassignDeviceList().then((res) => {\n        dispatch(hide_loading());\n        dispatch(successUnassignedDeviceList(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\nexport function successEditDeviceData (device,edit,open) {\n  return createAction(constants.ACTION_SUCCESS_EDIT_WITHOUT_API)({device,edit,open});\n}\n\nexport function editDeviceData (device,edit,open) {\n  return (dispatch, getState) => {\n    dispatch(successEditDeviceData(device,edit,open));\n  };\n}\n\nexport function successAuditList (data) {\n  return createAction(constants.ACTION_SUCCESS_AUDIT_LIST)(data);\n}\nexport function errorAuditList (data) {\n  return createAction(constants.ACTION_ERROR_AUDIT_LIST)(data);\n}\n\nfunction getAsyncAuditList (token, month, year) {\n  return fireAjax('POST','',{\n    'token': token,\n    'request': 'POST', \n    'action': 'get_inventory_audit_status_month_wise',\n    'month': month,\n    'year': year\n  });\n}\n\nexport function getAuditList(token, month, year){\n  return (dispatch, getState) => {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      return getAsyncAuditList(token, month, year).then((res) => {\n        dispatch(hide_loading());\n        dispatch(successAuditList(res.data));\n      }, (error) => {\n        dispatch(hide_loading());\n        reject(error);\n      });\n    });\n  };\n}\n\n\n"]},"metadata":{},"sourceType":"module"}