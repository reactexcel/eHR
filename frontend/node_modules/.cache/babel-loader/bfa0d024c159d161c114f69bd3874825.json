{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport * as _ from 'lodash';\nimport { CONFIG } from '../../../config/index';\nimport { fireAjax } from '../../../services/index';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\nexport function success_user_manage_payslips_data(data) {\n  return createAction(constants.ACTION_SUCCESS_USER_MANAGE_PAYSLIPS_DATA)(data);\n}\nexport function error_user_manage_payslips_data(data) {\n  return createAction(constants.ACTION_ERROR_USER_MANAGE_PAYSLIPS_DATA)(data);\n}\n\nfunction async_get_user_manage_payslips_data(userid) {\n  return fireAjax('POST', '', {\n    action: 'get_user_manage_payslips_data',\n    user_id: userid\n  });\n}\n\nexport function get_user_manage_payslips_data(userid) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_get_user_manage_payslips_data(userid).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.data !== 'undefined') {\n          // let data = json.data.salary_details.reverse()\n          var data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_user_manage_payslips_data([]));\n      });\n    });\n  };\n} // /month payslip genrater\n\nfunction async_get_user_month_manage_payslips_data(userid, year, month) {\n  return fireAjax('POST', '', {\n    action: 'get_user_manage_payslips_data',\n    user_id: userid,\n    year: year,\n    month: month\n  });\n}\n\nexport function get_user_month_manage_payslips_data(userid, year, month) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_get_user_month_manage_payslips_data(userid, year, month).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.data !== 'undefined') {\n          // let data = json.data.salary_details.reverse()\n          var data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_user_manage_payslips_data([]));\n      });\n    });\n  };\n} // /create arrear\n\nfunction async_create_arrear(userid, extraA, arrearMonth) {\n  return fireAjax('POST', '', {\n    action: 'get_user_manage_payslips_data',\n    user_id: userid,\n    extra_arrear: extraA,\n    arrear_for_month: arrearMonth\n  });\n}\n\nexport function create_arrear(userid, extraA, arrearMonth) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_create_arrear(userid, extraA, arrearMonth).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.data !== 'undefined') {\n          var data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n      });\n    });\n  };\n} // create user payslip\n\nexport function success_create_user_salary_slip(data) {\n  return createAction(constants.ACTION_SUCCESS_CREATE_USER_SALARY_SLIP)(data);\n}\nexport function error_create_user_salary_slip(data) {\n  return createAction(constants.ACTION_ERROR_CREATE_USER_SALARY_SLIP)(data);\n}\n\nfunction async_create_user_payslip(n_userid, n_year, n_month, n_name, n_designation, n_joining_date, n_total_working_days, n_days_present, n_paid_leaves, n_unpaid_leaves, n_total_leave_taken, n_allocated_leaves, n_leave_balance, n_final_leave_balance, n_basic, n_epf, n_hra, n_loan, n_conveyance, n_advance, n_medical_allowance, n_misc_deduction, n_misc_deduction_2, n_special_allowance, n_tds, n_arrear, n_bonus, n_total_earning, n_total_deduction, n_net_salary, n_send_email, send_slack_msg, n_key) {\n  var data = {\n    action: 'create_employee_salary_slip',\n    user_id: n_userid,\n    year: n_year,\n    month: n_month,\n    name: n_name,\n    designation: n_designation,\n    joining_date: n_joining_date,\n    total_working_days: n_total_working_days,\n    days_present: n_days_present,\n    paid_leaves: n_paid_leaves,\n    unpaid_leaves: n_unpaid_leaves,\n    total_leave_taken: n_total_leave_taken,\n    allocated_leaves: n_allocated_leaves,\n    leave_balance: n_leave_balance,\n    final_leave_balance: n_final_leave_balance,\n    basic: n_basic,\n    epf: n_epf,\n    hra: n_hra,\n    loan: n_loan,\n    conveyance: n_conveyance,\n    advance: n_advance,\n    medical_allowance: n_medical_allowance,\n    misc_deduction: n_misc_deduction,\n    misc_deduction_2: n_misc_deduction_2,\n    tds: n_tds,\n    arrear: n_arrear,\n    bonus: n_bonus,\n    total_earning: n_total_earning,\n    total_deduction: n_total_deduction,\n    net_salary: n_net_salary,\n    send_email: n_send_email,\n    send_slack_msg: send_slack_msg\n  };\n\n  if (n_key == 1) {\n    data.special_allowance = n_special_allowance;\n  } else if (n_key == 2) {\n    data.loyalty_bonus = n_special_allowance;\n  }\n\n  return fireAjax('POST', '', data);\n}\n\nexport function create_user_payslip(new_salary_slip_data) {\n  return function (dispatch, getState) {\n    var n_userid = '';\n    var n_year = '';\n    var n_month = '';\n    var n_name = '';\n    var n_designation = '';\n    var n_joining_date = '';\n    var n_total_working_days = '';\n    var n_days_present = '';\n    var n_paid_leaves = '';\n    var n_unpaid_leaves = '';\n    var n_total_leave_taken = '';\n    var n_allocated_leaves = '';\n    var n_leave_balance = '';\n    var n_final_leave_balance = '';\n    var n_basic = '';\n    var n_epf = '';\n    var n_hra = '';\n    var n_loan = '';\n    var n_conveyance = '';\n    var n_advance = '';\n    var n_medical_allowance = '';\n    var n_misc_deduction = '';\n    var n_misc_deduction_2 = '';\n    var n_special_allowance = '';\n    var n_tds = '';\n    var n_arrear = '';\n    var n_bonus = '';\n    var n_total_earning = '';\n    var n_total_deduction = '';\n    var n_net_salary = '';\n    var n_send_email = '';\n    var send_slack_msg = '';\n    var n_key = '';\n\n    if (typeof new_salary_slip_data.user_id === 'undefined' || new_salary_slip_data.user_id == '') {\n      return Promise.reject('User Id is empty');\n    } else {\n      n_userid = new_salary_slip_data.user_id;\n    }\n\n    if (typeof new_salary_slip_data.name === 'undefined' || new_salary_slip_data.name == '') {\n      return Promise.reject('Name is empty');\n    } else {\n      n_name = new_salary_slip_data.name;\n    }\n\n    if (typeof new_salary_slip_data.year === 'undefined' || new_salary_slip_data.year == '') {\n      return Promise.reject('Year is empty');\n    } else {\n      n_year = new_salary_slip_data.year;\n    }\n\n    if (typeof new_salary_slip_data.month === 'undefined' || new_salary_slip_data.month == '') {\n      return Promise.reject('Month is empty');\n    } else {\n      n_month = new_salary_slip_data.month;\n    }\n\n    if (typeof new_salary_slip_data.designation === 'undefined' || new_salary_slip_data.designation == '') {\n      return Promise.reject('Designation is empty');\n    } else {\n      n_designation = new_salary_slip_data.designation;\n    }\n\n    if (typeof new_salary_slip_data.joining_date === 'undefined' || new_salary_slip_data.joining_date == '') {\n      return Promise.reject('Joining date is empty');\n    } else {\n      n_joining_date = new_salary_slip_data.joining_date;\n    }\n\n    if (typeof new_salary_slip_data.total_working_days === 'undefined' || new_salary_slip_data.total_working_days === '') {\n      return Promise.reject('Total working days is empty');\n    } else {\n      n_total_working_days = new_salary_slip_data.total_working_days;\n    }\n\n    if (typeof new_salary_slip_data.days_present === 'undefined' || new_salary_slip_data.days_present === '') {\n      return Promise.reject('Days present is empty');\n    } else {\n      n_days_present = new_salary_slip_data.days_present;\n    }\n\n    if (typeof new_salary_slip_data.paid_leaves === 'undefined' || new_salary_slip_data.paid_leaves === '') {\n      return Promise.reject('Paid leaves is empty');\n    } else {\n      n_paid_leaves = new_salary_slip_data.paid_leaves;\n    }\n\n    if (typeof new_salary_slip_data.unpaid_leaves === 'undefined' || new_salary_slip_data.unpaid_leaves === '') {\n      return Promise.reject('Unpaid leaves is empty');\n    } else {\n      n_unpaid_leaves = new_salary_slip_data.unpaid_leaves;\n    }\n\n    if (typeof new_salary_slip_data.total_leave_taken === 'undefined' || new_salary_slip_data.total_leave_taken === '') {\n      return Promise.reject('Total leave taken is empty');\n    } else {\n      n_total_leave_taken = new_salary_slip_data.total_leave_taken;\n    }\n\n    if (typeof new_salary_slip_data.allocated_leaves === 'undefined' || new_salary_slip_data.allocated_leaves === '') {\n      return Promise.reject('Allocated leaves is empty');\n    } else {\n      n_allocated_leaves = new_salary_slip_data.allocated_leaves;\n    }\n\n    if (typeof new_salary_slip_data.leave_balance === 'undefined' || new_salary_slip_data.leave_balance === '') {\n      return Promise.reject('Leave balance is empty');\n    } else {\n      n_leave_balance = new_salary_slip_data.leave_balance;\n    }\n\n    if (typeof new_salary_slip_data.final_leave_balance === 'undefined' || new_salary_slip_data.final_leave_balance === '') {\n      return Promise.reject('Final leave balance is empty');\n    } else {\n      n_final_leave_balance = new_salary_slip_data.final_leave_balance;\n    }\n\n    if (typeof new_salary_slip_data.basic === 'undefined' || new_salary_slip_data.basic === '') {\n      return Promise.reject('Basic is empty');\n    } else {\n      n_basic = new_salary_slip_data.basic;\n    }\n\n    if (typeof new_salary_slip_data.epf === 'undefined' || new_salary_slip_data.epf === '') {\n      return Promise.reject('EPF is empty');\n    } else {\n      n_epf = new_salary_slip_data.epf;\n    }\n\n    if (typeof new_salary_slip_data.hra === 'undefined' || new_salary_slip_data.hra === '') {\n      return Promise.reject('HRA is empty');\n    } else {\n      n_hra = new_salary_slip_data.hra;\n    }\n\n    if (typeof new_salary_slip_data.loan === 'undefined' || new_salary_slip_data.loan === '') {\n      return Promise.reject('Loan is empty');\n    } else {\n      n_loan = new_salary_slip_data.loan;\n    }\n\n    if (typeof new_salary_slip_data.conveyance === 'undefined' || new_salary_slip_data.conveyance === '') {\n      return Promise.reject('Conveyance is empty');\n    } else {\n      n_conveyance = new_salary_slip_data.conveyance;\n    }\n\n    if (typeof new_salary_slip_data.advance === 'undefined' || new_salary_slip_data.advance === '') {\n      return Promise.reject('Advance is empty');\n    } else {\n      n_advance = new_salary_slip_data.advance;\n    }\n\n    if (typeof new_salary_slip_data.medical_allowance === 'undefined' || new_salary_slip_data.medical_allowance === '') {\n      return Promise.reject('Medical allowance is empty');\n    } else {\n      n_medical_allowance = new_salary_slip_data.medical_allowance;\n    }\n\n    if (typeof new_salary_slip_data.misc_deduction === 'undefined' || new_salary_slip_data.misc_deduction === '') {\n      return Promise.reject('Holding is empty');\n    } else {\n      n_misc_deduction = new_salary_slip_data.misc_deduction;\n    }\n\n    if (typeof new_salary_slip_data.misc_deduction_2 === 'undefined' || new_salary_slip_data.misc_deduction_2 === '') {\n      return Promise.reject('Misc deduction  is empty');\n    } else {\n      n_misc_deduction_2 = new_salary_slip_data.misc_deduction_2;\n    }\n\n    if (typeof new_salary_slip_data.special_allowance === 'undefined' || new_salary_slip_data.special_allowance === '') {\n      return Promise.reject('Special allowance is empty');\n    } else {\n      n_special_allowance = new_salary_slip_data.special_allowance;\n    }\n\n    if (typeof new_salary_slip_data.tds === 'undefined' || new_salary_slip_data.tds === '') {\n      return Promise.reject('TDS is empty');\n    } else {\n      n_tds = new_salary_slip_data.tds;\n    }\n\n    if (typeof new_salary_slip_data.arrear === 'undefined' || new_salary_slip_data.arrear === '') {\n      return Promise.reject('Advance is empty');\n    } else {\n      n_arrear = new_salary_slip_data.arrear;\n    }\n\n    if (typeof new_salary_slip_data.bonus === 'undefined' || new_salary_slip_data.bonus === '') {\n      return Promise.reject('Bonus is empty');\n    } else {\n      n_bonus = new_salary_slip_data.bonus;\n    }\n\n    if (typeof new_salary_slip_data.total_earning === 'undefined' || new_salary_slip_data.total_earning === '') {\n      return Promise.reject('Total earning is empty');\n    } else {\n      n_total_earning = new_salary_slip_data.total_earning;\n    }\n\n    if (typeof new_salary_slip_data.total_deduction === 'undefined' || new_salary_slip_data.total_deduction === '') {\n      return Promise.reject('Total deduction is empty');\n    } else {\n      n_total_deduction = new_salary_slip_data.total_deduction;\n    }\n\n    if (typeof new_salary_slip_data.net_salary === 'undefined' || new_salary_slip_data.net_salary === '') {\n      return Promise.reject('Net salary is empty');\n    } else {\n      n_net_salary = new_salary_slip_data.net_salary;\n    }\n\n    if (typeof new_salary_slip_data.send_email_only !== 'undefined') {\n      n_send_email = new_salary_slip_data.send_email_only;\n    }\n\n    if (typeof new_salary_slip_data.send_slack_message !== 'undefined') {\n      send_slack_msg = new_salary_slip_data.send_slack_message;\n    }\n\n    if (typeof new_salary_slip_data.key !== 'undefined') {\n      n_key = new_salary_slip_data.key;\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_create_user_payslip(n_userid, n_year, n_month, n_name, n_designation, n_joining_date, n_total_working_days, n_days_present, n_paid_leaves, n_unpaid_leaves, n_total_leave_taken, n_allocated_leaves, n_leave_balance, n_final_leave_balance, n_basic, n_epf, n_hra, n_loan, n_conveyance, n_advance, n_medical_allowance, n_misc_deduction, n_misc_deduction_2, n_special_allowance, n_tds, n_arrear, n_bonus, n_total_earning, n_total_deduction, n_net_salary, n_send_email, send_slack_msg, n_key).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_create_user_salary_slip(json.data));\n          resolve('Payslip generated!!');\n        } else {\n          dispatch(error_create_user_salary_slip(json.data.message));\n          reject(json.data.message);\n        }\n      }, function (error) {\n        console.log('Tell Arun error occurs on Action - create_user_payslip');\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_create_user_salary_slip('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n} // ------email payslips\n\nexport function success_email_payslips(data) {\n  return createAction(constants.ACTION_SUCCESS_EMAIL_PAYSLIPS)(data);\n}\nexport function error_email_payslips(data) {\n  return createAction(constants.ACTION_ERROR_EMAIL_PAYSLIPS)(data);\n}\n\nfunction async_email_payslips(payslips_ids) {\n  return fireAjax('POST', '', {\n    action: 'send_payslips_to_employees',\n    payslip_ids: payslips_ids\n  });\n}\n\nexport function email_payslips(payslips_ids) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_email_payslips(payslips_ids).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          // let data = json.data.salary_details.reverse()\n          dispatch(success_user_manage_payslips_data(json.data.message));\n          resolve(json.data.message);\n        } else {\n          dispatch(error_email_payslips('error occurs!!'));\n          reject('error occurs!!');\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_email_payslips('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n} // ------save google access token\n\nexport function success_save_google_access_token(data) {\n  return createAction(constants.ACTION_SUCCESS_SAVE_GOOGLE_ACCESS_TOKEN)(data);\n}\nexport function error_save_google_access_token(data) {\n  return createAction(constants.ACTION_ERROR_SAVE_GOOGLE_ACCESS_TOKEN)(data);\n}\n\nfunction async_save_google_access_token(accessToken) {\n  return fireAjax('POST', '', {\n    action: 'save_google_payslip_drive_access_token',\n    google_access_token: accessToken\n  });\n}\n\nexport function save_google_access_token(accessToken) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_save_google_access_token(accessToken).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          // let data = json.data.salary_details.reverse()\n          var message = json.data.message;\n          dispatch(success_save_google_access_token(message));\n          resolve(message);\n        } else {\n          dispatch(error_save_google_access_token('error occurs!!'));\n          reject('error occurs!!');\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_save_google_access_token('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n} // ----get transfer list\n\nexport function success_get_transfer_list(data) {\n  return createAction('ACTION_SUCCESS_GET_TRANSFER')(data);\n}\nexport function error_get_transfer_list(data) {\n  return createAction('ACTION_ERROR_GET_TRANSFER')(data);\n}\n\nfunction async_getTransferList(userIds) {\n  return fireAjax('POST', '', {\n    action: 'get_users_bankaccount_no',\n    user_id: userIds\n  });\n}\n\nexport function getTransferList(userIds) {\n  return function (dispatch, getState) {\n    if (userIds.length == 0) {\n      return Promise.reject('No user selected');\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getTransferList(userIds).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_get_transfer_list(json.data));\n          resolve(json.data);\n        } else {\n          dispatch(error_get_transfer_list(json.data.message));\n          reject(json.data.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_get_transfer_list('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/salary/actions/managePayslips.js"],"names":["createAction","_","CONFIG","fireAjax","show_loading","hide_loading","constants","success_user_manage_payslips_data","data","ACTION_SUCCESS_USER_MANAGE_PAYSLIPS_DATA","error_user_manage_payslips_data","ACTION_ERROR_USER_MANAGE_PAYSLIPS_DATA","async_get_user_manage_payslips_data","userid","action","user_id","get_user_manage_payslips_data","dispatch","getState","Promise","resolve","reject","then","json","error","async_get_user_month_manage_payslips_data","year","month","get_user_month_manage_payslips_data","async_create_arrear","extraA","arrearMonth","extra_arrear","arrear_for_month","create_arrear","success_create_user_salary_slip","ACTION_SUCCESS_CREATE_USER_SALARY_SLIP","error_create_user_salary_slip","ACTION_ERROR_CREATE_USER_SALARY_SLIP","async_create_user_payslip","n_userid","n_year","n_month","n_name","n_designation","n_joining_date","n_total_working_days","n_days_present","n_paid_leaves","n_unpaid_leaves","n_total_leave_taken","n_allocated_leaves","n_leave_balance","n_final_leave_balance","n_basic","n_epf","n_hra","n_loan","n_conveyance","n_advance","n_medical_allowance","n_misc_deduction","n_misc_deduction_2","n_special_allowance","n_tds","n_arrear","n_bonus","n_total_earning","n_total_deduction","n_net_salary","n_send_email","send_slack_msg","n_key","name","designation","joining_date","total_working_days","days_present","paid_leaves","unpaid_leaves","total_leave_taken","allocated_leaves","leave_balance","final_leave_balance","basic","epf","hra","loan","conveyance","advance","medical_allowance","misc_deduction","misc_deduction_2","tds","arrear","bonus","total_earning","total_deduction","net_salary","send_email","special_allowance","loyalty_bonus","create_user_payslip","new_salary_slip_data","send_email_only","send_slack_message","key","message","console","log","success_email_payslips","ACTION_SUCCESS_EMAIL_PAYSLIPS","error_email_payslips","ACTION_ERROR_EMAIL_PAYSLIPS","async_email_payslips","payslips_ids","payslip_ids","email_payslips","success_save_google_access_token","ACTION_SUCCESS_SAVE_GOOGLE_ACCESS_TOKEN","error_save_google_access_token","ACTION_ERROR_SAVE_GOOGLE_ACCESS_TOKEN","async_save_google_access_token","accessToken","google_access_token","save_google_access_token","success_get_transfer_list","error_get_transfer_list","async_getTransferList","userIds","getTransferList","length"],"mappings":"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","sourcesContent":["import {createAction} from 'redux-actions';\nimport * as _ from 'lodash';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\n\nexport function success_user_manage_payslips_data (data) {\n  return createAction(constants.ACTION_SUCCESS_USER_MANAGE_PAYSLIPS_DATA)(data);\n}\n\nexport function error_user_manage_payslips_data (data) {\n  return createAction(constants.ACTION_ERROR_USER_MANAGE_PAYSLIPS_DATA)(data);\n}\n\nfunction async_get_user_manage_payslips_data (userid) {\n  return fireAjax('POST', '', {\n    action:  'get_user_manage_payslips_data',\n    user_id: userid\n  });\n}\n\nexport function get_user_manage_payslips_data (userid) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_user_manage_payslips_data(userid).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.data !== 'undefined') {\n          // let data = json.data.salary_details.reverse()\n          let data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_user_manage_payslips_data([]));\n      });\n    });\n  };\n}\n\n// /month payslip genrater\n\nfunction async_get_user_month_manage_payslips_data (userid, year, month) {\n  return fireAjax('POST', '', {\n    action:  'get_user_manage_payslips_data',\n    user_id: userid,\n    year:    year,\n    month:   month\n  });\n}\n\nexport function get_user_month_manage_payslips_data (userid, year, month) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_user_month_manage_payslips_data(userid, year, month).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.data !== 'undefined') {\n          // let data = json.data.salary_details.reverse()\n          let data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_user_manage_payslips_data([]));\n      });\n    });\n  };\n}\n\n// /create arrear\n\nfunction async_create_arrear (userid, extraA, arrearMonth) {\n  return fireAjax('POST', '', {\n    action:           'get_user_manage_payslips_data',\n    user_id:          userid,\n    extra_arrear:     extraA,\n    arrear_for_month: arrearMonth\n  });\n}\nexport function create_arrear (userid, extraA, arrearMonth) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_create_arrear(userid, extraA, arrearMonth).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.data !== 'undefined') {\n          let data = json.data;\n          dispatch(success_user_manage_payslips_data(data));\n        } else {\n          dispatch(success_user_manage_payslips_data([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n      });\n    });\n  };\n}\n\n// create user payslip\n\nexport function success_create_user_salary_slip (data) {\n  return createAction(constants.ACTION_SUCCESS_CREATE_USER_SALARY_SLIP)(data);\n}\nexport function error_create_user_salary_slip (data) {\n  return createAction(constants.ACTION_ERROR_CREATE_USER_SALARY_SLIP)(data);\n}\n\nfunction async_create_user_payslip (n_userid, n_year, n_month, n_name, n_designation, n_joining_date, n_total_working_days, n_days_present, n_paid_leaves, n_unpaid_leaves, n_total_leave_taken, n_allocated_leaves, n_leave_balance, n_final_leave_balance, n_basic, n_epf, n_hra, n_loan, n_conveyance, n_advance, n_medical_allowance, n_misc_deduction, n_misc_deduction_2, n_special_allowance, n_tds, n_arrear, n_bonus, n_total_earning, n_total_deduction, n_net_salary, n_send_email, send_slack_msg, n_key) {\n  let data = {\n    action:              'create_employee_salary_slip',\n    user_id:             n_userid,\n    year:                n_year,\n    month:               n_month,\n    name:                n_name,\n    designation:         n_designation,\n    joining_date:        n_joining_date,\n    total_working_days:  n_total_working_days,\n    days_present:        n_days_present,\n    paid_leaves:         n_paid_leaves,\n    unpaid_leaves:       n_unpaid_leaves,\n    total_leave_taken:   n_total_leave_taken,\n    allocated_leaves:    n_allocated_leaves,\n    leave_balance:       n_leave_balance,\n    final_leave_balance: n_final_leave_balance,\n    basic:               n_basic,\n    epf:                 n_epf,\n    hra:                 n_hra,\n    loan:                n_loan,\n    conveyance:          n_conveyance,\n    advance:             n_advance,\n    medical_allowance:   n_medical_allowance,\n    misc_deduction:      n_misc_deduction,\n    misc_deduction_2:    n_misc_deduction_2,\n    tds:                 n_tds,\n    arrear:              n_arrear,\n    bonus:               n_bonus,\n    total_earning:       n_total_earning,\n    total_deduction:     n_total_deduction,\n    net_salary:          n_net_salary,\n    send_email:          n_send_email,\n    send_slack_msg:      send_slack_msg\n  };\n  if (n_key == 1) {\n    data.special_allowance = n_special_allowance;\n  } else if (n_key == 2) {\n    data.loyalty_bonus = n_special_allowance;\n  }\n  return fireAjax('POST', '', data);\n}\n\nexport function create_user_payslip (new_salary_slip_data) {\n  return function (dispatch, getState) {\n    let n_userid = '';\n    let n_year = '';\n    let n_month = '';\n    let n_name = '';\n    let n_designation = '';\n    let n_joining_date = '';\n    let n_total_working_days = '';\n    let n_days_present = '';\n    let n_paid_leaves = '';\n    let n_unpaid_leaves = '';\n    let n_total_leave_taken = '';\n    let n_allocated_leaves = '';\n    let n_leave_balance = '';\n    let n_final_leave_balance = '';\n    let n_basic = '';\n    let n_epf = '';\n    let n_hra = '';\n    let n_loan = '';\n    let n_conveyance = '';\n    let n_advance = '';\n    let n_medical_allowance = '';\n    let n_misc_deduction = '';\n    let n_misc_deduction_2 = '';\n    let n_special_allowance = '';\n    let n_tds = '';\n    let n_arrear = '';\n    let n_bonus = '';\n    let n_total_earning = '';\n    let n_total_deduction = '';\n    let n_net_salary = '';\n    let n_send_email = '';\n    let send_slack_msg = '';\n    let n_key = '';\n\n    if (typeof new_salary_slip_data.user_id === 'undefined' || new_salary_slip_data.user_id == '') {\n      return Promise.reject('User Id is empty');\n    } else {\n      n_userid = new_salary_slip_data.user_id;\n    }\n\n    if (typeof new_salary_slip_data.name === 'undefined' || new_salary_slip_data.name == '') {\n      return Promise.reject('Name is empty');\n    } else {\n      n_name = new_salary_slip_data.name;\n    }\n\n    if (typeof new_salary_slip_data.year === 'undefined' || new_salary_slip_data.year == '') {\n      return Promise.reject('Year is empty');\n    } else {\n      n_year = new_salary_slip_data.year;\n    }\n\n    if (typeof new_salary_slip_data.month === 'undefined' || new_salary_slip_data.month == '') {\n      return Promise.reject('Month is empty');\n    } else {\n      n_month = new_salary_slip_data.month;\n    }\n\n    if (typeof new_salary_slip_data.designation === 'undefined' || new_salary_slip_data.designation == '') {\n      return Promise.reject('Designation is empty');\n    } else {\n      n_designation = new_salary_slip_data.designation;\n    }\n\n    if (typeof new_salary_slip_data.joining_date === 'undefined' || new_salary_slip_data.joining_date == '') {\n      return Promise.reject('Joining date is empty');\n    } else {\n      n_joining_date = new_salary_slip_data.joining_date;\n    }\n\n    if (typeof new_salary_slip_data.total_working_days === 'undefined' || new_salary_slip_data.total_working_days === '') {\n      return Promise.reject('Total working days is empty');\n    } else {\n      n_total_working_days = new_salary_slip_data.total_working_days;\n    }\n\n    if (typeof new_salary_slip_data.days_present === 'undefined' || new_salary_slip_data.days_present === '') {\n      return Promise.reject('Days present is empty');\n    } else {\n      n_days_present = new_salary_slip_data.days_present;\n    }\n\n    if (typeof new_salary_slip_data.paid_leaves === 'undefined' || new_salary_slip_data.paid_leaves === '') {\n      return Promise.reject('Paid leaves is empty');\n    } else {\n      n_paid_leaves = new_salary_slip_data.paid_leaves;\n    }\n\n    if (typeof new_salary_slip_data.unpaid_leaves === 'undefined' || new_salary_slip_data.unpaid_leaves === '') {\n      return Promise.reject('Unpaid leaves is empty');\n    } else {\n      n_unpaid_leaves = new_salary_slip_data.unpaid_leaves;\n    }\n\n    if (typeof new_salary_slip_data.total_leave_taken === 'undefined' || new_salary_slip_data.total_leave_taken === '') {\n      return Promise.reject('Total leave taken is empty');\n    } else {\n      n_total_leave_taken = new_salary_slip_data.total_leave_taken;\n    }\n\n    if (typeof new_salary_slip_data.allocated_leaves === 'undefined' || new_salary_slip_data.allocated_leaves === '') {\n      return Promise.reject('Allocated leaves is empty');\n    } else {\n      n_allocated_leaves = new_salary_slip_data.allocated_leaves;\n    }\n\n    if (typeof new_salary_slip_data.leave_balance === 'undefined' || new_salary_slip_data.leave_balance === '') {\n      return Promise.reject('Leave balance is empty');\n    } else {\n      n_leave_balance = new_salary_slip_data.leave_balance;\n    }\n\n    if (typeof new_salary_slip_data.final_leave_balance === 'undefined' || new_salary_slip_data.final_leave_balance === '') {\n      return Promise.reject('Final leave balance is empty');\n    } else {\n      n_final_leave_balance = new_salary_slip_data.final_leave_balance;\n    }\n\n    if (typeof new_salary_slip_data.basic === 'undefined' || new_salary_slip_data.basic === '') {\n      return Promise.reject('Basic is empty');\n    } else {\n      n_basic = new_salary_slip_data.basic;\n    }\n\n    if (typeof new_salary_slip_data.epf === 'undefined' || new_salary_slip_data.epf === '') {\n      return Promise.reject('EPF is empty');\n    } else {\n      n_epf = new_salary_slip_data.epf;\n    }\n\n    if (typeof new_salary_slip_data.hra === 'undefined' || new_salary_slip_data.hra === '') {\n      return Promise.reject('HRA is empty');\n    } else {\n      n_hra = new_salary_slip_data.hra;\n    }\n\n    if (typeof new_salary_slip_data.loan === 'undefined' || new_salary_slip_data.loan === '') {\n      return Promise.reject('Loan is empty');\n    } else {\n      n_loan = new_salary_slip_data.loan;\n    }\n\n    if (typeof new_salary_slip_data.conveyance === 'undefined' || new_salary_slip_data.conveyance === '') {\n      return Promise.reject('Conveyance is empty');\n    } else {\n      n_conveyance = new_salary_slip_data.conveyance;\n    }\n\n    if (typeof new_salary_slip_data.advance === 'undefined' || new_salary_slip_data.advance === '') {\n      return Promise.reject('Advance is empty');\n    } else {\n      n_advance = new_salary_slip_data.advance;\n    }\n\n    if (typeof new_salary_slip_data.medical_allowance === 'undefined' || new_salary_slip_data.medical_allowance === '') {\n      return Promise.reject('Medical allowance is empty');\n    } else {\n      n_medical_allowance = new_salary_slip_data.medical_allowance;\n    }\n\n    if (typeof new_salary_slip_data.misc_deduction === 'undefined' || new_salary_slip_data.misc_deduction === '') {\n      return Promise.reject('Holding is empty');\n    } else {\n      n_misc_deduction = new_salary_slip_data.misc_deduction;\n    }\n\n    if (typeof new_salary_slip_data.misc_deduction_2 === 'undefined' || new_salary_slip_data.misc_deduction_2 === '') {\n      return Promise.reject('Misc deduction  is empty');\n    } else {\n      n_misc_deduction_2 = new_salary_slip_data.misc_deduction_2;\n    }\n\n    if (typeof new_salary_slip_data.special_allowance === 'undefined' || new_salary_slip_data.special_allowance === '') {\n      return Promise.reject('Special allowance is empty');\n    } else {\n      n_special_allowance = new_salary_slip_data.special_allowance;\n    }\n\n    if (typeof new_salary_slip_data.tds === 'undefined' || new_salary_slip_data.tds === '') {\n      return Promise.reject('TDS is empty');\n    } else {\n      n_tds = new_salary_slip_data.tds;\n    }\n\n    if (typeof new_salary_slip_data.arrear === 'undefined' || new_salary_slip_data.arrear === '') {\n      return Promise.reject('Advance is empty');\n    } else {\n      n_arrear = new_salary_slip_data.arrear;\n    }\n\n    if (typeof new_salary_slip_data.bonus === 'undefined' || new_salary_slip_data.bonus === '') {\n      return Promise.reject('Bonus is empty');\n    } else {\n      n_bonus = new_salary_slip_data.bonus;\n    }\n\n    if (typeof new_salary_slip_data.total_earning === 'undefined' || new_salary_slip_data.total_earning === '') {\n      return Promise.reject('Total earning is empty');\n    } else {\n      n_total_earning = new_salary_slip_data.total_earning;\n    }\n\n    if (typeof new_salary_slip_data.total_deduction === 'undefined' || new_salary_slip_data.total_deduction === '') {\n      return Promise.reject('Total deduction is empty');\n    } else {\n      n_total_deduction = new_salary_slip_data.total_deduction;\n    }\n\n    if (typeof new_salary_slip_data.net_salary === 'undefined' || new_salary_slip_data.net_salary === '') {\n      return Promise.reject('Net salary is empty');\n    } else {\n      n_net_salary = new_salary_slip_data.net_salary;\n    }\n\n    if (typeof new_salary_slip_data.send_email_only !== 'undefined') {\n      n_send_email = new_salary_slip_data.send_email_only;\n    }\n    if (typeof new_salary_slip_data.send_slack_message !== 'undefined') {\n      send_slack_msg = new_salary_slip_data.send_slack_message;\n    }\n    if (typeof new_salary_slip_data.key !== 'undefined') {\n      n_key = new_salary_slip_data.key;\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_create_user_payslip(n_userid, n_year, n_month, n_name, n_designation, n_joining_date, n_total_working_days, n_days_present, n_paid_leaves, n_unpaid_leaves, n_total_leave_taken, n_allocated_leaves, n_leave_balance, n_final_leave_balance, n_basic, n_epf, n_hra, n_loan, n_conveyance, n_advance, n_medical_allowance, n_misc_deduction, n_misc_deduction_2, n_special_allowance, n_tds, n_arrear, n_bonus, n_total_earning, n_total_deduction, n_net_salary, n_send_email, send_slack_msg, n_key).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_create_user_salary_slip(json.data));\n          resolve('Payslip generated!!');\n        } else {\n          dispatch(error_create_user_salary_slip(json.data.message));\n          reject(json.data.message);\n        }\n      }, (error) => {\n        console.log('Tell Arun error occurs on Action - create_user_payslip');\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_create_user_salary_slip('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n// ------email payslips\n\nexport function success_email_payslips (data) {\n  return createAction(constants.ACTION_SUCCESS_EMAIL_PAYSLIPS)(data);\n}\n\nexport function error_email_payslips (data) {\n  return createAction(constants.ACTION_ERROR_EMAIL_PAYSLIPS)(data);\n}\n\nfunction async_email_payslips (payslips_ids) {\n  return fireAjax('POST', '', {\n    action:      'send_payslips_to_employees',\n    payslip_ids: payslips_ids\n  });\n}\n\nexport function email_payslips (payslips_ids) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_email_payslips(payslips_ids).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          // let data = json.data.salary_details.reverse()\n          dispatch(success_user_manage_payslips_data(json.data.message));\n          resolve(json.data.message);\n        } else {\n          dispatch(error_email_payslips('error occurs!!'));\n          reject('error occurs!!');\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_email_payslips('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n\n// ------save google access token\n\nexport function success_save_google_access_token (data) {\n  return createAction(constants.ACTION_SUCCESS_SAVE_GOOGLE_ACCESS_TOKEN)(data);\n}\n\nexport function error_save_google_access_token (data) {\n  return createAction(constants.ACTION_ERROR_SAVE_GOOGLE_ACCESS_TOKEN)(data);\n}\n\nfunction async_save_google_access_token (accessToken) {\n  return fireAjax('POST', '', {\n    action:              'save_google_payslip_drive_access_token',\n    google_access_token: accessToken\n  });\n}\n\nexport function save_google_access_token (accessToken) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_save_google_access_token(accessToken).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          // let data = json.data.salary_details.reverse()\n          let message = json.data.message;\n          dispatch(success_save_google_access_token(message));\n          resolve(message);\n        } else {\n          dispatch(error_save_google_access_token('error occurs!!'));\n          reject('error occurs!!');\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_save_google_access_token('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n\n// ----get transfer list\nexport function success_get_transfer_list (data) {\n  return createAction('ACTION_SUCCESS_GET_TRANSFER')(data);\n}\n\nexport function error_get_transfer_list (data) {\n  return createAction('ACTION_ERROR_GET_TRANSFER')(data);\n}\n\nfunction async_getTransferList (userIds) {\n  return fireAjax('POST', '', {\n    action:  'get_users_bankaccount_no',\n    user_id: userIds\n  });\n}\n\nexport function getTransferList (userIds) {\n  return function (dispatch, getState) {\n    if (userIds.length == 0) {\n      return Promise.reject('No user selected');\n    }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getTransferList(userIds).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_get_transfer_list(json.data));\n          resolve(json.data);\n        } else {\n          dispatch(error_get_transfer_list(json.data.message));\n          reject(json.data.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_get_transfer_list('error occurs!!'));\n        reject('error occurs!!');\n      });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}