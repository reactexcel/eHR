{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/auth/containers/logout.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../../../redux/actions';\n\nvar Logout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Logout, _React$Component);\n\n  function Logout(props) {\n    _classCallCheck(this, Logout);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Logout).call(this, props));\n  }\n\n  _createClass(Logout, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.loggedUser.isLoggedIn) {\n        this.props.requestLogout();\n      } else {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Logout;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    loggedUser: state.logged_user.userLogin\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar VisibleLogout = connect(mapStateToProps, mapDispatchToProps)(Logout);\nvar RouterVisibleLogout = withRouter(VisibleLogout);\nexport default RouterVisibleLogout;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/auth/containers/logout.jsx"],"names":["React","connect","withRouter","bindActionCreators","actions","Logout","props","loggedUser","isLoggedIn","requestLogout","history","push","Component","mapStateToProps","state","logged_user","userLogin","mapDispatchToProps","dispatch","VisibleLogout","RouterVisibleLogout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;IAEMC,M;;;;;AACJ,kBAAaC,KAAb,EAAoB;AAAA;;AAAA,+EACZA,KADY;AAEnB;;;;yCACqB;AACpB,UAAI,KAAKA,KAAL,CAAWC,UAAX,CAAsBC,UAA1B,EAAsC;AACpC,aAAKF,KAAL,CAAWG,aAAX;AACD,OAFD,MAEO;AACL,aAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;;8CAC0BL,K,EAAO;AAChCA,MAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;;;6BACS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAlBkBX,KAAK,CAACY,S;;AAqB3B,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLP,IAAAA,UAAU,EAAEO,KAAK,CAACC,WAAN,CAAkBC;AADzB,GAAP;AAGD;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAOf,kBAAkB,CAACC,OAAD,EAAUc,QAAV,CAAzB;AACD,CAFD;;AAIA,IAAMC,aAAa,GAAGlB,OAAO,CAC3BY,eAD2B,EAE3BI,kBAF2B,CAAP,CAGpBZ,MAHoB,CAAtB;AAKA,IAAMe,mBAAmB,GAAGlB,UAAU,CAACiB,aAAD,CAAtC;AAEA,eAAeC,mBAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {bindActionCreators} from 'redux';\nimport * as actions from '../../../redux/actions';\n\nclass Logout extends React.Component {\n  constructor (props) {\n    super(props);\n  }\n  componentWillMount () {\n    if (this.props.loggedUser.isLoggedIn) {\n      this.props.requestLogout();\n    } else {\n      this.props.history.push('/');\n    }\n  }\n  componentWillReceiveProps (props) {\n    props.history.push('/');\n  }\n  render () {\n    return (\n      <div></div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    loggedUser: state.logged_user.userLogin\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst VisibleLogout = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Logout);\n\nconst RouterVisibleLogout = withRouter(VisibleLogout);\n\nexport default RouterVisibleLogout;\n"]},"metadata":{},"sourceType":"module"}