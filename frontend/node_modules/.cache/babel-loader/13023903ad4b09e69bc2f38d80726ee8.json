{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getTeamStats),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getMonthlyReportAllUsers),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getEmployeLifeCycle),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUserIdList),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getEmployeeHours),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getEmployeeMonthlyHours),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getEmployeePerformance),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getLeastActiveEmp);\n\nimport { fireAjax } from '../../../services/index';\nimport { call, put } from 'redux-saga/effects';\nimport * as actions from '../../../redux/actions';\nimport { CONFIG } from '../../../config/index';\nexport function getTeamStats(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function getTeamStats$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_team_stats',\n            'express_request_url': CONFIG.expressRequestUrl + '/reports/get_team_stats',\n            'express_request_method': 'POST',\n            'express_request_body': ''\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.error === 0)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(actions.successTeamStats(response.data));\n\n        case 7:\n          _context.next = 11;\n          break;\n\n        case 9:\n          _context.next = 11;\n          return put(actions.errorTeamStats(response.message));\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put(actions.errorTeamStats('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_team_stats\" Request action\\n', _context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n}\nexport function getMonthlyReportAllUsers(action) {\n  var _response;\n\n  return _regeneratorRuntime.wrap(function getMonthlyReportAllUsers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_monthly_report_all_users',\n            'express_request_url': CONFIG.expressRequestUrl + '/reports/get_monthly_report_all_users',\n            'express_request_method': 'POST',\n            'express_request_body': action.payload\n          });\n\n        case 3:\n          _response = _context2.sent;\n\n          if (!(_response.error === 0)) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(actions.successMonthlyReportAllUsers(_response.data));\n\n        case 7:\n          _context2.next = 11;\n          break;\n\n        case 9:\n          _context2.next = 11;\n          return put(actions.errorMonthlyReportAllUsers(_response.message));\n\n        case 11:\n          _context2.next = 18;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 17;\n          return put(actions.errorMonthlyReportAllUsers('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_monthly_report_all_users\" Request action\\n', _context2.t0);\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 13]]);\n}\nexport function getEmployeLifeCycle(action) {\n  var _response2;\n\n  return _regeneratorRuntime.wrap(function getEmployeLifeCycle$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_termination_joining_stats',\n            'express_request_url': CONFIG.expressRequestUrl + '/reports/get_termination_joining_stats',\n            'express_request_method': 'POST',\n            'express_request_body': {\n              'startYear': action.payload.start_year,\n              'endYear': action.payload.end_year\n            }\n          });\n\n        case 3:\n          _response2 = _context3.sent;\n\n          if (!(_response2.error === 0)) {\n            _context3.next = 9;\n            break;\n          }\n\n          _context3.next = 7;\n          return put(actions.successEmployeLifeCycle(_response2.data));\n\n        case 7:\n          _context3.next = 11;\n          break;\n\n        case 9:\n          _context3.next = 11;\n          return put(actions.errorEmployeLifeCycle(_response2.message));\n\n        case 11:\n          _context3.next = 18;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 17;\n          return put(actions.errorEmployeLifeCycle('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_termination_joining_stats\" Request action\\n', _context3.t0);\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\nexport function getUserIdList(action) {\n  var _response3;\n\n  return _regeneratorRuntime.wrap(function getUserIdList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_user_list',\n            'express_request_url': CONFIG.expressRequestUrl + '/user/get_user_list',\n            'express_request_method': 'POST',\n            'express_request_body': ''\n          });\n\n        case 3:\n          _response3 = _context4.sent;\n\n          if (!(_response3.error === 0)) {\n            _context4.next = 9;\n            break;\n          }\n\n          _context4.next = 7;\n          return put(actions.successUserList(_response3.data));\n\n        case 7:\n          _context4.next = 11;\n          break;\n\n        case 9:\n          _context4.next = 11;\n          return put(actions.errorUserList(_response3.message));\n\n        case 11:\n          _context4.next = 18;\n          break;\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 17;\n          return put(actions.errorUserList('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_user_list\" Request action\\n', _context4.t0);\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 13]]);\n}\nexport function getEmployeeHours(action) {\n  var _response4;\n\n  return _regeneratorRuntime.wrap(function getEmployeeHours$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_employee_hours',\n            'express_request_url': CONFIG.expressRequestUrl + '/reports/get_employee_hours',\n            'express_request_method': 'POST',\n            'express_request_body': {\n              'user_id': action.payload.id,\n              'date': action.payload.date,\n              'month': action.payload.month,\n              'year': action.payload.year\n            }\n          });\n\n        case 3:\n          _response4 = _context5.sent;\n\n          if (!(_response4.error === 0)) {\n            _context5.next = 9;\n            break;\n          }\n\n          _context5.next = 7;\n          return put(actions.successEmployeeHours(_response4.data));\n\n        case 7:\n          _context5.next = 11;\n          break;\n\n        case 9:\n          _context5.next = 11;\n          return put(actions.errorEmployeeHours(_response4.message));\n\n        case 11:\n          _context5.next = 18;\n          break;\n\n        case 13:\n          _context5.prev = 13;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 17;\n          return put(actions.errorEmployeeHours('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_employee_hours\" Request action\\n', _context5.t0);\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 13]]);\n}\nexport function getEmployeeMonthlyHours(action) {\n  var _response5;\n\n  return _regeneratorRuntime.wrap(function getEmployeeMonthlyHours$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_employee_monthly_hours',\n            'express_request_url': CONFIG.expressRequestUrl + '/reports/get_monthly_report',\n            'express_request_method': 'POST',\n            'express_request_body': {\n              'user_id': action.payload.id,\n              'month': action.payload.month,\n              'year': action.payload.year\n            }\n          });\n\n        case 3:\n          _response5 = _context6.sent;\n\n          if (!(_response5.error === 0)) {\n            _context6.next = 9;\n            break;\n          }\n\n          _context6.next = 7;\n          return put(actions.successEmployeeMonthlyHours(_response5.data));\n\n        case 7:\n          _context6.next = 11;\n          break;\n\n        case 9:\n          _context6.next = 11;\n          return put(actions.errorEmployeeMonthlyHours(_response5.message));\n\n        case 11:\n          _context6.next = 18;\n          break;\n\n        case 13:\n          _context6.prev = 13;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 17;\n          return put(actions.errorEmployeeMonthlyHours('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_employee_hours\" Request action\\n', _context6.t0);\n\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 13]]);\n}\nexport function getEmployeePerformance(action) {\n  var _response6;\n\n  return _regeneratorRuntime.wrap(function getEmployeePerformance$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_employee_performance',\n            'express_request_url': CONFIG.expressRequestUrl + '/reports/get_monthly_performance',\n            'express_request_method': 'POST',\n            'express_request_body': {\n              'month': action.payload.month,\n              'year': action.payload.year\n            }\n          });\n\n        case 3:\n          _response6 = _context7.sent;\n\n          if (!(_response6.error === 0)) {\n            _context7.next = 9;\n            break;\n          }\n\n          _context7.next = 7;\n          return put(actions.successEmployeePerformance(_response6.data));\n\n        case 7:\n          _context7.next = 11;\n          break;\n\n        case 9:\n          _context7.next = 11;\n          return put(actions.errorEmployeePerformance(_response6.message));\n\n        case 11:\n          _context7.next = 18;\n          break;\n\n        case 13:\n          _context7.prev = 13;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 17;\n          return put(actions.errorEmployeePerformance('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_employee_hours\" Request action\\n', _context7.t0);\n\n        case 18:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 13]]);\n}\nexport function getLeastActiveEmp(action) {\n  var _response7;\n\n  return _regeneratorRuntime.wrap(function getLeastActiveEmp$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'get_average_working_hours',\n            'start_date': action.payload.start_date,\n            'end_date': action.payload.end_date\n          });\n\n        case 3:\n          _response7 = _context8.sent;\n\n          if (!(_response7.error === 0)) {\n            _context8.next = 9;\n            break;\n          }\n\n          _context8.next = 7;\n          return put(actions.successLeastActiveEmployee(_response7.data));\n\n        case 7:\n          _context8.next = 11;\n          break;\n\n        case 9:\n          _context8.next = 11;\n          return put(actions.errorLeastActiveEmployee(_response7.message));\n\n        case 11:\n          _context8.next = 18;\n          break;\n\n        case 13:\n          _context8.prev = 13;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 17;\n          return put(actions.errorLeastActiveEmployee('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"get_employee_hours\" Request action\\n', _context8.t0);\n\n        case 18:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 13]]);\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/manageUsers/actions/dashboard.js"],"names":["getTeamStats","getMonthlyReportAllUsers","getEmployeLifeCycle","getUserIdList","getEmployeeHours","getEmployeeMonthlyHours","getEmployeePerformance","getLeastActiveEmp","fireAjax","call","put","actions","CONFIG","action","expressRequestUrl","response","error","successTeamStats","data","errorTeamStats","message","console","warn","payload","successMonthlyReportAllUsers","errorMonthlyReportAllUsers","start_year","end_year","successEmployeLifeCycle","errorEmployeLifeCycle","successUserList","errorUserList","id","date","month","year","successEmployeeHours","errorEmployeeHours","successEmployeeMonthlyHours","errorEmployeeMonthlyHours","successEmployeePerformance","errorEmployeePerformance","start_date","end_date","successLeastActiveEmployee","errorLeastActiveEmployee"],"mappings":"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","sourcesContent":["import {fireAjax} from '../../../services/index';\nimport {call, put} from 'redux-saga/effects';\nimport * as actions from '../../../redux/actions';\nimport {CONFIG} from '../../../config/index';\n\nexport function* getTeamStats (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':                 'get_team_stats',\n      'express_request_url':    CONFIG.expressRequestUrl + '/reports/get_team_stats',\n      'express_request_method': 'POST',\n      'express_request_body':   ''\n    });\n    if (response.error === 0) {\n      yield put(actions.successTeamStats(response.data));\n    } else {\n      yield put(actions.errorTeamStats(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorTeamStats('Error Occurs !!'));\n    console.warn('Some error found in \"get_team_stats\" Request action\\n', e);\n  }\n}\n\nexport function* getMonthlyReportAllUsers (action) {\n  try { \n    const response = yield call(fireAjax, 'POST', '', {\n      'action':                 'get_monthly_report_all_users',\n      'express_request_url':    CONFIG.expressRequestUrl + '/reports/get_monthly_report_all_users',\n      'express_request_method': 'POST',\n      'express_request_body':   action.payload\n    });\n    if (response.error === 0) {\n      yield put(actions.successMonthlyReportAllUsers(response.data));\n    } else {\n      yield put(actions.errorMonthlyReportAllUsers(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorMonthlyReportAllUsers('Error Occurs !!'));\n    console.warn('Some error found in \"get_monthly_report_all_users\" Request action\\n', e);\n  }\n}\n\nexport function* getEmployeLifeCycle (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':                 'get_termination_joining_stats',\n      'express_request_url':    CONFIG.expressRequestUrl + '/reports/get_termination_joining_stats',\n      'express_request_method': 'POST',\n      'express_request_body':   {\n        'startYear': action.payload.start_year,\n        'endYear':   action.payload.end_year\n      }\n    });\n    if (response.error === 0) {\n      yield put(actions.successEmployeLifeCycle(response.data));\n    } else {\n      yield put(actions.errorEmployeLifeCycle(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorEmployeLifeCycle('Error Occurs !!'));\n    console.warn('Some error found in \"get_termination_joining_stats\" Request action\\n', e);\n  }\n}\n\nexport function* getUserIdList (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':                 'get_user_list',\n      'express_request_url':    CONFIG.expressRequestUrl + '/user/get_user_list',\n      'express_request_method': 'POST',\n      'express_request_body':   ''\n    });\n    if (response.error === 0) {\n      yield put(actions.successUserList(response.data));\n    } else {\n      yield put(actions.errorUserList(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorUserList('Error Occurs !!'));\n    console.warn('Some error found in \"get_user_list\" Request action\\n', e);\n  }\n}\n\nexport function* getEmployeeHours (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':                 'get_employee_hours',\n      'express_request_url':    CONFIG.expressRequestUrl + '/reports/get_employee_hours',\n      'express_request_method': 'POST',\n      'express_request_body':   {\n        'user_id': action.payload.id,\n        'date': action.payload.date,\n        'month':   action.payload.month,\n        'year':    action.payload.year\n      }\n    });\n    if (response.error === 0) {\n      yield put(actions.successEmployeeHours(response.data));\n    } else {\n      yield put(actions.errorEmployeeHours(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorEmployeeHours('Error Occurs !!'));\n    console.warn('Some error found in \"get_employee_hours\" Request action\\n', e);\n  }\n}\n\nexport function* getEmployeeMonthlyHours (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':                 'get_employee_monthly_hours',\n      'express_request_url':    CONFIG.expressRequestUrl + '/reports/get_monthly_report',\n      'express_request_method': 'POST',\n      'express_request_body':   {\n        'user_id': action.payload.id,\n        'month':   action.payload.month,\n        'year':    action.payload.year\n      }\n    });\n    if (response.error === 0) {\n      yield put(actions.successEmployeeMonthlyHours(response.data));\n    } else {\n      yield put(actions.errorEmployeeMonthlyHours(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorEmployeeMonthlyHours('Error Occurs !!'));\n    console.warn('Some error found in \"get_employee_hours\" Request action\\n', e);\n  }\n}\n\nexport function* getEmployeePerformance (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':                 'get_employee_performance',\n      'express_request_url':    CONFIG.expressRequestUrl + '/reports/get_monthly_performance',\n      'express_request_method': 'POST',\n      'express_request_body':   {\n        'month': action.payload.month,\n        'year':  action.payload.year\n      }\n    });\n    if (response.error === 0) {\n      yield put(actions.successEmployeePerformance(response.data));\n    } else {\n      yield put(actions.errorEmployeePerformance(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorEmployeePerformance('Error Occurs !!'));\n    console.warn('Some error found in \"get_employee_hours\" Request action\\n', e);\n  }\n}\n\nexport function* getLeastActiveEmp(action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action': 'get_average_working_hours',\n      'start_date': action.payload.start_date,\n      'end_date': action.payload.end_date\n    });\n    if (response.error === 0) {\n      yield put(actions.successLeastActiveEmployee(response.data));\n    } else {\n      yield put(actions.errorLeastActiveEmployee(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorLeastActiveEmployee('Error Occurs !!'));\n    console.warn('Some error found in \"get_employee_hours\" Request action\\n', e);\n  }\n}"]},"metadata":{},"sourceType":"module"}