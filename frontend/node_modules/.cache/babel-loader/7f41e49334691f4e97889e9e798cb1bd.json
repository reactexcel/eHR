{"ast":null,"code":"import update from 'immutability-helper';\nupdate.extend('$setInitialState', function (payload, original) {\n  return update(original, {\n    data: {\n      $set: []\n    },\n    isLoading: {\n      $set: false\n    },\n    isError: {\n      $set: false\n    },\n    isSuccess: {\n      $set: false\n    },\n    message: {\n      $set: ''\n    }\n  });\n});\nupdate.extend('$setRequestLoading', function (payload, original) {\n  return update(original, {\n    isLoading: {\n      $set: true\n    },\n    isError: {\n      $set: false\n    },\n    isSuccess: {\n      $set: false\n    },\n    message: {\n      $set: ''\n    }\n  });\n});\nupdate.extend('$setRequestSuccess', function (payload, original) {\n  return update(original, {\n    data: {\n      $set: payload\n    },\n    isLoading: {\n      $set: false\n    },\n    isError: {\n      $set: false\n    },\n    isSuccess: {\n      $set: true\n    },\n    message: {\n      $set: ''\n    }\n  });\n});\nupdate.extend('$setSuccessMessage', function (payload, original) {\n  return update(original, {\n    isLoading: {\n      $set: false\n    },\n    isSuccess: {\n      $set: true\n    },\n    isError: {\n      $set: false\n    },\n    message: {\n      $set: payload\n    }\n  });\n});\nupdate.extend('$setRequestError', function (payload, original) {\n  return update(original, {\n    isLoading: {\n      $set: false\n    },\n    isSuccess: {\n      $set: false\n    },\n    isError: {\n      $set: true\n    },\n    message: {\n      $set: payload\n    }\n  });\n});","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/update.js"],"names":["update","extend","payload","original","data","$set","isLoading","isError","isSuccess","message"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEAA,MAAM,CAACC,MAAP,CAAc,kBAAd,EAAkC,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACvD,SAAOH,MAAM,CAACG,QAAD,EAAW;AACtBC,IAAAA,IAAI,EAAO;AAACC,MAAAA,IAAI,EAAE;AAAP,KADW;AAEtBC,IAAAA,SAAS,EAAE;AAACD,MAAAA,IAAI,EAAE;AAAP,KAFW;AAGtBE,IAAAA,OAAO,EAAI;AAACF,MAAAA,IAAI,EAAE;AAAP,KAHW;AAItBG,IAAAA,SAAS,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP,KAJW;AAKtBI,IAAAA,OAAO,EAAI;AAACJ,MAAAA,IAAI,EAAE;AAAP;AALW,GAAX,CAAb;AAOD,CARD;AASAL,MAAM,CAACC,MAAP,CAAc,oBAAd,EAAoC,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACzD,SAAOH,MAAM,CAACG,QAAD,EAAW;AACtBG,IAAAA,SAAS,EAAE;AAACD,MAAAA,IAAI,EAAE;AAAP,KADW;AAEtBE,IAAAA,OAAO,EAAI;AAACF,MAAAA,IAAI,EAAE;AAAP,KAFW;AAGtBG,IAAAA,SAAS,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP,KAHW;AAItBI,IAAAA,OAAO,EAAI;AAACJ,MAAAA,IAAI,EAAE;AAAP;AAJW,GAAX,CAAb;AAMD,CAPD;AAQAL,MAAM,CAACC,MAAP,CAAc,oBAAd,EAAoC,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACzD,SAAOH,MAAM,CAACG,QAAD,EAAW;AACtBC,IAAAA,IAAI,EAAO;AAACC,MAAAA,IAAI,EAAEH;AAAP,KADW;AAEtBI,IAAAA,SAAS,EAAE;AAACD,MAAAA,IAAI,EAAE;AAAP,KAFW;AAGtBE,IAAAA,OAAO,EAAI;AAACF,MAAAA,IAAI,EAAE;AAAP,KAHW;AAItBG,IAAAA,SAAS,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP,KAJW;AAKtBI,IAAAA,OAAO,EAAI;AAACJ,MAAAA,IAAI,EAAE;AAAP;AALW,GAAX,CAAb;AAOD,CARD;AASAL,MAAM,CAACC,MAAP,CAAc,oBAAd,EAAoC,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACzD,SAAOH,MAAM,CAACG,QAAD,EAAW;AACtBG,IAAAA,SAAS,EAAE;AAACD,MAAAA,IAAI,EAAE;AAAP,KADW;AAEtBG,IAAAA,SAAS,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP,KAFW;AAGtBE,IAAAA,OAAO,EAAI;AAACF,MAAAA,IAAI,EAAE;AAAP,KAHW;AAItBI,IAAAA,OAAO,EAAI;AAACJ,MAAAA,IAAI,EAAEH;AAAP;AAJW,GAAX,CAAb;AAMD,CAPD;AAQAF,MAAM,CAACC,MAAP,CAAc,kBAAd,EAAkC,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACvD,SAAOH,MAAM,CAACG,QAAD,EAAW;AACtBG,IAAAA,SAAS,EAAE;AAACD,MAAAA,IAAI,EAAE;AAAP,KADW;AAEtBG,IAAAA,SAAS,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP,KAFW;AAGtBE,IAAAA,OAAO,EAAI;AAACF,MAAAA,IAAI,EAAE;AAAP,KAHW;AAItBI,IAAAA,OAAO,EAAI;AAACJ,MAAAA,IAAI,EAAEH;AAAP;AAJW,GAAX,CAAb;AAMD,CAPD","sourcesContent":["import update from 'immutability-helper';\n\nupdate.extend('$setInitialState', (payload, original) => {\n  return update(original, {\n    data:      {$set: []},\n    isLoading: {$set: false},\n    isError:   {$set: false},\n    isSuccess: {$set: false},\n    message:   {$set: ''}\n  });\n});\nupdate.extend('$setRequestLoading', (payload, original) => {\n  return update(original, {\n    isLoading: {$set: true},\n    isError:   {$set: false},\n    isSuccess: {$set: false},\n    message:   {$set: ''}\n  });\n});\nupdate.extend('$setRequestSuccess', (payload, original) => {\n  return update(original, {\n    data:      {$set: payload},\n    isLoading: {$set: false},\n    isError:   {$set: false},\n    isSuccess: {$set: true},\n    message:   {$set: ''}\n  });\n});\nupdate.extend('$setSuccessMessage', (payload, original) => {\n  return update(original, {\n    isLoading: {$set: false},\n    isSuccess: {$set: true},\n    isError:   {$set: false},\n    message:   {$set: payload}\n  });\n});\nupdate.extend('$setRequestError', (payload, original) => {\n  return update(original, {\n    isLoading: {$set: false},\n    isSuccess: {$set: false},\n    isError:   {$set: true},\n    message:   {$set: payload}\n  });\n});\n"]},"metadata":{},"sourceType":"module"}