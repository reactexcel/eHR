{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/holidays/containers/holidays.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { notify } from '../../../services/notify';\nimport * as actions from '../../../redux/actions';\nimport Menu from '../../../components/generic/Menu';\nimport Header from '../../../components/generic/Header';\nimport { isNotUserValid } from '../../../services/generic';\nimport HolidaysList from '../../../components/holidays/HolidaysList';\nimport { getToken, getYearArray } from '../../../services/generic';\n\nvar moment = require('moment');\n\nvar Holidays =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Holidays, _React$Component);\n\n  function Holidays(props) {\n    var _this;\n\n    _classCallCheck(this, Holidays);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Holidays).call(this, props));\n\n    _this.handleDateChnage = function (date) {\n      if (date) {\n        _this.setState({\n          date: date,\n          year: moment(date).year()\n        });\n      }\n    };\n\n    _this.handleHolidayNameChnage = function (e) {\n      _this.setState({\n        holidayName: e.target.value\n      });\n    };\n\n    _this.handleTypeChnage = function (e) {\n      _this.setState({\n        type: e.target.value\n      });\n    };\n\n    _this.handleYearChange = function (e) {\n      _this.setState({\n        yearSelected: e.target.value\n      });\n\n      _this.props.requestHolidayList({\n        year: e.target.value\n      });\n    };\n\n    _this.addHoliday = function () {\n      _this.props.requestAddHoliday({\n        data: _this.state,\n        token: getToken()\n      });\n    };\n\n    _this.deleteHoliday = function (id) {\n      _this.props.requestDeleteHoliday({\n        id: id,\n        token: getToken()\n      });\n    };\n\n    _this.props.isAlreadyLogin();\n\n    _this.state = {\n      date: \"\",\n      holidayName: \"\",\n      type: \"\",\n      year: \"\",\n      yearSelected: \"\"\n    };\n    _this.year = [];\n    return _this;\n  }\n\n  _createClass(Holidays, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.requestHolidayList({\n        year: new Date().getYear() + 1900\n      });\n      this.props.resetReducer();\n      this.props.requestHolidayType({\n        token: getToken()\n      });\n      this.year = getYearArray();\n      this.setState({\n        yearSelected: \"\".concat(this.year[3])\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var addHoliday = props.addHoliday,\n          holidayType = props.holidayType,\n          deleteHoliday = props.deleteHoliday;\n\n      if (holidayType && holidayType.data && holidayType.data.holiday_type_list) {\n        this.setState({\n          type: \"\".concat(holidayType.data.holiday_type_list[0].type)\n        });\n      }\n\n      if (addHoliday.isError) {\n        notify('Error !', addHoliday.message, 'error');\n      }\n\n      if (addHoliday.isSuccess) {\n        notify('Success !', addHoliday.data.message, 'success');\n        this.setState({\n          date: \"\",\n          holidayName: \"\",\n          yearSelected: this.state.year\n        });\n        this.props.requestHolidayList({\n          year: this.state.year\n        });\n      }\n\n      if (deleteHoliday.isError) {\n        notify('Error !', deleteHoliday.message, 'error');\n      }\n\n      if (deleteHoliday.isSuccess) {\n        notify('Success !', deleteHoliday.data.message, 'success');\n        this.props.requestHolidayList({\n          year: this.state.yearSelected\n        });\n      }\n\n      var location = props.location,\n          history = props.history,\n          loggedUser = props.loggedUser,\n          _props$holidaysList = props.holidaysList,\n          isError = _props$holidaysList.isError,\n          message = _props$holidaysList.message;\n      var isNotValid = isNotUserValid(location.pathname, loggedUser);\n\n      if (isNotValid.status) {\n        history.push(isNotValid.redirectTo);\n      }\n\n      if (isError) {\n        notify('Error !', message, 'error');\n      }\n\n      if (props.holidayType && props.holidayType.data && props.holidayType.data.holiday_type_list) {\n        this.setState({\n          type: \"\".concat(props.holidayType.data.holiday_type_list[0].type)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$holidaysL = this.props.holidaysList,\n          isLoading = _this$props$holidaysL.isLoading,\n          data = _this$props$holidaysL.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: 'Holidays List',\n        showLoading: isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(HolidaysList, {\n        holidays: data.holidays,\n        addHoliday: this.addHoliday,\n        isAdmin: this.props.loggedUser.data.role === \"Admin\",\n        holidayType: this.props.holidayType.data.holiday_type_list,\n        yearArray: this.year,\n        handleDateChnage: this.handleDateChnage,\n        handleHolidayNameChnage: this.handleHolidayNameChnage,\n        handleTypeChnage: this.handleTypeChnage,\n        handleYearChange: this.handleYearChange,\n        deleteHoliday: this.deleteHoliday,\n        state: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Holidays;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    holidaysList: state.holidaysList.holidaysList,\n    addHoliday: state.holidaysList.addHolidays,\n    deleteHoliday: state.holidaysList.deleteHolidays,\n    holidayType: state.holidaysList.holidayType\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Holidays));","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/holidays/containers/holidays.jsx"],"names":["React","connect","withRouter","bindActionCreators","notify","actions","Menu","Header","isNotUserValid","HolidaysList","getToken","getYearArray","moment","require","Holidays","props","handleDateChnage","date","setState","year","handleHolidayNameChnage","e","holidayName","target","value","handleTypeChnage","type","handleYearChange","yearSelected","requestHolidayList","addHoliday","requestAddHoliday","data","state","token","deleteHoliday","id","requestDeleteHoliday","isAlreadyLogin","Date","getYear","resetReducer","requestHolidayType","holidayType","holiday_type_list","isError","message","isSuccess","location","history","loggedUser","holidaysList","isNotValid","pathname","status","push","redirectTo","isLoading","holidays","role","Component","mapStateToProps","frontend","toJS","logged_user","userLogin","addHolidays","deleteHolidays","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {bindActionCreators} from 'redux';\nimport {notify} from '../../../services/notify';\nimport * as actions from '../../../redux/actions';\nimport Menu from '../../../components/generic/Menu';\nimport Header from '../../../components/generic/Header';\nimport {isNotUserValid} from '../../../services/generic';\nimport HolidaysList from '../../../components/holidays/HolidaysList';\nimport { getToken, getYearArray } from '../../../services/generic';\nvar moment = require('moment');\n\nclass Holidays extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n    this.state={\n      date:\"\",\n      holidayName:\"\",\n      type:\"\",\n      year:\"\",\n      yearSelected: \"\"\n    };\n    this.year=[];\n  }\n\n  componentWillMount () {\n    this.props.requestHolidayList({year:new Date().getYear() + 1900});\n    this.props.resetReducer();\n    this.props.requestHolidayType({token:getToken()});\n    this.year = getYearArray();\n    this.setState({yearSelected:`${this.year[3]}`});\n  }\n  componentWillReceiveProps (props) {\n    let {addHoliday,holidayType,deleteHoliday} = props;\n    if(holidayType && holidayType.data && holidayType.data.holiday_type_list){\n      this.setState({type:`${holidayType.data.holiday_type_list[0].type}`})\n    }\n    if (addHoliday.isError) {\n      notify('Error !', addHoliday.message, 'error');\n    }\n    if (addHoliday.isSuccess) {\n      notify('Success !', addHoliday.data.message, 'success');           \n      this.setState({date:\"\",holidayName:\"\",yearSelected:this.state.year});\n      this.props.requestHolidayList({year:this.state.year}); \n    }\n    if (deleteHoliday.isError) {\n      notify('Error !', deleteHoliday.message, 'error');\n    }\n    if (deleteHoliday.isSuccess) {\n      notify('Success !', deleteHoliday.data.message, 'success');\n      this.props.requestHolidayList({year:this.state.yearSelected});\n    }\n    \n    let {location, history, loggedUser, holidaysList: {isError, message}} = props;\n    let isNotValid = isNotUserValid(location.pathname, loggedUser);\n    if (isNotValid.status) {\n      history.push(isNotValid.redirectTo);\n    }\n    if (isError) {\n      notify('Error !', message, 'error');\n    }\n    if(props.holidayType && props.holidayType.data && props.holidayType.data.holiday_type_list){\n      this.setState({type:`${props.holidayType.data.holiday_type_list[0].type}`})\n    }\n  }\n\n  handleDateChnage=(date)=>{\n    if(date){\n      this.setState(\n        { date: date, year: moment(date).year() }\n      )\n    }\n    }\n\n  handleHolidayNameChnage=(e)=>{\n    this.setState(\n      { holidayName: e.target.value }\n    )}\n\n  handleTypeChnage=(e)=>{\n    this.setState(\n      { type: e.target.value }\n    )}\n  \n  handleYearChange=(e)=>{\n    this.setState({ yearSelected: e.target.value });\n    this.props.requestHolidayList({year:e.target.value});\n  }\n  \n  addHoliday=()=>{\n    this.props.requestAddHoliday({data:this.state,token:getToken()})\n  }\n\n  deleteHoliday=(id)=>{\n    this.props.requestDeleteHoliday({id:id,token:getToken()})\n  }\n\n  render () {\n    let {isLoading, data} = this.props.holidaysList;\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Holidays List'} showLoading={isLoading} />\n          <div className=\"app-footer\">\n          </div>\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <HolidaysList \n                  holidays={data.holidays} \n                  addHoliday={this.addHoliday} \n                  isAdmin={this.props.loggedUser.data.role===\"Admin\"} \n                  holidayType={this.props.holidayType.data.holiday_type_list}\n                  yearArray={this.year}\n                  handleDateChnage={this.handleDateChnage}\n                  handleHolidayNameChnage={this.handleHolidayNameChnage}\n                  handleTypeChnage={this.handleTypeChnage}\n                  handleYearChange={this.handleYearChange}\n                  deleteHoliday={this.deleteHoliday}\n                  state={this.state}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:     state.frontend.toJS(),\n    loggedUser:   state.logged_user.userLogin,\n    holidaysList: state.holidaysList.holidaysList,\n    addHoliday :  state.holidaysList.addHolidays,\n    deleteHoliday:state.holidaysList.deleteHolidays,\n    holidayType : state.holidaysList.holidayType\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Holidays));\n"]},"metadata":{},"sourceType":"module"}