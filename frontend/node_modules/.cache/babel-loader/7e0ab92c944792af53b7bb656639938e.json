{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/leave/containers/myLeaves.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport UserLeavesList from \"../../../modules/leave/components/myLeaves/UserLeavesList\";\nimport * as actions from \"../../../redux/actions\";\nimport * as actions_myLeaves from \"../../../redux/leave/actions/myLeaves\";\nimport RHLeaves from \"../components/RHLeaves/RHLeaves\";\nimport { getYearArray } from \"../../../services/generic\"; // \"../../../services/generic\";\n\nimport { confirm, notify } from \"../../../services/notify\";\nimport ApplyRHModel from \"../../../components/leave/RHLeaveList/ApplyModal\"; // \"../../../components/leave/RHLeaveList/ApplyModal\";\n\nimport * as actions_apply_leave from \"../../../redux/leave/actions/applyLeave\";\n\nvar MyLeaves =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyLeaves, _React$Component);\n\n  function MyLeaves(props) {\n    var _this;\n\n    _classCallCheck(this, MyLeaves);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyLeaves).call(this, props));\n\n    _this.handleYearChange = function (e) {\n      var id = _this.props.loggedUser.data.id;\n\n      _this.setState({\n        year: e.target.value\n      });\n\n      _this.props.getRHList(e.target.value, id);\n\n      _this.props.getRHStatus(e.target.value, id);\n    };\n\n    _this.handleApplyClick = function (leave) {\n      _this.setState({\n        currentRH: leave,\n        showModal: true\n      });\n    };\n\n    _this.onApplyRHLeave = function () {\n      var id = _this.props.loggedUser.data.id;\n      var _this$state$currentRH = _this.state.currentRH,\n          date = _this$state$currentRH.date,\n          type_text = _this$state$currentRH.type_text,\n          raw_date = _this$state$currentRH.raw_date;\n\n      _this.props.onApplyLeave(raw_date, raw_date, 1, _this.state.inputValue, \"\", \"\", type_text).then(function () {\n        _this.props.onMyLeavesList();\n\n        _this.props.getRHList(_this.year[3], id);\n\n        _this.props.getRHStatus(_this.year[3], id);\n\n        confirm(\"RH is Successfully Applied\", \"\", \"success\");\n      }).catch(function (message) {\n        notify(message, \"\", \"error\");\n      });\n\n      if (_this.state.inputValue) {\n        _this.setState({\n          showModal: false,\n          inputValue: \"\",\n          showError: false\n        });\n      } else {\n        _this.setState({\n          showError: true\n        });\n      }\n    };\n\n    _this.onInputChange = function (e) {\n      _this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    _this.state = {\n      year: \"\",\n      showModal: false,\n      inputValue: \"\",\n      showerror: false,\n      reCall: true\n    };\n\n    _this.props.onIsAlreadyLogin();\n\n    return _this;\n  }\n\n  _createClass(MyLeaves, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onMyLeavesList();\n      this.year = getYearArray();\n      this.setState({\n        year: \"\".concat(this.year[3])\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var id = this.props.loggedUser.data.id;\n      window.scrollTo(0, 0);\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status) {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n\n      if (id && this.state.reCall) {\n        this.props.getRHList(this.year[3], id);\n        this.props.getRHStatus(this.year[3], id);\n        this.setState({\n          reCall: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(ApplyRHModel, {\n        show: this.state.showModal,\n        handleHide: function handleHide() {\n          _this2.setState({\n            showModal: false,\n            inputValue: \"\",\n            showError: false\n          });\n        },\n        onApplyRHLeave: this.onApplyRHLeave,\n        inputChange: this.onInputChange,\n        inputValue: this.state.inputValue,\n        stateData: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Header, {\n        pageTitle: \"My Leaves\",\n        showLoading: this.props.frontend.show_loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(UserLeavesList, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-6 rh-leave-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(RHLeaves, {\n        stateData: this.state,\n        yearArray: this.year,\n        handleYearChange: this.handleYearChange,\n        RHLeaveList: this.props.RHLeaveList.RHLeaves.rh_list,\n        RHStatus: this.props.RHLeaveList.RHStatus,\n        handleApplyClick: this.handleApplyClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return MyLeaves;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    userLeaves: state.userLeaves.toJS(),\n    applyLeave: state.applyLeave.toJS(),\n    RHLeaveList: state.userLeaves.toJS()\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onMyLeavesList: function onMyLeavesList() {\n      return dispatch(actions_myLeaves.getMyLeaves());\n    },\n    onApplyLeave: function onApplyLeave(from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason) {\n      return dispatch(actions_apply_leave.apply_leave(from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason));\n    },\n    onCancelLeave: function onCancelLeave(userId, from_date) {\n      return dispatch(actions_myLeaves.cancelLeave(userId, from_date));\n    },\n    getRHList: function getRHList(year, id) {\n      return dispatch(actions_myLeaves.getRHList(year, id));\n    },\n    getRHStatus: function getRHStatus(year, id) {\n      return dispatch(actions_myLeaves.getRHStatus(year, id));\n    }\n  };\n};\n\nvar VisibleMyLeaves = connect(mapStateToProps, mapDispatchToProps)(MyLeaves);\nvar RouterVisibleMyLeaves = withRouter(VisibleMyLeaves);\nexport default RouterVisibleMyLeaves;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/leave/containers/myLeaves.jsx"],"names":["React","connect","withRouter","Menu","isNotUserValid","Header","UserLeavesList","actions","actions_myLeaves","RHLeaves","getYearArray","confirm","notify","ApplyRHModel","actions_apply_leave","MyLeaves","props","handleYearChange","e","id","loggedUser","data","setState","year","target","value","getRHList","getRHStatus","handleApplyClick","leave","currentRH","showModal","onApplyRHLeave","state","date","type_text","raw_date","onApplyLeave","inputValue","then","onMyLeavesList","catch","message","showError","onInputChange","showerror","reCall","onIsAlreadyLogin","window","scrollTo","isNotValid","location","pathname","status","history","push","redirectTo","frontend","show_loading","RHLeaveList","rh_list","RHStatus","Component","mapStateToProps","toJS","logged_user","userLogin","userLeaves","applyLeave","mapDispatchToProps","dispatch","isAlreadyLogin","getMyLeaves","from_date","to_date","no_of_days","reason","userId","day_status","leaveType","late_reason","apply_leave","onCancelLeave","cancelLeave","VisibleMyLeaves","RouterVisibleMyLeaves"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport UserLeavesList from \"../../../modules/leave/components/myLeaves/UserLeavesList\";\nimport * as actions from \"../../../redux/actions\";\nimport * as actions_myLeaves from \"../../../redux/leave/actions/myLeaves\";\n\nimport RHLeaves from \"../components/RHLeaves/RHLeaves\";\nimport { getYearArray } from \"../../../services/generic\";\n// \"../../../services/generic\";\nimport { confirm, notify } from \"../../../services/notify\";\nimport ApplyRHModel from \"../../../components/leave/RHLeaveList/ApplyModal\";\n// \"../../../components/leave/RHLeaveList/ApplyModal\";\nimport * as actions_apply_leave from \"../../../redux/leave/actions/applyLeave\";\n\nclass MyLeaves extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: \"\",\n      showModal: false,\n      inputValue: \"\",\n      showerror: false,\n      reCall: true\n    };\n    this.props.onIsAlreadyLogin();\n  }\n  componentWillMount() {\n    this.props.onMyLeavesList();\n    this.year = getYearArray();\n    this.setState({ year: `${this.year[3]}` });\n  }\n  componentWillReceiveProps(props) {\n    const { id } = this.props.loggedUser.data;    \n    window.scrollTo(0, 0);\n    let isNotValid = isNotUserValid(\n      this.props.location.pathname,\n      props.loggedUser\n    );\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    if (id && this.state.reCall) {\n      this.props.getRHList(this.year[3], id);\n      this.props.getRHStatus(this.year[3], id);\n      this.setState({\n        reCall: false\n      });\n    }\n  }\n\n  handleYearChange = e => {\n    const { id } = this.props.loggedUser.data;\n    this.setState({ year: e.target.value });\n    this.props.getRHList(e.target.value,id);\n    this.props.getRHStatus(e.target.value,id);\n  };\n\n  handleApplyClick = leave => {\n    this.setState({\n      currentRH: leave,\n      showModal: true\n    });\n  };\n  onApplyRHLeave = () => {\n    const { id } = this.props.loggedUser.data;\n    const { date, type_text, raw_date } = this.state.currentRH;\n    this.props\n      .onApplyLeave(\n        raw_date,\n        raw_date,\n        1,\n        this.state.inputValue,\n        \"\",\n        \"\",\n        type_text\n      )\n      .then(() => {\n        this.props.onMyLeavesList();\n        this.props.getRHList(this.year[3], id);\n        this.props.getRHStatus(this.year[3], id);\n        confirm(\"RH is Successfully Applied\", \"\", \"success\");\n      })\n      .catch(message => {\n        notify(message, \"\", \"error\");\n      });\n    if (this.state.inputValue) {\n      this.setState({\n        showModal: false,\n        inputValue: \"\",\n        showError: false\n      });\n    } else {\n      this.setState({\n        showError: true\n      });\n    }\n  };\n  onInputChange = e => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <ApplyRHModel\n            show={this.state.showModal}\n            handleHide={() => {\n              this.setState({\n                showModal: false,\n                inputValue: \"\",\n                showError: false\n              });\n            }}\n            onApplyRHLeave={this.onApplyRHLeave}\n            inputChange={this.onInputChange}\n            inputValue={this.state.inputValue}\n            stateData={this.state}\n          />\n          <Header\n            pageTitle={\"My Leaves\"}\n            showLoading={this.props.frontend.show_loading}\n          />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <UserLeavesList {...this.props} />\n                </div>\n                <div className=\"col-md-6 rh-leave-container\">\n                  <RHLeaves\n                    stateData={this.state}\n                    yearArray={this.year}\n                    handleYearChange={this.handleYearChange}\n                    RHLeaveList={this.props.RHLeaveList.RHLeaves.rh_list}\n                    RHStatus={this.props.RHLeaveList.RHStatus}\n                    handleApplyClick={this.handleApplyClick}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    userLeaves: state.userLeaves.toJS(),\n    applyLeave: state.applyLeave.toJS(),\n    RHLeaveList: state.userLeaves.toJS()\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onMyLeavesList: () => {\n      return dispatch(actions_myLeaves.getMyLeaves());\n    },\n    onApplyLeave: (\n      from_date,\n      to_date,\n      no_of_days,\n      reason,\n      userId,\n      day_status,\n      leaveType,\n      late_reason\n    ) => {\n      return dispatch(\n        actions_apply_leave.apply_leave(\n          from_date,\n          to_date,\n          no_of_days,\n          reason,\n          userId,\n          day_status,\n          leaveType,\n          late_reason\n        )\n      );\n    },\n    onCancelLeave: (userId, from_date) => {\n      return dispatch(actions_myLeaves.cancelLeave(userId, from_date));\n    },\n    getRHList: (year, id) => dispatch(actions_myLeaves.getRHList(year, id)),\n    getRHStatus: (year, id) => dispatch(actions_myLeaves.getRHStatus(year, id))\n  };\n};\n\nconst VisibleMyLeaves = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyLeaves);\n\nconst RouterVisibleMyLeaves = withRouter(VisibleMyLeaves);\n\nexport default RouterVisibleMyLeaves;\n"]},"metadata":{},"sourceType":"module"}