{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/leave/containers/rhStats.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport * as actions from \"../../../redux/actions\";\nimport * as actions_myLeaves from \"../../../redux/leave/actions/myLeaves\";\nimport RHStatList from \"../../../components/leave/rhStats/rhStatList\";\nimport { getYearArray } from \"../../../services/generic\";\nimport * as actions_RhStats from \"../../../redux/leave/actions/rh_stats\";\n\nvar RHStats =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RHStats, _React$Component);\n\n  function RHStats(props) {\n    var _this;\n\n    _classCallCheck(this, RHStats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RHStats).call(this, props));\n\n    _this.handleYearChange = function (e) {\n      console.log(e.target.value, \"sdsds\");\n      var id = _this.props.loggedUser.data.id;\n\n      _this.setState({\n        year: e.target.value\n      });\n\n      _this.props.onRHStatRequest(e.target.value);\n    };\n\n    _this.state = {\n      year: getYearArray()[3],\n      showerror: false,\n      reCall: true\n    };\n\n    _this.props.onIsAlreadyLogin();\n\n    return _this;\n  }\n\n  _createClass(RHStats, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // this.props.onMyLeavesList();\n      this.props.onRHStatRequest();\n      this.year = getYearArray(); // this.setState({ year: `${this.year[3]}` });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {// const { id } = this.props.loggedUser.data;\n      // window.scrollTo(0, 0);\n      // let isNotValid = isNotUserValid(\n      //   this.props.location.pathname,\n      //   props.loggedUser\n      // );\n      // if (isNotValid.status) {\n      //   this.props.history.push(isNotValid.redirectTo);\n      // }\n      // if (id && this.state.reCall) {\n      //   this.props.getRHList(this.year[3], id);\n      //   this.props.getRHStatus(this.year[3], id);\n      //   this.setState({\n      //     reCall: false\n      //   });\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.year, \"SdsD\", this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: \"RH Stats\",\n        showLoading: this.props.frontend.show_loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(RHStatList, {\n        handleYearChange: this.handleYearChange,\n        rhStatsList: this.props.rhStats.data,\n        stateData: this.state,\n        yearArray: this.year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return RHStats;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    rhStats: state.rhStats.toJS()\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onRHStatRequest: function onRHStatRequest() {\n      return dispatch(actions_RhStats.getRHStats());\n    }\n  };\n};\n\nvar VisibleMyRHStats = connect(mapStateToProps, mapDispatchToProps)(RHStats);\nvar RouterVisibleMyRHStats = withRouter(VisibleMyRHStats);\nexport default RouterVisibleMyRHStats;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/leave/containers/rhStats.jsx"],"names":["React","connect","withRouter","Menu","isNotUserValid","Header","actions","actions_myLeaves","RHStatList","getYearArray","actions_RhStats","RHStats","props","handleYearChange","e","console","log","target","value","id","loggedUser","data","setState","year","onRHStatRequest","state","showerror","reCall","onIsAlreadyLogin","frontend","show_loading","rhStats","Component","mapStateToProps","toJS","logged_user","userLogin","mapDispatchToProps","dispatch","isAlreadyLogin","getRHStats","VisibleMyRHStats","RouterVisibleMyRHStats"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport * as actions from \"../../../redux/actions\";\nimport * as actions_myLeaves from \"../../../redux/leave/actions/myLeaves\";\n\nimport RHStatList from \"../../../components/leave/rhStats/rhStatList\";\nimport { getYearArray } from \"../../../services/generic\";\nimport * as actions_RhStats from \"../../../redux/leave/actions/rh_stats\";\n\nclass RHStats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: getYearArray()[3],\n      showerror: false,\n      reCall: true,\n    };\n    this.props.onIsAlreadyLogin();\n  }\n  componentWillMount() {\n    // this.props.onMyLeavesList();\n    this.props.onRHStatRequest();\n    this.year = getYearArray();\n    // this.setState({ year: `${this.year[3]}` });\n  }\n  componentWillReceiveProps(props) {\n    // const { id } = this.props.loggedUser.data;\n    // window.scrollTo(0, 0);\n    // let isNotValid = isNotUserValid(\n    //   this.props.location.pathname,\n    //   props.loggedUser\n    // );\n    // if (isNotValid.status) {\n    //   this.props.history.push(isNotValid.redirectTo);\n    // }\n    // if (id && this.state.reCall) {\n    //   this.props.getRHList(this.year[3], id);\n    //   this.props.getRHStatus(this.year[3], id);\n    //   this.setState({\n    //     reCall: false\n    //   });\n    // }\n  }\n\n  handleYearChange = e => {\n      console.log(e.target.value,\"sdsds\");\n      \n    const { id } = this.props.loggedUser.data;\n    this.setState({ year: e.target.value });\n    this.props.onRHStatRequest(e.target.value);\n  };\n\n  render() {\n      console.log(this.year,\"SdsD\",this.state);\n      \n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header\n            pageTitle={\"RH Stats\"}\n            showLoading={this.props.frontend.show_loading}\n          />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <RHStatList handleYearChange={this.handleYearChange} rhStatsList={this.props.rhStats.data} stateData={this.state} yearArray={this.year}/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    rhStats: state.rhStats.toJS()\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onRHStatRequest: () => {\n      return dispatch(actions_RhStats.getRHStats());\n    }\n  };\n};\n\nconst VisibleMyRHStats = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RHStats);\n\nconst RouterVisibleMyRHStats = withRouter(VisibleMyRHStats);\n\nexport default RouterVisibleMyRHStats;\n"]},"metadata":{},"sourceType":"module"}