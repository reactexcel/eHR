{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/components/generic/UsersRolesList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Avatar from 'material-ui/Avatar';\n\nvar UsersRolesList = function UsersRolesList(_ref) {\n  var users = _ref.users,\n      _onChange = _ref.onChange;\n  var usersList = '';\n\n  if (users.users_list !== undefined) {\n    var data = users.users_list.data;\n    var rolesName = users.roles;\n    usersList = _.map(data, function (user, key) {\n      var avatar = '';\n      var profileImae = '';\n      var userId = user.user_Id;\n      var roleName = user.role_name;\n      var roleLabelValue = React.createElement(\"span\", {\n        className: \"text-success text-sm\",\n        id: \"\".concat(key, \"_span\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Role\"), \" : \", roleName, \" \", ' ', React.createElement(\"span\", {\n        onClick: function onClick() {\n          _onChange(userId, '0');\n        },\n        className: \"glyphicon glyphicon-remove text-danger\",\n        title: \"Remove Role\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n\n      if (roleName === null || roleName === 0) {\n        roleLabelValue = React.createElement(\"span\", {\n          className: \"text-danger text-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Role\"), \" : -- \");\n      }\n\n      if (!_.isEmpty(user.slack_profile)) {\n        profileImae = user.slack_profile.image_72;\n        avatar = React.createElement(\"img\", {\n          src: profileImae,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      } else {\n        profileImae = user.name != null ? user.name.charAt(0) : '';\n        avatar = React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, profileImae);\n      }\n\n      var optionMenu = _.map(rolesName, function (name, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          id: \"\".concat(name.name, \"_val\"),\n          value: name.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, name.name);\n      });\n\n      var selectMenu = React.createElement(\"select\", {\n        key: userId,\n        name: userId,\n        id: \"\".concat(key, \"_change\"),\n        onChange: function onChange(e) {\n          _onChange(userId, e.target.value);\n        },\n        className: \"form-control text-muted text-ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \" CHANGE ROLE \"), optionMenu);\n      return React.createElement(\"div\", {\n        className: \"b-x p-a-sm pointer\",\n        id: \"\".concat(key, \"_list\"),\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"w-40 avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, avatar)), React.createElement(\"div\", {\n        className: \"list-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, user.name), React.createElement(\"small\", {\n        className: \"text-muted text-ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, user.jobtitle), roleLabelValue, selectMenu));\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"box responsive-p-x-sm p-y clear fixed-height\",\n    id: \"user_list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, usersList);\n};\n\nexport default UsersRolesList;\nUsersRolesList.propTypes = {\n  users: PropTypes.shape({\n    users_list: PropTypes.object\n  }).isRequired,\n  onChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/components/generic/UsersRolesList.jsx"],"names":["React","PropTypes","_","Avatar","UsersRolesList","users","onChange","usersList","users_list","undefined","data","rolesName","roles","map","user","key","avatar","profileImae","userId","user_Id","roleName","role_name","roleLabelValue","isEmpty","slack_profile","image_72","name","charAt","optionMenu","index","id","selectMenu","e","target","value","jobtitle","propTypes","shape","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,OAAuB;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,SAAc,QAAdA,QAAc;AAC1C,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAIF,KAAK,CAACG,UAAN,KAAqBC,SAAzB,EAAoC;AAClC,QAAIC,IAAI,GAAGL,KAAK,CAACG,UAAN,CAAiBE,IAA5B;AACA,QAAIC,SAAS,GAAGN,KAAK,CAACO,KAAtB;AACAL,IAAAA,SAAS,GAAGL,CAAC,CAACW,GAAF,CAAMH,IAAN,EAAY,UAACI,IAAD,EAAOC,GAAP,EAAe;AACrC,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,MAAM,GAAGJ,IAAI,CAACK,OAAlB;AACA,UAAIC,QAAQ,GAAGN,IAAI,CAACO,SAApB;AACA,UAAIC,cAAc,GAAG;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAuC,QAAA,EAAE,YAAKP,GAAL,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1D,SAAyEK,QAAzE,OAAoF,GAApF,EAAwF;AAAM,QAAA,OAAO,EAAE,mBAAM;AAAEd,UAAAA,SAAQ,CAACY,MAAD,EAAS,GAAT,CAAR;AAAwB,SAA/C;AAAiD,QAAA,SAAS,EAAC,wCAA3D;AAAoG,QAAA,KAAK,EAAC,aAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxF,CAArB;;AACA,UAAIE,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,CAAtC,EAAyC;AACvCE,QAAAA,cAAc,GAAG;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtC,WAAjB;AACD;;AACD,UAAI,CAACpB,CAAC,CAACqB,OAAF,CAAUT,IAAI,CAACU,aAAf,CAAL,EAAoC;AAClCP,QAAAA,WAAW,GAAGH,IAAI,CAACU,aAAL,CAAmBC,QAAjC;AACAT,QAAAA,MAAM,GAAG;AAAK,UAAA,GAAG,EAAEC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD,OAHD,MAGO;AACLA,QAAAA,WAAW,GAAGH,IAAI,CAACY,IAAL,IAAa,IAAb,GAAoBZ,IAAI,CAACY,IAAL,CAAUC,MAAV,CAAiB,CAAjB,CAApB,GAA0C,EAAxD;AACAX,QAAAA,MAAM,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASC,WAAT,CAAT;AACD;;AACD,UAAIW,UAAU,GAAG1B,CAAC,CAACW,GAAF,CAAMF,SAAN,EAAiB,UAACe,IAAD,EAAOG,KAAP,EAAiB;AACjD,eAAQ;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,EAAE,YAAKH,IAAI,CAACA,IAAV,SAAtB;AAA4C,UAAA,KAAK,EAAEA,IAAI,CAACI,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8DJ,IAAI,CAACA,IAAnE,CAAR;AACD,OAFgB,CAAjB;;AAGA,UAAIK,UAAU,GAAG;AAAQ,QAAA,GAAG,EAAEb,MAAb;AAAqB,QAAA,IAAI,EAAEA,MAA3B;AAAmC,QAAA,EAAE,YAAKH,GAAL,YAArC;AAAwD,QAAA,QAAQ,EAAE,kBAACiB,CAAD,EAAO;AAAE1B,UAAAA,SAAQ,CAACY,MAAD,EAASc,CAAC,CAACC,MAAF,CAASC,KAAlB,CAAR;AAAmC,SAA9G;AAAgH,QAAA,SAAS,EAAC,uCAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkK;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAlK,EAA4MN,UAA5M,CAAjB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,EAAE,YAAKb,GAAL,UAAtC;AAAuD,QAAA,GAAG,EAAEA,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BC,MAA/B,CAA3B,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,IAAI,CAACY,IAAZ,CADF,EAEE;AAAO,QAAA,SAAS,EAAC,0BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6CZ,IAAI,CAACqB,QAAlD,CAFF,EAGGb,cAHH,EAIGS,UAJH,CAFF,CADF;AAWD,KA/BW,CAAZ;AAgCD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,8CAAf;AAA8D,IAAA,EAAE,EAAC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,SADH,CADF;AAKD,CA3CD;;AA6CA,eAAeH,cAAf;AAEAA,cAAc,CAACgC,SAAf,GAA2B;AACzB/B,EAAAA,KAAK,EAAEJ,SAAS,CAACoC,KAAV,CAAgB;AACrB7B,IAAAA,UAAU,EAAEP,SAAS,CAACqC;AADD,GAAhB,EAEJC,UAHsB;AAIzBjC,EAAAA,QAAQ,EAAEL,SAAS,CAACuC,IAAV,CAAeD;AAJA,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Avatar from 'material-ui/Avatar';\n\nlet UsersRolesList = ({users, onChange}) => {\n  let usersList = '';\n  if (users.users_list !== undefined) {\n    let data = users.users_list.data;\n    let rolesName = users.roles;\n    usersList = _.map(data, (user, key) => {\n      let avatar = '';\n      let profileImae = '';\n      let userId = user.user_Id;\n      let roleName = user.role_name;\n      let roleLabelValue = <span className=\"text-success text-sm\" id={`${key}_span`}><b>Role</b> : {roleName} {' '}<span onClick={() => { onChange(userId, '0'); }} className='glyphicon glyphicon-remove text-danger' title=\"Remove Role\"></span></span>;\n      if (roleName === null || roleName === 0) {\n        roleLabelValue = <span className=\"text-danger text-sm\"><b>Role</b> : -- </span>;\n      }\n      if (!_.isEmpty(user.slack_profile)) {\n        profileImae = user.slack_profile.image_72;\n        avatar = <img src={profileImae} />;\n      } else {\n        profileImae = user.name != null ? user.name.charAt(0) : '';\n        avatar = <Avatar>{profileImae}</Avatar>;\n      }\n      let optionMenu = _.map(rolesName, (name, index) => {\n        return (<option key={index} id={`${name.name}_val`} value={name.id} >{name.name}</option>);\n      });\n      let selectMenu = <select key={userId} name={userId} id={`${key}_change`} onChange={(e) => { onChange(userId, e.target.value); }} className=\"form-control text-muted text-ellipsis\"><option value=\"-1\"> CHANGE ROLE </option>{optionMenu}</select>;\n      return (\n        <div className=\"b-x p-a-sm pointer\" id={`${key}_list`} key={key}>\n          <div className=\"list-left\"><span className=\"w-40 avatar\">{avatar}</span></div>\n          <div className=\"list-body\">\n            <span>{user.name}</span>\n            <small className=\"text-muted text-ellipsis\">{user.jobtitle}</small>\n            {roleLabelValue}\n            {selectMenu}\n          </div>\n        </div>\n      );\n    });\n  }\n  return (\n    <div className=\"box responsive-p-x-sm p-y clear fixed-height\" id=\"user_list\">\n      {usersList}\n    </div>\n  );\n};\n\nexport default UsersRolesList;\n\nUsersRolesList.propTypes = {\n  users: PropTypes.shape({\n    users_list: PropTypes.object\n  }).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}