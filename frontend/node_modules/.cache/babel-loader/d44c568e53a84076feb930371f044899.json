{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport * as _ from 'lodash';\nimport * as jwt from 'jwt-simple';\nimport { CONFIG } from '../../../config/index';\nimport { fireAjax } from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nexport function leave_sucess(data) {\n  return createAction(constants.ACTION_LEAVE_SUCCESS)(data);\n}\nexport function leave_fail(data) {\n  return createAction(constants.ACTION_LEAVE_FAIL)('Leave Apply Fail');\n}\nexport function leave_error(err) {\n  return createAction(constants.ACTION_LEAVE_ERROR)('Error Occurs !!');\n}\n\nfunction async_apply_leave(from_date, to_date, no_of_days, reason, day_status, leaveType, late_reason, pending_id, year, month, user_Id) {\n  return fireAjax('POST', '', {\n    'action': 'apply_leave',\n    'from_date': from_date,\n    'to_date': to_date,\n    'no_of_days': no_of_days,\n    'reason': reason,\n    'day_status': day_status,\n    'leave_type': leaveType,\n    'late_reason': late_reason,\n    'pending_id': pending_id\n  });\n}\n\nfunction async_apply_employe_leave(from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason, pending_id, year, month) {\n  return fireAjax('POST', '', {\n    'action': 'admin_user_apply_leave',\n    'from_date': from_date,\n    'to_date': to_date,\n    'no_of_days': no_of_days,\n    'reason': reason,\n    'user_id': userId,\n    'day_status': day_status,\n    'leave_type': leaveType,\n    'late_reason': late_reason,\n    'pending_id': pending_id\n  });\n}\n\nexport function apply_leave(from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason, pending_id, year, month) {\n  return function (dispatch, getState) {\n    if (_.isEmpty(from_date)) {\n      return Promise.reject('From date is empty');\n    }\n\n    if (_.isEmpty(to_date)) {\n      return Promise.reject('To date is empty');\n    }\n\n    if (no_of_days == '') {\n      return Promise.reject('No of days is empty');\n    }\n\n    if (_.isEmpty(reason)) {\n      return Promise.reject('Reason is empty');\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      if (userId == '') {\n        async_apply_leave(from_date, to_date, no_of_days, reason, day_status, leaveType, late_reason, pending_id, year, month).then(function (json) {\n          dispatch(hide_loading()); // hide loading icon\n\n          if (json.error == 0) {\n            dispatch(leave_sucess(json.data.message));\n            resolve();\n          } else {\n            dispatch(leave_fail(json.data.message));\n            reject(json.data.message);\n          }\n        }, function (error) {\n          dispatch(hide_loading()); // hide loading icon\n\n          dispatch(leave_error('error occurs'));\n        });\n      } else {\n        async_apply_employe_leave(from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason, pending_id, year, month).then(function (json) {\n          dispatch(hide_loading()); // hide loading icon\n\n          if (json.error == 0) {\n            resolve(json.data.message);\n            dispatch(leave_sucess(json.data.message));\n          } else {\n            dispatch(leave_fail(json.data.message));\n            reject(json.data.message);\n          }\n        }, function (error) {\n          dispatch(hide_loading()); // hide loading icon\n\n          dispatch(leave_error('error occurs'));\n          reject('error occurs');\n        });\n      }\n    });\n  };\n} // ------get days between leaves\n\nexport function days_between_leaves_sucess(data) {\n  return createAction(constants.ACTION_DAYS_BETWEEN_LEAVES_SUCCESS)(data);\n}\nexport function days_between_leaves_fail(data) {\n  return createAction(constants.ACTION_DAYS_BETWEEN_LEAVES_FAIL)(data);\n}\nexport function days_between_leaves_error(data) {\n  return createAction(constants.ACTION_DAYS_BETWEEN_LEAVES_ERROR)(data);\n}\n\nfunction async_getDaysBetweenLeaves(startDate, endDate) {\n  return fireAjax('POST', '', {\n    'action': 'get_days_between_leaves',\n    'start_date': startDate,\n    'end_date': endDate\n  });\n}\n\nexport function getDaysBetweenLeaves(startDate, endDate) {\n  return function (dispatch, getState) {\n    return new Promise(function (reslove, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getDaysBetweenLeaves(startDate, endDate).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(days_between_leaves_sucess(json.data));\n        } else {\n          dispatch(days_between_leaves_fail(json.data));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(days_between_leaves_error('error occurs'));\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/leave/actions/applyLeave.js"],"names":["createAction","_","jwt","CONFIG","fireAjax","constants","show_loading","hide_loading","leave_sucess","data","ACTION_LEAVE_SUCCESS","leave_fail","ACTION_LEAVE_FAIL","leave_error","err","ACTION_LEAVE_ERROR","async_apply_leave","from_date","to_date","no_of_days","reason","day_status","leaveType","late_reason","pending_id","year","month","user_Id","async_apply_employe_leave","userId","apply_leave","dispatch","getState","isEmpty","Promise","reject","resolve","then","json","error","message","days_between_leaves_sucess","ACTION_DAYS_BETWEEN_LEAVES_SUCCESS","days_between_leaves_fail","ACTION_DAYS_BETWEEN_LEAVES_FAIL","days_between_leaves_error","ACTION_DAYS_BETWEEN_LEAVES_ERROR","async_getDaysBetweenLeaves","startDate","endDate","getDaysBetweenLeaves","reslove"],"mappings":"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","sourcesContent":["import {createAction} from 'redux-actions';\nimport * as _ from 'lodash';\nimport * as jwt from 'jwt-simple';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\nexport function leave_sucess (data) {\n  return createAction(constants.ACTION_LEAVE_SUCCESS)(data);\n}\n\nexport function leave_fail (data) {\n  return createAction(constants.ACTION_LEAVE_FAIL)('Leave Apply Fail');\n}\n\nexport function leave_error (err) {\n  return createAction(constants.ACTION_LEAVE_ERROR)('Error Occurs !!');\n}\n\nfunction async_apply_leave (from_date, to_date, no_of_days, reason, day_status, leaveType, late_reason, pending_id, year, month, user_Id) {\n  return fireAjax('POST', '', {\n    'action':      'apply_leave',\n    'from_date':   from_date,\n    'to_date':     to_date,\n    'no_of_days':  no_of_days,\n    'reason':      reason,\n    'day_status':  day_status,\n    'leave_type':  leaveType,\n    'late_reason': late_reason,\n    'pending_id':  pending_id\n  });\n}\n\nfunction async_apply_employe_leave (from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason, pending_id, year, month) {\n  return fireAjax('POST', '', {\n    'action':      'admin_user_apply_leave',\n    'from_date':   from_date,\n    'to_date':     to_date,\n    'no_of_days':  no_of_days,\n    'reason':      reason,\n    'user_id':     userId,\n    'day_status':  day_status,\n    'leave_type':  leaveType,\n    'late_reason': late_reason,\n    'pending_id':  pending_id\n  });\n}\n\nexport function apply_leave (from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason, pending_id, year, month) {\n  return function (dispatch, getState) {\n    if (_.isEmpty(from_date)) {\n      return Promise.reject('From date is empty');\n    }\n    if (_.isEmpty(to_date)) {\n      return Promise.reject('To date is empty');\n    }\n    if (no_of_days == '') {\n      return Promise.reject('No of days is empty');\n    }\n    if (_.isEmpty(reason)) {\n      return Promise.reject('Reason is empty');\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      if (userId == '') {\n        async_apply_leave(from_date, to_date, no_of_days, reason, day_status, leaveType, late_reason, pending_id, year, month).then((json) => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(leave_sucess(json.data.message));\n            resolve()\n          } else {\n            dispatch(leave_fail(json.data.message));\n            reject(json.data.message);\n          }\n        }, (error) => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(leave_error('error occurs'));\n        }\n);\n      } else {\n        async_apply_employe_leave(from_date, to_date, no_of_days, reason, userId, day_status, leaveType, late_reason, pending_id, year, month).then(\n(json) => {\n  dispatch(hide_loading()); // hide loading icon\n  if (json.error == 0) {\n    resolve(json.data.message);\n    dispatch(leave_sucess(json.data.message));\n  } else {\n    dispatch(leave_fail(json.data.message));\n    reject(json.data.message);\n  }\n}, (error) => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(leave_error('error occurs'));\n          reject('error occurs');\n        }\n);\n      }\n    });\n  };\n}\n\n// ------get days between leaves\n\nexport function days_between_leaves_sucess (data) {\n  return createAction(constants.ACTION_DAYS_BETWEEN_LEAVES_SUCCESS)(data);\n}\n\nexport function days_between_leaves_fail (data) {\n  return createAction(constants.ACTION_DAYS_BETWEEN_LEAVES_FAIL)(data);\n}\n\nexport function days_between_leaves_error (data) {\n  return createAction(constants.ACTION_DAYS_BETWEEN_LEAVES_ERROR)(data);\n}\n\nfunction async_getDaysBetweenLeaves (startDate, endDate) {\n  return fireAjax('POST', '', {\n    'action':     'get_days_between_leaves',\n    'start_date': startDate,\n    'end_date':   endDate\n  });\n}\n\nexport function getDaysBetweenLeaves (startDate, endDate) {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getDaysBetweenLeaves(startDate, endDate).then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n  if (json.error == 0) {\n    dispatch(days_between_leaves_sucess(json.data));\n  } else {\n    dispatch(days_between_leaves_fail(json.data));\n  }\n},\n\t\t\t\t(error) => {\n  dispatch(hide_loading()); // hide loading icon\n  dispatch(days_between_leaves_error('error occurs'));\n}\n\t\t\t);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}