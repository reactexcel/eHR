{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/components/salary/manageSalary/UserHistoryHolding.jsx\";\nimport React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nvar UserHistoryHolding = function UserHistoryHolding(_ref) {\n  var data = _ref.data;\n  var holdingHistory = React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"No holding data available\")));\n\n  if (data.length) {\n    holdingHistory = _.map(data, function (item, key) {\n      return React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Rs.\", item.holding_amt), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, moment(item.holding_start_date).format(\"DD-MMMM-YYYY\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, moment(item.holding_end_date).format(\"DD-MMMM-YYYY\"), \" (\", item.holding_month, \" \", item.holding_month < 2 ? 'month' : 'months', \")\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, item.reason), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, moment(item.last_updated_on).format(\"DD-MMMM-YYYY\")));\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Holding Amount\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Start\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"End\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Reason\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Updated on\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, holdingHistory)));\n};\n\nUserHistoryHolding.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default UserHistoryHolding;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/components/salary/manageSalary/UserHistoryHolding.jsx"],"names":["React","_","PropTypes","moment","UserHistoryHolding","data","holdingHistory","length","map","item","key","holding_amt","holding_start_date","format","holding_end_date","holding_month","reason","last_updated_on","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACrC,MAAIC,cAAc,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAClB;AAAI,IAAA,OAAO,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgB;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAhB,CADkB,CAAtB;;AAGA,MAAID,IAAI,CAACE,MAAT,EAAiB;AACbD,IAAAA,cAAc,GAAGL,CAAC,CAACO,GAAF,CAAMH,IAAN,EAAY,UAACI,IAAD,EAAOC,GAAP,EAAe;AACxC,aACI;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAQD,IAAI,CAACE,WAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,MAAM,CAACM,IAAI,CAACG,kBAAN,CAAN,CAAgCC,MAAhC,CAAuC,cAAvC,CAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKV,MAAM,CAACM,IAAI,CAACK,gBAAN,CAAN,CAA8BD,MAA9B,CAAqC,cAArC,CAAL,QAA6DJ,IAAI,CAACM,aAAlE,OAAkFN,IAAI,CAACM,aAAL,GAAqB,CAArB,GAAyB,OAAzB,GAAmC,QAArH,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,IAAI,CAACO,MAAV,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKb,MAAM,CAACM,IAAI,CAACQ,eAAN,CAAN,CAA6BJ,MAA7B,CAAoC,cAApC,CAAL,CALJ,CADJ;AASH,KAVgB,CAAjB;AAWH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,cADL,CAVJ,CADJ,CADJ;AAkBH,CApCD;;AAsCAF,kBAAkB,CAACc,SAAnB,GAA+B;AAC3Bb,EAAAA,IAAI,EAAEH,SAAS,CAACiB,KAAV,CAAgBC;AADK,CAA/B;AAIA,eAAehB,kBAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst UserHistoryHolding = ({ data }) => {\n    let holdingHistory = (<tr>\n        <td colSpan={5}><div className=\"text-center\">No holding data available</div></td>\n    </tr>)\n    if (data.length) {\n        holdingHistory = _.map(data, (item, key) => {\n            return (\n                <tr key={key}>\n                    <td>Rs.{item.holding_amt}</td>\n                    <td>{moment(item.holding_start_date).format(\"DD-MMMM-YYYY\")}</td>\n                    <td>{moment(item.holding_end_date).format(\"DD-MMMM-YYYY\")} ({item.holding_month} {item.holding_month < 2 ? 'month' : 'months'})</td>\n                    <td>{item.reason}</td>\n                    <td>{moment(item.last_updated_on).format(\"DD-MMMM-YYYY\")}</td>\n                </tr>\n            )\n        });\n    }\n\n    return (\n        <div>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <td>Holding Amount</td>\n                        <td>Start</td>\n                        <td>End</td>\n                        <td>Reason</td>\n                        <td>Updated on</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {holdingHistory}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nUserHistoryHolding.propTypes = {\n    data: PropTypes.array.isRequired\n}\n\nexport default UserHistoryHolding;\n"]},"metadata":{},"sourceType":"module"}