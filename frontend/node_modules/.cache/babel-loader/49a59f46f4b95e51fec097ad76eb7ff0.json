{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport _ from 'lodash';\nimport { fireAjax } from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nexport function pendingLeaveSucess(data) {\n  return createAction(constants.ACTION_PENDING_LEAVE_SUCCESS)(data);\n}\nexport function pendingLeaveFail(data) {\n  return createAction(constants.ACTION_PENDING_LEAVE_FAIL)('Leave Apply Fail');\n}\nexport function pendingLeaveError(err) {\n  return createAction(constants.ACTION_PENDING_LEAVE_ERROR)('Error Occurs !!');\n}\n\nfunction asyncApplyEmployeLeave(no_of_days, userId, day_status, pending_id, year, month) {\n  return fireAjax('POST', '', {\n    'action': 'admin_user_apply_leave',\n    'no_of_days': no_of_days,\n    'user_id': userId,\n    'day_status': day_status,\n    'pending_id': pending_id\n  });\n}\n\nexport function applyPendingLeave(no_of_days, userId, day_status, pending_id, year, month) {\n  return function (dispatch, getState) {\n    return new Promise(function (reslove, reject) {\n      // dispatch(show_loading()); // show loading icon\n      asyncApplyEmployeLeave(no_of_days, userId, day_status, pending_id).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          reslove(json.data.message);\n          dispatch(pendingLeaveSucess(json.data.message));\n        } else {\n          dispatch(pendingLeaveFail(json.data.message));\n          reject(json.data.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(pendingLeaveError('error occurs'));\n        reject('error occurs');\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/workingHours/actions/managePendingLeave.js"],"names":["createAction","_","fireAjax","constants","show_loading","hide_loading","pendingLeaveSucess","data","ACTION_PENDING_LEAVE_SUCCESS","pendingLeaveFail","ACTION_PENDING_LEAVE_FAIL","pendingLeaveError","err","ACTION_PENDING_LEAVE_ERROR","asyncApplyEmployeLeave","no_of_days","userId","day_status","pending_id","year","month","applyPendingLeave","dispatch","getState","Promise","reslove","reject","then","json","error","message"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,eAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,0BAA3B;AACA,SAAQC,YAAR,EAAsBC,YAAtB,QAAyC,yCAAzC;AAEA,OAAO,SAASC,kBAAT,CAA6BC,IAA7B,EAAmC;AACxC,SAAOP,YAAY,CAACG,SAAS,CAACK,4BAAX,CAAZ,CAAqDD,IAArD,CAAP;AACD;AAED,OAAO,SAASE,gBAAT,CAA2BF,IAA3B,EAAiC;AACtC,SAAOP,YAAY,CAACG,SAAS,CAACO,yBAAX,CAAZ,CAAkD,kBAAlD,CAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA4BC,GAA5B,EAAiC;AACtC,SAAOZ,YAAY,CAACG,SAAS,CAACU,0BAAX,CAAZ,CAAmD,iBAAnD,CAAP;AACD;;AAED,SAASC,sBAAT,CAAiCC,UAAjC,EAA6CC,MAA7C,EAAqDC,UAArD,EAAiEC,UAAjE,EAA6EC,IAA7E,EAAmFC,KAAnF,EAA0F;AACxF,SAAOlB,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1B,cAAc,wBADY;AAE1B,kBAAca,UAFY;AAG1B,eAAcC,MAHY;AAI1B,kBAAcC,UAJY;AAK1B,kBAAcC;AALY,GAAb,CAAf;AAOD;;AAED,OAAO,SAASG,iBAAT,CAA4BN,UAA5B,EAAwCC,MAAxC,EAAgDC,UAAhD,EAA4DC,UAA5D,EAAwEC,IAAxE,EAA8EC,KAA9E,EAAqF;AAC1F,SAAO,UAAUE,QAAV,EAAoBC,QAApB,EAA8B;AACnC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC;AACAZ,MAAAA,sBAAsB,CACpBC,UADoB,EAEpBC,MAFoB,EAGpBC,UAHoB,EAIpBC,UAJoB,CAAtB,CAIcS,IAJd,CAImB,UAACC,IAAD,EAAU;AACzBN,QAAAA,QAAQ,CAACjB,YAAY,EAAb,CAAR,CADyB,CACC;;AAC1B,YAAIuB,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBJ,UAAAA,OAAO,CAACG,IAAI,CAACrB,IAAL,CAAUuB,OAAX,CAAP;AACAR,UAAAA,QAAQ,CAAChB,kBAAkB,CAACsB,IAAI,CAACrB,IAAL,CAAUuB,OAAX,CAAnB,CAAR;AACD,SAHD,MAGO;AACLR,UAAAA,QAAQ,CAACb,gBAAgB,CAACmB,IAAI,CAACrB,IAAL,CAAUuB,OAAX,CAAjB,CAAR;AACAJ,UAAAA,MAAM,CAACE,IAAI,CAACrB,IAAL,CAAUuB,OAAX,CAAN;AACD;AACF,OAbH,EAaK,UAACD,KAAD,EAAW;AACZP,QAAAA,QAAQ,CAACjB,YAAY,EAAb,CAAR,CADY,CACc;;AAC1BiB,QAAAA,QAAQ,CAACX,iBAAiB,CAAC,cAAD,CAAlB,CAAR;AACAe,QAAAA,MAAM,CAAC,cAAD,CAAN;AACD,OAjBH;AAmBD,KArBM,CAAP;AAsBD,GAvBD;AAwBD","sourcesContent":["import {createAction} from 'redux-actions';\nimport _ from 'lodash';\nimport {fireAjax} from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\nexport function pendingLeaveSucess (data) {\n  return createAction(constants.ACTION_PENDING_LEAVE_SUCCESS)(data);\n}\n\nexport function pendingLeaveFail (data) {\n  return createAction(constants.ACTION_PENDING_LEAVE_FAIL)('Leave Apply Fail');\n}\n\nexport function pendingLeaveError (err) {\n  return createAction(constants.ACTION_PENDING_LEAVE_ERROR)('Error Occurs !!');\n}\n\nfunction asyncApplyEmployeLeave (no_of_days, userId, day_status, pending_id, year, month) {\n  return fireAjax('POST', '', {\n    'action':     'admin_user_apply_leave',\n    'no_of_days': no_of_days,\n    'user_id':    userId,\n    'day_status': day_status,\n    'pending_id': pending_id\n  });\n}\n\nexport function applyPendingLeave (no_of_days, userId, day_status, pending_id, year, month) {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      // dispatch(show_loading()); // show loading icon\n      asyncApplyEmployeLeave(\n        no_of_days,\n        userId,\n        day_status,\n        pending_id).then((json) => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            reslove(json.data.message);\n            dispatch(pendingLeaveSucess(json.data.message));\n          } else {\n            dispatch(pendingLeaveFail(json.data.message));\n            reject(json.data.message);\n          }\n        }, (error) => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(pendingLeaveError('error occurs'));\n          reject('error occurs');\n        }\n      );\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}