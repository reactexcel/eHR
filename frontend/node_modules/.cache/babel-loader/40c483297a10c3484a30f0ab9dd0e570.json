{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/containers/manageDashboard.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport _ from \"lodash\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { dateFormatter } from '../../../helper/helper';\nimport { bindActionCreators } from \"redux\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport LoadingIcon from \"../../../components/generic/LoadingIcon\";\nimport * as actions from \"../../../redux/actions\";\nimport Header from \"../../../components/generic/Header\";\nimport GetLogo from \"../../../components/auth/login/GetLogo\";\nimport UsersListHeader from \"../../../components/generic/UsersListHeader\";\nimport PageUserDashboard from \"../../../modules/manageUsers/components/PageUserDashboard\";\nimport PageMonthlyHours from \"../../../modules/manageUsers/components/PageMonthlyHours\";\nimport PageEmployeePerformance from \"../../../modules/manageUsers/components/PageEmployeePerformance\";\nimport EmployeeLeastActiveHours from '../../../modules/manageUsers/components/employeeLeastActiveHours';\nimport NewEmployeeLeastActiveHours from '../../../modules/manageUsers/components/newEmployeeLeastActiveHours';\nimport PageEmployeeLifeCycle from \"../../../modules/manageUsers/components/PageEmployeeLifeCycle\";\nimport PageEmpHours from \"../../../modules/manageUsers/components/PageEmpHours\";\nimport { resetLoggedUser } from \"../../../services/generic\";\nimport { getLoggedUser } from \"../../../services/generic\";\nimport * as actionsManageUserPendingHours from \"../../../redux/workingHours/actions/manageUserPendingHour\";\nimport $ from 'jquery';\nimport logo from '../../../static/logo.png';\n\nvar moment = require(\"moment\");\n\nvar ManageDashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManageDashboard, _React$Component);\n\n  function ManageDashboard(props) {\n    var _this;\n\n    _classCallCheck(this, ManageDashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManageDashboard).call(this, props));\n    _this.state = {\n      dateObject: dateFormatter(),\n      defaultTeamDisplay: \"\",\n      status_message: \"\",\n      active: \"active\",\n      firstArrow: \"hidden\",\n      secondArrow: \"hidden\",\n      thirdArrow: \"hidden\",\n      fourthArrow: \"hidden\",\n      fifthArrow: \"show\",\n      teamList: \"hidden\",\n      empLifeCycle: \"hidden\",\n      empHours: \"hidden\",\n      monthlyHours: \"hidden\",\n      empPerformance: \"show\",\n      empData: \"\",\n      currentDate: \"\",\n      currentYear: \"\",\n      currentMonth: \"\",\n      date: \"\",\n      months: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      years: [],\n      startDate: null,\n      endDate: null\n    };\n    _this.openPage = _this.openPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getByData = _this.getByData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManageDashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount(props) {\n      window.scrollTo(0, 0);\n      var dateData = new Date();\n      var dataDate = dateData.toString().split(\" \");\n      var year = dateData.getFullYear();\n      var month = dateData.getMonth();\n      var date = dataDate[2];\n      var months = this.state.months;\n      var userId = localStorage.getItem(\"userid\");\n      var startYear = 2010;\n      var yearOptions = [];\n\n      while (startYear <= year) {\n        yearOptions.push(startYear);\n        startYear++;\n      }\n\n      this.setState({\n        currentMonth: months[month],\n        currentYear: year,\n        currentDate: date,\n        years: yearOptions,\n        date: dateData\n      });\n      this.props.requestEmployeeHours({\n        id: userId,\n        date: date,\n        month: months[month],\n        year: year\n      });\n      this.props.requestLeastActiveEmployee({\n        start_date: \"\",\n        end_date: \"\"\n      });\n      var monthlyReport = {\n        month: this.state.dateObject.monthAlpha,\n        year: year\n      };\n      this.props.requestUserList();\n      this.props.requestTeamStats();\n      this.props.requestEmployeLifeCycle({\n        start_year: year,\n        end_year: year\n      });\n      this.props.requestEmployeeMonthlyHours({\n        id: userId,\n        month: months[month],\n        year: year\n      });\n      this.props.requestEmployeePerformance({\n        id: userId,\n        month: months[month],\n        year: year\n      });\n      $(document).ready(function () {\n        $('[data-toggle=\"tooltip\"]').tooltip();\n      });\n      var tokenData = getLoggedUser().data;\n      var testDate = tokenData.login_date_time;\n      var logintime = moment(testDate).format(\"MM/DD/YYYY hh:mm:ss a\");\n      var now = moment(new Date()),\n          end = moment(testDate),\n          hours = now.diff(end, \"hours\");\n\n      if (hours > 1) {\n        resetLoggedUser();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        defaultTeamDisplay: props.teamStats.teamStats.data.teams,\n        empData: props.empHours\n      });\n    }\n  }, {\n    key: \"getByData\",\n    value: function getByData(data) {\n      var userId = localStorage.getItem('userid');\n      this.props.requestMonthlyReportAllUsers({\n        'month': data.month,\n        'year': data.year\n      });\n    }\n  }, {\n    key: \"openPage\",\n    value: function openPage(toDisplay) {\n      if (toDisplay === \"team_list\") {\n        this.setState({\n          teamList: \"row\",\n          firstArrow: \"show\",\n          empLifeCycle: \"hidden\",\n          empHours: \"hidden\",\n          monthlyHours: \"hidden\",\n          empPerformance: \"hidden\",\n          secondArrow: \"hidden\",\n          thirdArrow: \"hidden\",\n          fourthArrow: \"hidden\",\n          fifthArrow: \"hidden\"\n        });\n      } else if (toDisplay === \"emp_life_cycle\") {\n        this.setState({\n          empLifeCycle: \"row\",\n          secondArrow: \"show\",\n          teamList: \"hidden\",\n          firstArrow: \"hidden\",\n          thirdArrow: \"hidden\",\n          fourthArrow: \"hidden\",\n          fifthArrow: \"hidden\",\n          empHours: \"hidden\",\n          monthlyHours: \"hidden\",\n          empPerformance: \"hidden\"\n        });\n      } else if (toDisplay === \"attendance_list\") {\n        this.setState({\n          empHours: \"row\",\n          thirdArrow: \"show\",\n          teamList: \"hidden\",\n          firstArrow: \"hidden\",\n          empLifeCycle: \"hidden\",\n          secondArrow: \"hidden\",\n          fourthArrow: \"hidden\",\n          fifthArrow: \"hidden\",\n          monthlyHours: \"hidden\",\n          empPerformance: \"hidden\"\n        });\n      } else if (toDisplay === \"monthlyHours\") {\n        this.setState({\n          monthlyHours: \"row\",\n          fourthArrow: \"show\",\n          empHours: \"hidden\",\n          thirdArrow: \"hidden\",\n          teamList: \"hidden\",\n          firstArrow: \"hidden\",\n          empLifeCycle: \"hidden\",\n          empPerformance: \"hidden\",\n          secondArrow: \"hidden\",\n          fifthArrow: \"hidden\"\n        });\n      } else if (toDisplay === \"employee_performance\") {\n        this.setState({\n          empPerformance: \"row\",\n          fifthArrow: \"show\",\n          monthlyHours: \"hidden\",\n          fourthArrow: \"hidden\",\n          empHours: \"hidden\",\n          thirdArrow: \"hidden\",\n          teamList: \"hidden\",\n          firstArrow: \"hidden\",\n          empLifeCycle: \"hidden\",\n          secondArrow: \"hidden\"\n        });\n      }\n    }\n  }, {\n    key: \"handleStartDate\",\n    value: function handleStartDate(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"handleEndDate\",\n    value: function handleEndDate(date) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate;\n      this.setState({\n        endDate: date\n      }, function () {\n        if (startDate) {\n          var start_date = moment(startDate).format('YYYY-MM-DD');\n          var end_date = moment(date).format('YYYY-MM-DD');\n\n          _this2.props.requestLeastActiveEmployee({\n            start_date: start_date,\n            end_date: end_date\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"nav-dashboard box-shadow m-b p-y-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"p-0\",\n        style: {\n          marginTop: \"0.7%\"\n        },\n        src: logo,\n        height: \"40\",\n        width: \"220\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"page_login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"p-dashboard\",\n        \"data-toggle\": \"tooltip\",\n        \"data-placement\": \"bottom\",\n        title: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        id: \"openLogin\",\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"power_settings_new\"))))), React.createElement(\"div\", {\n        className: \"app-body \",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(LoadingIcon, {\n        loading: this.props.teamStats.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"p-a-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, this.state.role === \"admin\" ? React.createElement(\"div\", {\n        className: \"col-xs-12 well box-shadow-deep p-a box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(PageUserDashboard, Object.assign({}, this.props, {\n        team: this.props.teamStats.teamStats.data.teams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }))) : null, React.createElement(\"div\", {\n        className: \"col-xs-12 well box-shadow-deep p-a box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(PageEmployeePerformance, Object.assign({\n        employeePerformance: this.props.employeePerformance\n      }, this.props, {\n        currentMonth: this.state.currentMonth,\n        currentYear: this.state.currentYear,\n        year: this.state.years,\n        months: this.state.months,\n        currentDate: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-xs-12 well box-shadow-deep p-a box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(PageMonthlyHours, Object.assign({\n        monthlyHours: this.props.monthlyHours\n      }, this.props, {\n        currentMonth: this.state.currentMonth,\n        currentYear: this.state.currentYear,\n        year: this.state.years,\n        months: this.state.months,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }))), this.state.role === \"admin\" ? React.createElement(\"div\", {\n        className: \"col-xs-12 well box-shadow-deep p-a box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(PageEmployeeLifeCycle, Object.assign({\n        empLifeCycle: this.props.empLifeCycle\n      }, this.props, {\n        currentMonth: this.state.currentMonth,\n        currentYear: this.state.currentYear,\n        year: this.state.years,\n        months: this.state.months,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }))) : null, React.createElement(\"div\", {\n        className: \"col-xs-12 well box-shadow-deep p-a box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(NewEmployeeLeastActiveHours, {\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        handleStartDate: function handleStartDate(date) {\n          _this3.handleStartDate(date);\n        },\n        handleEndDate: function handleEndDate(date) {\n          _this3.handleEndDate(date);\n        },\n        empActiveHoursList: this.props.leastActiveEmp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return ManageDashboard;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    usersList: state.usersList.toJS(),\n    teamStats: state.teamStats,\n    empLifeCycle: state.teamStats.empLifeCycle,\n    monthlyAllUsersReport: state.teamStats.monthlyAllUsersReport,\n    manageUserPendingHours: state.manageUserPendingHours.toJS(),\n    empHours: state.teamStats.empHours,\n    monthlyHours: state.teamStats.monthlyHours,\n    employeePerformance: state.teamStats.employeePerformance,\n    employeeList: state.teamStats.employeeList,\n    leastActiveEmp: state.teamStats.leastActiveEmp\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ManageDashboard));","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/containers/manageDashboard.jsx"],"names":["React","connect","withRouter","Link","_","Menu","dateFormatter","bindActionCreators","isNotUserValid","LoadingIcon","actions","Header","GetLogo","UsersListHeader","PageUserDashboard","PageMonthlyHours","PageEmployeePerformance","EmployeeLeastActiveHours","NewEmployeeLeastActiveHours","PageEmployeeLifeCycle","PageEmpHours","resetLoggedUser","getLoggedUser","actionsManageUserPendingHours","$","logo","moment","require","ManageDashboard","props","state","dateObject","defaultTeamDisplay","status_message","active","firstArrow","secondArrow","thirdArrow","fourthArrow","fifthArrow","teamList","empLifeCycle","empHours","monthlyHours","empPerformance","empData","currentDate","currentYear","currentMonth","date","months","years","startDate","endDate","openPage","bind","getByData","window","scrollTo","dateData","Date","dataDate","toString","split","year","getFullYear","month","getMonth","userId","localStorage","getItem","startYear","yearOptions","push","setState","requestEmployeeHours","id","requestLeastActiveEmployee","start_date","end_date","monthlyReport","monthAlpha","requestUserList","requestTeamStats","requestEmployeLifeCycle","start_year","end_year","requestEmployeeMonthlyHours","requestEmployeePerformance","document","ready","tooltip","tokenData","data","testDate","login_date_time","logintime","format","now","end","hours","diff","teamStats","teams","requestMonthlyReportAllUsers","toDisplay","marginTop","isLoading","role","employeePerformance","handleStartDate","handleEndDate","leastActiveEmp","Component","mapStateToProps","frontend","toJS","loggedUser","logged_user","userLogin","usersList","monthlyAllUsersReport","manageUserPendingHours","employeeList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport _ from \"lodash\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { dateFormatter } from '../../../helper/helper';\nimport { bindActionCreators } from \"redux\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport LoadingIcon from \"../../../components/generic/LoadingIcon\";\nimport * as actions from \"../../../redux/actions\";\nimport Header from \"../../../components/generic/Header\";\nimport GetLogo from \"../../../components/auth/login/GetLogo\";\nimport UsersListHeader from \"../../../components/generic/UsersListHeader\";\nimport PageUserDashboard from \"../../../modules/manageUsers/components/PageUserDashboard\";\nimport PageMonthlyHours from \"../../../modules/manageUsers/components/PageMonthlyHours\";\nimport PageEmployeePerformance from \"../../../modules/manageUsers/components/PageEmployeePerformance\";\nimport EmployeeLeastActiveHours from '../../../modules/manageUsers/components/employeeLeastActiveHours';\nimport NewEmployeeLeastActiveHours from '../../../modules/manageUsers/components/newEmployeeLeastActiveHours'\nimport PageEmployeeLifeCycle from \"../../../modules/manageUsers/components/PageEmployeeLifeCycle\";\nimport PageEmpHours from \"../../../modules/manageUsers/components/PageEmpHours\";\nimport { resetLoggedUser } from \"../../../services/generic\";\nimport { getLoggedUser } from \"../../../services/generic\";\nimport * as actionsManageUserPendingHours from \"../../../redux/workingHours/actions/manageUserPendingHour\";\nimport $ from 'jquery';\nimport logo from '../../../static/logo.png';\n\nvar moment = require(\"moment\");\n\nclass ManageDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateObject: dateFormatter(),\n      defaultTeamDisplay: \"\",\n      status_message: \"\",\n      active: \"active\",\n      firstArrow: \"hidden\",\n      secondArrow: \"hidden\",\n      thirdArrow: \"hidden\",\n      fourthArrow: \"hidden\",\n      fifthArrow: \"show\",\n      teamList: \"hidden\",\n      empLifeCycle: \"hidden\",\n      empHours: \"hidden\",\n      monthlyHours: \"hidden\",\n      empPerformance: \"show\",\n      empData: \"\",\n      currentDate: \"\",\n      currentYear: \"\",\n      currentMonth: \"\",\n      date: \"\",\n      months: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n      ],\n      years: [],\n      startDate: null,\n      endDate: null\n    };\n    this.openPage = this.openPage.bind(this);\n    this.getByData = this.getByData.bind(this);\n  }\n  componentWillMount(props) {\n    window.scrollTo(0, 0);\n    const dateData = new Date();\n    const dataDate = dateData.toString().split(\" \");\n    const year = dateData.getFullYear();\n    const month = dateData.getMonth();\n    const date = dataDate[2];\n    const months = this.state.months;\n    const userId = localStorage.getItem(\"userid\");\n    let startYear = 2010;\n    let yearOptions = [];\n    while (startYear <= year) {\n      yearOptions.push(startYear);\n      startYear++;\n    }\n    this.setState({\n      currentMonth: months[month],\n      currentYear: year,\n      currentDate: date,\n      years: yearOptions,\n      date: dateData\n    });\n    this.props.requestEmployeeHours({\n      id: userId,\n      date: date,\n      month: months[month],\n      year: year\n    });\n    \n    this.props.requestLeastActiveEmployee({\n      start_date: \"\",\n      end_date: \"\"\n    })\n    let monthlyReport = {\n      month: this.state.dateObject.monthAlpha,\n      year: year\n    };\n    this.props.requestUserList();\n    this.props.requestTeamStats();\n    this.props.requestEmployeLifeCycle({\n      start_year: year,\n      end_year: year\n    });\n\n    this.props.requestEmployeeMonthlyHours({\n      id: userId,\n      month: months[month],\n      year: year\n    });\n\n    this.props.requestEmployeePerformance({\n      id: userId,\n      month: months[month],\n      year: year\n    });\n   \n    $(document).ready(function () {\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    });\n    let tokenData = getLoggedUser().data;\n    let testDate = tokenData.login_date_time;\n    let logintime = moment(testDate).format(\"MM/DD/YYYY hh:mm:ss a\");\n    var now = moment(new Date()),\n      end = moment(testDate),\n      hours = now.diff(end, \"hours\");\n\n    if (hours > 1) {\n      resetLoggedUser();\n    }\n  }\n  componentWillReceiveProps(props) {\n    this.setState({\n      defaultTeamDisplay: props.teamStats.teamStats.data.teams,\n      empData: props.empHours\n    });\n  }\n  getByData(data) {\n    const userId = localStorage.getItem('userid');\n    this.props.requestMonthlyReportAllUsers({\n      'month': data.month,\n      'year': data.year\n    });\n  }\n\n  openPage(toDisplay) {\n    if (toDisplay === \"team_list\") {\n      this.setState({\n        teamList: \"row\",\n        firstArrow: \"show\",\n        empLifeCycle: \"hidden\",\n        empHours: \"hidden\",\n        monthlyHours: \"hidden\",\n        empPerformance: \"hidden\",\n        secondArrow: \"hidden\",\n        thirdArrow: \"hidden\",\n        fourthArrow: \"hidden\",\n        fifthArrow: \"hidden\"\n      });\n    } else if (toDisplay === \"emp_life_cycle\") {\n      this.setState({\n        empLifeCycle: \"row\",\n        secondArrow: \"show\",\n        teamList: \"hidden\",\n        firstArrow: \"hidden\",\n        thirdArrow: \"hidden\",\n        fourthArrow: \"hidden\",\n        fifthArrow: \"hidden\",\n        empHours: \"hidden\",\n        monthlyHours: \"hidden\",\n        empPerformance: \"hidden\"\n      });\n    } else if (toDisplay === \"attendance_list\") {\n      this.setState({\n        empHours: \"row\",\n        thirdArrow: \"show\",\n        teamList: \"hidden\",\n        firstArrow: \"hidden\",\n        empLifeCycle: \"hidden\",\n        secondArrow: \"hidden\",\n        fourthArrow: \"hidden\",\n        fifthArrow: \"hidden\",\n        monthlyHours: \"hidden\",\n        empPerformance: \"hidden\"\n      });\n    } else if (toDisplay === \"monthlyHours\") {\n      this.setState({\n        monthlyHours: \"row\",\n        fourthArrow: \"show\",\n        empHours: \"hidden\",\n        thirdArrow: \"hidden\",\n        teamList: \"hidden\",\n        firstArrow: \"hidden\",\n        empLifeCycle: \"hidden\",\n        empPerformance: \"hidden\",\n        secondArrow: \"hidden\",\n        fifthArrow: \"hidden\"\n      });\n    } else if (toDisplay === \"employee_performance\") {\n      this.setState({\n        empPerformance: \"row\",\n        fifthArrow: \"show\",\n        monthlyHours: \"hidden\",\n        fourthArrow: \"hidden\",\n        empHours: \"hidden\",\n        thirdArrow: \"hidden\",\n        teamList: \"hidden\",\n        firstArrow: \"hidden\",\n        empLifeCycle: \"hidden\",\n        secondArrow: \"hidden\"\n      });\n    }\n  }\n  handleStartDate(date){\n    this.setState({\n      startDate: date\n    });\n  }\n  handleEndDate(date){\n    const {\n      startDate,endDate\n    } = this.state;\n    this.setState({\n      endDate: date\n    },()=>{\n    if(startDate){\n      const start_date = moment(startDate).format('YYYY-MM-DD');\n      const end_date = moment(date).format('YYYY-MM-DD');\n      this.props.requestLeastActiveEmployee({\n        start_date: start_date,\n        end_date: end_date\n      })\n    }\n    });\n    \n  }\n  render() {\n    return (\n      <div>\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <div className=\"nav-dashboard box-shadow m-b p-y-sm\">\n            <div className=\"navbar\">\n              <img\n                className=\"p-0\"\n                style={{ marginTop: \"0.7%\" }}\n                src={logo}\n                height=\"40\"\n                width=\"220\"\n              />\n              <Link to=\"page_login\">\n                <p\n                  className=\"p-dashboard\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"bottom\"\n                  title=\"Login\"\n                >\n                  <i id=\"openLogin\" className=\"material-icons\">\n                    power_settings_new\n                  </i>\n                </p>\n              </Link>\n            </div>\n          </div>\n          <div className=\"app-body \" id=\"view\">\n            <div className=\"padding\">\n              <LoadingIcon loading={this.props.teamStats.isLoading} />\n            </div>\n            <div className=\"p-a-lg\">\n              {/* <div className=\"dker p-x\">\n                <div className=\"row\">\n                  <div className=\"col-sm-12 pull-sm-12\">\n                <div className=\"p-y-md clearfix nav-active-primary\">\n                <ul className=\"nav nav-pills nav-sm\" style={{marginLeft: '4%'}}>\n                {this.state.role==='admin'?\n                <li onClick={() => { this.openPage('team_list'); }} className={`nav-item ${this.state.active}`}>\n                <a className=\"nav-link\" href=\"\" data-toggle=\"tab\" data-target=\"#tab_1\" aria-expanded=\"true\">Team Dashboard</a>\n                <div className={this.state.firstArrow}>\n                <span className=\"arrow bottom b-accent\"></span>\n                </div>\n                </li>:null}\n                <li onClick={() => { this.openPage('employee_performance'); }} className={`nav-item ${this.state.active}`}>\n                <a className=\"nav-link\" href=\"\" data-toggle=\"tab\" data-target=\"#tab_5\" aria-expanded=\"false\">Employee Monthly Performance</a>\n                <div className={this.state.fifthArrow}>\n                <span className=\"arrow bottom b-accent\"></span>\n                </div>\n                </li>\n\n                <li onClick={() => { this.openPage('emp_life_cycle'); }} className={'nav-item'}>\n                <a className=\"nav-link\" href=\"\" data-toggle=\"tab\" data-target=\"#tab_2\" aria-expanded=\"false\">Employee Life Cycle</a>\n                <div className={this.state.secondArrow}>\n                <span className=\"arrow bottom b-accent\"></span>\n                </div>\n                </li>\n\n                <li onClick={() => { this.openPage('attendance_list'); }} className={'nav-item'}>\n                <a className=\"nav-link\" href=\"\" data-toggle=\"tab\" data-target=\"#tab_3\" aria-expanded=\"false\">Employee TimeTable</a>\n                <div className={this.state.thirdArrow}>\n                <span className=\"arrow bottom b-accent\"></span>\n                </div>\n                </li>\n                <li onClick={() => { this.openPage('monthlyHours'); }} className={'nav-item'}>\n                <a className=\"nav-link\" href=\"\" data-toggle=\"tab\" data-target=\"#tab_4\" aria-expanded=\"false\">Employee Monthly Hours</a>\n                <div className={this.state.fourthArrow}>\n                <span className=\"arrow bottom b-accent\"></span>\n                </div>\n                </li>\n\n                </ul>\n                </div>\n                  </div>\n                  <div className=\"col-md-offset-10\" style={{marginTop: '2%'}}>\n                  </div>\n                </div>\n              </div> */}\n              <div className=\"row\">\n                {this.state.role === \"admin\" ? (\n                  <div className=\"col-xs-12 well box-shadow-deep p-a box\">\n                    <PageUserDashboard\n                      {...this.props}\n                      team={this.props.teamStats.teamStats.data.teams}\n                    />\n                  </div>\n                ) : null}\n                <div className=\"col-xs-12 well box-shadow-deep p-a box\">\n                  <PageEmployeePerformance\n                    employeePerformance={this.props.employeePerformance}\n                    {...this.props}\n                    currentMonth={this.state.currentMonth}\n                    currentYear={this.state.currentYear}\n                    year={this.state.years}\n                    months={this.state.months}\n                    currentDate={this.state.date}\n                  />\n                </div>\n                <div className=\"col-xs-12 well box-shadow-deep p-a box\">\n                  <PageMonthlyHours\n                    monthlyHours={this.props.monthlyHours}\n                    {...this.props}\n                    currentMonth={this.state.currentMonth}\n                    currentYear={this.state.currentYear}\n                    year={this.state.years}\n                    months={this.state.months}\n                  />\n                </div>\n                {this.state.role === \"admin\" ? (\n                  <div className=\"col-xs-12 well box-shadow-deep p-a box\">\n                    <PageEmployeeLifeCycle\n                      empLifeCycle={this.props.empLifeCycle}\n                      {...this.props}\n                      currentMonth={this.state.currentMonth}\n                      currentYear={this.state.currentYear}\n                      year={this.state.years}\n                      months={this.state.months}\n                    />\n                  </div>\n                ) : null}\n                {/* <div className=\"col-xs-12 well box-shadow-deep p-a box\">\n                  <EmployeeLeastActiveHours\n                    currentMonth={this.state.currentMonth}\n                    currentYear={this.state.currentYear}\n                    year={this.state.years}\n                    {...this.props}\n                    getByData={this.getByData}\n                    months={this.state.months}\n                    monthlyAllUsersReport={this.props.monthlyAllUsersReport}\n                  />\n                </div> */}\n              \n                <div className=\"col-xs-12 well box-shadow-deep p-a box\">\n                  <NewEmployeeLeastActiveHours\n                    startDate={this.state.startDate}\n                    endDate={this.state.endDate}\n\n                    handleStartDate={(date) => { this.handleStartDate(date)}}\n                    handleEndDate={(date) => { this.handleEndDate(date) }}\n                    empActiveHoursList={this.props.leastActiveEmp}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    usersList: state.usersList.toJS(),\n    teamStats: state.teamStats,\n    empLifeCycle: state.teamStats.empLifeCycle,\n    monthlyAllUsersReport: state.teamStats.monthlyAllUsersReport,\n    manageUserPendingHours: state.manageUserPendingHours.toJS(),\n    empHours: state.teamStats.empHours,\n    monthlyHours: state.teamStats.monthlyHours,\n    employeePerformance: state.teamStats.employeePerformance,\n    employeeList: state.teamStats.employeeList,\n    leastActiveEmp:state.teamStats.leastActiveEmp\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ManageDashboard));\n"]},"metadata":{},"sourceType":"module"}