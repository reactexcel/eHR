{"ast":null,"code":"import Immutable from 'immutable';\nvar initialState = {\n  userProfileImage: '',\n  userName: '',\n  userjobtitle: '',\n  userid: '',\n  month: '',\n  year: '',\n  monthName: '',\n  nextMonth: {},\n  previousMonth: {},\n  monthSummary: {},\n  attendance: [],\n  compensationSummary: ''\n};\nexport function monthlyAttendance() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.fromJS(initialState);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ACTION_SUCCESS_USER_ATTENDANCE') {\n    return state.set('userName', action.payload.userName).set('userProfileImage', action.payload.userProfileImage).set('userjobtitle', action.payload.userjobtitle).set('userid', action.payload.userid).set('month', action.payload.month).set('year', action.payload.year).set('monthName', action.payload.monthName).set('monthSummary', action.payload.monthSummary).set('nextMonth', action.payload.nextMonth).set('previousMonth', action.payload.previousMonth).set('compensationSummary', action.payload.compensationSummary).set('attendance', action.payload.attendance);\n  } else if (action.type === 'ACTION_EMPTY_USER_ATTENDANCE') {\n    return state;\n  } else if (action.type === 'ACTION_ERROR_USER_ATTENDANCE') {\n    return state;\n  } else {\n    return state;\n  }\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/attendance/reducers/monthlyAttendance.js"],"names":["Immutable","initialState","userProfileImage","userName","userjobtitle","userid","month","year","monthName","nextMonth","previousMonth","monthSummary","attendance","compensationSummary","monthlyAttendance","state","fromJS","action","type","set","payload"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAK,EADJ;AAEjBC,EAAAA,QAAQ,EAAa,EAFJ;AAGjBC,EAAAA,YAAY,EAAS,EAHJ;AAIjBC,EAAAA,MAAM,EAAe,EAJJ;AAKjBC,EAAAA,KAAK,EAAgB,EALJ;AAMjBC,EAAAA,IAAI,EAAiB,EANJ;AAOjBC,EAAAA,SAAS,EAAY,EAPJ;AAQjBC,EAAAA,SAAS,EAAY,EARJ;AASjBC,EAAAA,aAAa,EAAQ,EATJ;AAUjBC,EAAAA,YAAY,EAAS,EAVJ;AAWjBC,EAAAA,UAAU,EAAW,EAXJ;AAYjBC,EAAAA,mBAAmB,EAAE;AAZJ,CAAnB;AAeA,OAAO,SAASC,iBAAT,GAA4E;AAAA,MAAhDC,KAAgD,uEAAxCf,SAAS,CAACgB,MAAV,CAAiBf,YAAjB,CAAwC;AAAA,MAARgB,MAAQ;;AACjF,MAAIA,MAAM,CAACC,IAAP,KAAgB,gCAApB,EAAsD;AACpD,WAAOH,KAAK,CAACI,GAAN,CAAU,UAAV,EAAsBF,MAAM,CAACG,OAAP,CAAejB,QAArC,EACFgB,GADE,CACE,kBADF,EACsBF,MAAM,CAACG,OAAP,CAAelB,gBADrC,EAEFiB,GAFE,CAEE,cAFF,EAEkBF,MAAM,CAACG,OAAP,CAAehB,YAFjC,EAGFe,GAHE,CAGE,QAHF,EAGYF,MAAM,CAACG,OAAP,CAAef,MAH3B,EAIFc,GAJE,CAIE,OAJF,EAIWF,MAAM,CAACG,OAAP,CAAed,KAJ1B,EAKFa,GALE,CAKE,MALF,EAKUF,MAAM,CAACG,OAAP,CAAeb,IALzB,EAMFY,GANE,CAME,WANF,EAMeF,MAAM,CAACG,OAAP,CAAeZ,SAN9B,EAOFW,GAPE,CAOE,cAPF,EAOkBF,MAAM,CAACG,OAAP,CAAeT,YAPjC,EAQFQ,GARE,CAQE,WARF,EAQeF,MAAM,CAACG,OAAP,CAAeX,SAR9B,EASFU,GATE,CASE,eATF,EASmBF,MAAM,CAACG,OAAP,CAAeV,aATlC,EAUFS,GAVE,CAUE,qBAVF,EAUyBF,MAAM,CAACG,OAAP,CAAeP,mBAVxC,EAWFM,GAXE,CAWE,YAXF,EAWgBF,MAAM,CAACG,OAAP,CAAeR,UAX/B,CAAP;AAYD,GAbD,MAaO,IAAIK,MAAM,CAACC,IAAP,KAAgB,8BAApB,EAAoD;AACzD,WAAOH,KAAP;AACD,GAFM,MAEA,IAAIE,MAAM,CAACC,IAAP,KAAgB,8BAApB,EAAoD;AACzD,WAAOH,KAAP;AACD,GAFM,MAEA;AACL,WAAOA,KAAP;AACD;AACF","sourcesContent":["import Immutable from 'immutable';\n\nlet initialState = {\n  userProfileImage:    '',\n  userName:            '',\n  userjobtitle:        '',\n  userid:              '',\n  month:               '',\n  year:                '',\n  monthName:           '',\n  nextMonth:           {},\n  previousMonth:       {},\n  monthSummary:        {},\n  attendance:          [],\n  compensationSummary: ''\n};\n\nexport function monthlyAttendance (state = Immutable.fromJS(initialState), action) {\n  if (action.type === 'ACTION_SUCCESS_USER_ATTENDANCE') {\n    return state.set('userName', action.payload.userName)\n        .set('userProfileImage', action.payload.userProfileImage)\n        .set('userjobtitle', action.payload.userjobtitle)\n        .set('userid', action.payload.userid)\n        .set('month', action.payload.month)\n        .set('year', action.payload.year)\n        .set('monthName', action.payload.monthName)\n        .set('monthSummary', action.payload.monthSummary)\n        .set('nextMonth', action.payload.nextMonth)\n        .set('previousMonth', action.payload.previousMonth)\n        .set('compensationSummary', action.payload.compensationSummary)\n        .set('attendance', action.payload.attendance);\n  } else if (action.type === 'ACTION_EMPTY_USER_ATTENDANCE') {\n    return state;\n  } else if (action.type === 'ACTION_ERROR_USER_ATTENDANCE') {\n    return state;\n  } else {\n    return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}