{"ast":null,"code":"import Immutable from 'immutable';\nimport * as _ from 'lodash';\nvar initialState = {\n  'status_message': '',\n  'user_data_for_payslip': {},\n  'user_payslip_history': [],\n  'all_users_latest_payslip': [],\n  'google_drive_emailid': '',\n  'employee_actual_salary': {},\n  'employee_account_no': []\n};\nexport function managePayslips() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.fromJS(initialState);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ACTION_SUCCESS_USER_MANAGE_PAYSLIPS_DATA') {\n    return state.set('user_data_for_payslip', action.payload.user_data_for_payslip).set('user_payslip_history', action.payload.user_payslip_history).set('all_users_latest_payslip', action.payload.all_users_latest_payslip).set('google_drive_emailid', action.payload.google_drive_emailid).set('employee_actual_salary', action.payload.employee_actual_salary).set('pending_leaves', action.payload.employee_pending_leave);\n  } else if (action.type === 'ACTION_ERROR_USER_MANAGE_PAYSLIPS_DATA') {\n    return state.set('status_message', action.payload);\n  } else if (action.type === 'ACTION_SUCCESS_GET_TRANSFER') {\n    return state.set('employee_account_no', action.payload);\n  } else if (action.type === 'ACTION_ERROR_GET_TRANSFER') {\n    return state.set('employee_account_no', []);\n  } else {\n    return state.set('status_message', '');\n  }\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/salary/reducers/managePayslips.js"],"names":["Immutable","_","initialState","managePayslips","state","fromJS","action","type","set","payload","user_data_for_payslip","user_payslip_history","all_users_latest_payslip","google_drive_emailid","employee_actual_salary","employee_pending_leave"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AAEA,IAAIC,YAAY,GAAG;AACjB,oBAA4B,EADX;AAEjB,2BAA4B,EAFX;AAGjB,0BAA4B,EAHX;AAIjB,8BAA4B,EAJX;AAKjB,0BAA4B,EALX;AAMjB,4BAA4B,EANX;AAOjB,yBAA4B;AAPX,CAAnB;AAUA,OAAO,SAASC,cAAT,GAAyE;AAAA,MAAhDC,KAAgD,uEAAxCJ,SAAS,CAACK,MAAV,CAAiBH,YAAjB,CAAwC;AAAA,MAARI,MAAQ;;AAC9E,MAAIA,MAAM,CAACC,IAAP,KAAgB,0CAApB,EAAgE;AAC9D,WAAOH,KAAK,CAACI,GAAN,CAAU,uBAAV,EAAmCF,MAAM,CAACG,OAAP,CAAeC,qBAAlD,EACFF,GADE,CACE,sBADF,EAC0BF,MAAM,CAACG,OAAP,CAAeE,oBADzC,EAEFH,GAFE,CAEE,0BAFF,EAE8BF,MAAM,CAACG,OAAP,CAAeG,wBAF7C,EAGFJ,GAHE,CAGE,sBAHF,EAG0BF,MAAM,CAACG,OAAP,CAAeI,oBAHzC,EAIFL,GAJE,CAIE,wBAJF,EAI4BF,MAAM,CAACG,OAAP,CAAeK,sBAJ3C,EAKFN,GALE,CAKE,gBALF,EAKoBF,MAAM,CAACG,OAAP,CAAeM,sBALnC,CAAP;AAMD,GAPD,MAOO,IAAIT,MAAM,CAACC,IAAP,KAAgB,wCAApB,EAA8D;AACnE,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BF,MAAM,CAACG,OAAnC,CAAP;AACD,GAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,6BAApB,EAAmD;AACxD,WAAOH,KAAK,CAACI,GAAN,CAAU,qBAAV,EAAiCF,MAAM,CAACG,OAAxC,CAAP;AACD,GAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,2BAApB,EAAiD;AACtD,WAAOH,KAAK,CAACI,GAAN,CAAU,qBAAV,EAAiC,EAAjC,CAAP;AACD,GAFM,MAEA;AACL,WAAOJ,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4B,EAA5B,CAAP;AACD;AACF","sourcesContent":["import Immutable from 'immutable';\nimport * as _ from 'lodash';\n\nlet initialState = {\n  'status_message':           '',\n  'user_data_for_payslip':    {},\n  'user_payslip_history':     [],\n  'all_users_latest_payslip': [],\n  'google_drive_emailid':     '',\n  'employee_actual_salary':   {},\n  'employee_account_no':      []\n};\n\nexport function managePayslips (state = Immutable.fromJS(initialState), action) {\n  if (action.type === 'ACTION_SUCCESS_USER_MANAGE_PAYSLIPS_DATA') {\n    return state.set('user_data_for_payslip', action.payload.user_data_for_payslip)\n        .set('user_payslip_history', action.payload.user_payslip_history)\n        .set('all_users_latest_payslip', action.payload.all_users_latest_payslip)\n        .set('google_drive_emailid', action.payload.google_drive_emailid)\n        .set('employee_actual_salary', action.payload.employee_actual_salary)\n        .set('pending_leaves', action.payload.employee_pending_leave);\n  } else if (action.type === 'ACTION_ERROR_USER_MANAGE_PAYSLIPS_DATA') {\n    return state.set('status_message', action.payload);\n  } else if (action.type === 'ACTION_SUCCESS_GET_TRANSFER') {\n    return state.set('employee_account_no', action.payload);\n  } else if (action.type === 'ACTION_ERROR_GET_TRANSFER') {\n    return state.set('employee_account_no', []);\n  } else {\n    return state.set('status_message', '');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}