{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/components/manageUser/DisplayUserDeviceDetails.jsx\";\nimport React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nvar DisplayUserDeviceDetails = function DisplayUserDeviceDetails(_ref) {\n  var userAssignMachine = _ref.userAssignMachine;\n\n  var machine = _.map(userAssignMachine, function (val, i) {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"_800\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, val.machine_type), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), val.machine_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"S.No : \", val.serial_number || ' - '), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, val.assign_date));\n  });\n\n  var machineData = React.createElement(\"span\", {\n    className: \"text-muted\",\n    style: {\n      marginLeft: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Device Not Asssigned\");\n\n  if (!_.isEmpty(machine)) {\n    machineData = React.createElement(\"table\", {\n      style: {\n        fontSize: '13px'\n      },\n      className: \"table table-striped table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Device\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Details\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Assign Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, machine));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Assigned Device Details\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"clear\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, machineData));\n};\n\nDisplayUserDeviceDetails.propTypes = {\n  userAssignMachine: PropTypes.array.isRequired\n};\nexport default DisplayUserDeviceDetails;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/components/manageUser/DisplayUserDeviceDetails.jsx"],"names":["React","_","PropTypes","DisplayUserDeviceDetails","userAssignMachine","machine","map","val","i","machine_type","machine_name","serial_number","assign_date","machineData","marginLeft","isEmpty","fontSize","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,OAAyB;AAAA,MAAvBC,iBAAuB,QAAvBA,iBAAuB;;AACxD,MAAIC,OAAO,GAAGJ,CAAC,CAACK,GAAF,CAAMF,iBAAN,EAAyB,UAACG,GAAD,EAAMC,CAAN,EAAY;AACjD,WACE;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,GAAG,CAACE,YAA5B,CADF,EACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlD,EAEGF,GAAG,CAACG,YAFP,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwBH,GAAG,CAACI,aAAJ,IAAqB,KAA7C,CADF,EAC4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5D,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,GAAG,CAACK,WAAT,CARF,CADF;AAYD,GAba,CAAd;;AAcA,MAAIC,WAAW,GAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAlB;;AACA,MAAI,CAACb,CAAC,CAACc,OAAF,CAAUV,OAAV,CAAL,EAAyB;AACvBQ,IAAAA,WAAW,GAAG;AAAO,MAAA,KAAK,EAAE;AAACG,QAAAA,QAAQ,EAAE;AAAX,OAAd;AAAkC,MAAA,SAAS,EAAC,iCAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF,CADY,EAQZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,OADH,CARY,CAAd;AAYD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,WADH,CAHF,CADF;AASD,CAvCD;;AAyCAV,wBAAwB,CAACc,SAAzB,GAAqC;AACnCb,EAAAA,iBAAiB,EAAEF,SAAS,CAACgB,KAAV,CAAgBC;AADA,CAArC;AAIA,eAAehB,wBAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nconst DisplayUserDeviceDetails = ({userAssignMachine}) => {\n  let machine = _.map(userAssignMachine, (val, i) => {\n    return (\n      <tr key={i}>\n        <td>\n          <span className='_800'>{val.machine_type}</span><br />\n          {val.machine_name}\n        </td>\n        <td>\n          <span className>S.No : {val.serial_number || ' - '}</span><br />\n        </td>\n        <td>{val.assign_date}</td>\n      </tr>\n    );\n  });\n  let machineData = <span className=\"text-muted\" style={{marginLeft: '16px'}}>Device Not Asssigned</span>;\n  if (!_.isEmpty(machine)) {\n    machineData = <table style={{fontSize: '13px'}} className=\"table table-striped table-hover\">\n      <thead>\n        <tr>\n          <th>Device</th>\n          <th>Details</th>\n          <th>Assign Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {machine}\n      </tbody>\n    </table>;\n  }\n  return (\n    <div>\n      <h6 className=\"text-center\">Assigned Device Details</h6>\n      <br />\n      <div className=\"clear\">\n        {machineData}\n      </div>\n    </div>\n  );\n};\n\nDisplayUserDeviceDetails.propTypes = {\n  userAssignMachine: PropTypes.array.isRequired\n};\n\nexport default DisplayUserDeviceDetails;\n"]},"metadata":{},"sourceType":"module"}