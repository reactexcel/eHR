{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/policyDocuments/containers/PolicyDocument.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport Header from '../../../components/generic/Header';\nimport { isNotUserValid } from '../../../services/generic';\nimport DocumentsList from '../../../modules/policyDocuments/components/DocumentsList';\nimport * as actions from '../../../redux/actions';\n\nvar PolicyDocumentContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PolicyDocumentContainer, _React$Component);\n\n  function PolicyDocumentContainer(props) {\n    var _this;\n\n    _classCallCheck(this, PolicyDocumentContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PolicyDocumentContainer).call(this, props));\n\n    _this.props.isAlreadyLogin();\n\n    return _this;\n  }\n\n  _createClass(PolicyDocumentContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.requestUserPolicyDocument();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status && isNotValid.redirectTo !== '/policy_documents') {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: 'Policy Documents',\n        showLoading: this.props.policyDocuments.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(DocumentsList, {\n        policyDocuments: this.props.policyDocuments,\n        onUpdateReadStatus: this.props.requestUpdateReadStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PolicyDocumentContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    loggedUser: state.logged_user.userLogin,\n    policyDocuments: state.policyDocuments.policyDocument\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PolicyDocumentContainer));","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/policyDocuments/containers/PolicyDocument.jsx"],"names":["React","connect","bindActionCreators","withRouter","Menu","Header","isNotUserValid","DocumentsList","actions","PolicyDocumentContainer","props","isAlreadyLogin","requestUserPolicyDocument","isNotValid","location","pathname","loggedUser","status","redirectTo","history","push","policyDocuments","isLoading","requestUpdateReadStatus","Component","mapStateToProps","state","logged_user","userLogin","policyDocument","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,OAAOC,aAAP,MAA0B,2DAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;IAEMC,uB;;;;;AACJ,mCAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,iGAAMA,KAAN;;AACA,UAAKA,KAAL,CAAWC,cAAX;;AAFkB;AAGnB;;;;yCACqB;AACpB,WAAKD,KAAL,CAAWE,yBAAX;AACD;;;8CAC0BF,K,EAAO;AAChC,UAAIG,UAAU,GAAGP,cAAc,CAAC,KAAKI,KAAL,CAAWI,QAAX,CAAoBC,QAArB,EAA+BL,KAAK,CAACM,UAArC,CAA/B;;AACA,UAAIH,UAAU,CAACI,MAAX,IAAqBJ,UAAU,CAACK,UAAX,KAA0B,mBAAnD,EAAwE;AACtE,aAAKR,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBP,UAAU,CAACK,UAAnC;AACD;AACF;;;6BACS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,oBAAU,KAAKR,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAkB,QAAA,SAAS,EAAC,2BAA5B;AAAwD,QAAA,IAAI,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,kBAAnB;AAAuC,QAAA,WAAW,EAAE,KAAKA,KAAL,CAAWW,eAAX,CAA2BC,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWW,eAA3C;AAA4D,QAAA,kBAAkB,EAAE,KAAKX,KAAL,CAAWa,uBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CADF;AASD;;;;EAxBmCvB,KAAK,CAACwB,S;;AA0B5C,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLV,IAAAA,UAAU,EAAOU,KAAK,CAACC,WAAN,CAAkBC,SAD9B;AAELP,IAAAA,eAAe,EAAEK,KAAK,CAACL,eAAN,CAAsBQ;AAFlC,GAAP;AAID;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAAE,SAAO7B,kBAAkB,CAACM,OAAD,EAAUuB,QAAV,CAAzB;AAA+C,CAA1F;;AAEA,eAAe5B,UAAU,CAACF,OAAO,CAACwB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CrB,uBAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport Header from '../../../components/generic/Header';\nimport {isNotUserValid} from '../../../services/generic';\nimport DocumentsList from '../../../modules/policyDocuments/components/DocumentsList';\nimport * as actions from '../../../redux/actions';\n\nclass PolicyDocumentContainer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n  }\n  componentWillMount () {\n    this.props.requestUserPolicyDocument();\n  }\n  componentWillReceiveProps (props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status && isNotValid.redirectTo !== '/policy_documents') {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n  }\n  render () {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Policy Documents'} showLoading={this.props.policyDocuments.isLoading} />\n          <DocumentsList policyDocuments={this.props.policyDocuments} onUpdateReadStatus={this.props.requestUpdateReadStatus} />\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps (state) {\n  return {\n    loggedUser:      state.logged_user.userLogin,\n    policyDocuments: state.policyDocuments.policyDocument\n  };\n}\nconst mapDispatchToProps = (dispatch) => { return bindActionCreators(actions, dispatch); };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PolicyDocumentContainer));\n"]},"metadata":{},"sourceType":"module"}