{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport _ from 'lodash';\nimport { CONFIG } from '../../../config/index';\nimport { fireAjax } from '../../../services/index';\nimport { confirm } from '../../../services/notify';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nimport { setLoggedUser, getLoggedUser } from '../../../services/generic';\nimport { userDataUpdated, showInventoryPending } from '../../../redux/actions';\nimport * as constants from '../../../redux/constants';\nexport function success_my_profile(data) {\n  return createAction(constants.ACTION_SUCCESS_MY_PROFILE)(data);\n}\nexport function empty_my_profile(data) {\n  return createAction(constants.ACTION_EMPTY_MY_PROFILE)(data);\n}\nexport function error_my_profile(data) {\n  return createAction(constants.ACTION_ERROR_MY_PROFILE)(data);\n}\n\nfunction async_getMyProfileDetails() {\n  return fireAjax('POST', '', {\n    'action': 'get_user_profile_detail'\n  });\n}\n\nexport function getMyProfileDetails() {\n  return function (dispatch, getState) {\n    return new Promise(function (reslove, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getMyProfileDetails().then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_my_profile(json.data));\n        } else {\n          dispatch(empty_my_profile(json.data.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_my_profile('error occurs!!!'));\n      });\n    });\n  };\n} // -------update profile details\n\nexport function success_update_profile_details(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PROFILE_DETAILS)(data);\n}\nexport function error_update_profile_details(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateProfileDetails(n_marital_status, n_dob, n_address1, n_address2, n_em_contact1, n_em_contact2, n_blood_group, n_medical_con, n_emp_email) {\n  return fireAjax('POST', '', {\n    'action': 'update_user_profile_detail',\n    'permanent_address': n_address2,\n    'current_address': n_address1,\n    'emergency_ph1': n_em_contact1,\n    'emergency_ph2': n_em_contact2,\n    'blood_group': n_blood_group,\n    'medical_condition': n_medical_con,\n    'dob': n_dob,\n    'marital_status': n_marital_status,\n    'other_email': n_emp_email\n  });\n}\n\nexport function updateProfileDetails(new_profile_details) {\n  return function (dispatch, getState) {\n    var n_marital_status = '';\n    var n_dob = '';\n    var n_address1 = '';\n    var n_address2 = '';\n    var n_em_contact1 = '';\n    var n_em_contact2 = '';\n    var n_blood_group = '';\n    var n_medical_con = '';\n    var n_emp_email = '';\n\n    if (typeof new_profile_details.marital_status !== 'undefined') {\n      n_marital_status = new_profile_details.marital_status;\n    }\n\n    if (typeof new_profile_details.dob !== 'undefined') {\n      n_dob = new_profile_details.dob;\n    }\n\n    if (typeof new_profile_details.address1 !== 'undefined') {\n      n_address1 = new_profile_details.address1;\n    }\n\n    if (typeof new_profile_details.address2 !== 'undefined') {\n      n_address2 = new_profile_details.address2;\n    }\n\n    if (typeof new_profile_details.emr_con_1 !== 'undefined') {\n      n_em_contact1 = new_profile_details.emr_con_1;\n    }\n\n    if (typeof new_profile_details.emr_con_2 !== 'undefined') {\n      n_em_contact2 = new_profile_details.emr_con_2;\n    }\n\n    if (typeof new_profile_details.blood_group !== 'undefined') {\n      n_blood_group = new_profile_details.blood_group;\n    }\n\n    if (typeof new_profile_details.medical_con !== 'undefined') {\n      n_medical_con = new_profile_details.medical_con;\n    }\n\n    if (typeof new_profile_details.emp_email !== 'undefined') {\n      n_emp_email = new_profile_details.emp_email;\n    }\n\n    if (n_marital_status.trim() === '') {\n      return Promise.reject('Marital status is empty');\n    }\n\n    if (n_dob.trim() === '') {\n      return Promise.reject('Date of birth is empty');\n    }\n\n    if (n_address1.trim() === '') {\n      return Promise.reject('Current address is empty');\n    }\n\n    if (n_address2.trim() === '') {\n      return Promise.reject('Permanent address is empty');\n    }\n\n    if (n_em_contact1.trim() === '') {\n      return Promise.reject('Emmergency contact 1 is empty');\n    }\n\n    if (n_em_contact2.trim() === '') {\n      return Promise.reject('Emmergency contact 2 is empty');\n    }\n\n    if (n_blood_group.trim() === '') {\n      return Promise.reject('Blood group not selected');\n    }\n\n    if (n_medical_con.trim() === '') {\n      return Promise.reject('Any medical conditions is empty');\n    }\n\n    if (n_emp_email.trim() === '') {\n      return Promise.reject('Personal email is empty');\n    }\n\n    return new Promise(function (reslove, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_updateProfileDetails(n_marital_status, n_dob, n_address1, n_address2, n_em_contact1, n_em_contact2, n_blood_group, n_medical_con, n_emp_email).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_profile_details(json.data.message));\n        } else {\n          dispatch(error_update_profile_details(json.data.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_update_profile_details('error occurs!!!'));\n      });\n    });\n  };\n} // -------update bank details\n\nexport function success_update_bank_details(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_BANK_DETAILS)(data);\n}\nexport function error_update_bank_details(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_BANK_DETAILS)(data);\n}\n\nfunction async_updateBankDetails(n_bank_account_no, n_bank_name, n_bank_address, n_ifsc) {\n  return fireAjax('POST', '', {\n    'action': 'update_user_bank_detail',\n    'bank_account_no': n_bank_account_no,\n    'bank_name': n_bank_name,\n    'bank_address': n_bank_address,\n    'ifsc': n_ifsc\n  });\n}\n\nexport function updateBankDetails(new_bank_details) {\n  return function (dispatch, getState) {\n    var n_bank_name = '';\n    var n_bank_address = '';\n    var n_bank_account_no = '';\n    var n_ifsc = '';\n\n    if (typeof new_bank_details.bank_account_no !== 'undefined') {\n      n_bank_account_no = new_bank_details.bank_account_no;\n    }\n\n    if (typeof new_bank_details.bank_name !== 'undefined') {\n      n_bank_name = new_bank_details.bank_name;\n    }\n\n    if (typeof new_bank_details.bank_address !== 'undefined') {\n      n_bank_address = new_bank_details.bank_address;\n    }\n\n    if (typeof new_bank_details.ifsc !== 'undefined') {\n      n_ifsc = new_bank_details.ifsc;\n    }\n\n    if (n_bank_account_no === '') {\n      return Promise.reject('Account number is empty');\n    }\n\n    if (n_bank_name === '') {\n      return Promise.reject('Bank name is empty');\n    }\n\n    if (!n_bank_name.includes(\"ICICI\")) {\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    }\n\n    if (n_bank_address === '') {\n      return Promise.reject('Bank address is empty');\n    }\n\n    if (n_ifsc === '') {\n      return Promise.reject('IFSC is empty');\n    }\n\n    var ifscRegex = /(ICIC)0[A-Z0-9]{6}$/;\n\n    if (!n_ifsc.includes(\"ICIC\")) {\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    } else if (!n_ifsc.match(ifscRegex)) {\n      return Promise.reject('ICICI IFSC code you have entered is not valid. \\n Please enter valid ICICI IFSC code. ');\n    }\n\n    return new Promise(function (reslove, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_updateBankDetails(n_bank_account_no, n_bank_name, n_bank_address, n_ifsc).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_bank_details(json.data.message));\n        } else {\n          dispatch(error_update_bank_details(json.data.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_update_bank_details('error occurs!!!'));\n      });\n    });\n  };\n} // -------update password\n\nexport function success_update_password(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PASSWORD)(data);\n}\nexport function error_update_password(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PASSWORD)(data);\n}\n\nfunction async_updatePassword(n_new_password) {\n  return fireAjax('POST', '', {\n    'action': 'update_new_password',\n    'password': n_new_password\n  });\n}\n\nexport function updatePassword(new_password) {\n  return function (dispatch, getState) {\n    var n_new_password = '';\n\n    if (typeof new_password !== 'undefined' && new_password != '') {\n      n_new_password = new_password;\n    }\n\n    if (n_new_password === '') {\n      return Promise.reject('New Password is empty!!');\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_updatePassword(n_new_password).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          dispatch(success_update_password(json.data.message));\n          resolve(json.data.message);\n        } else {\n          dispatch(error_update_password(json.data.message));\n          reject(json.data.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_update_password('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n} // ------update document\n\nfunction async_updateDocument(document_type, document_link, declearation) {\n  var data = {\n    'action': 'insert_user_document',\n    'document_type': document_type,\n    'document_link': document_link,\n    'declearation': declearation\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function updateDocument(documents_link) {\n  return function (dispatch, getState) {\n    var document_type = '';\n    var document_link = '';\n    var declearation = documents_link.declearation;\n\n    if (typeof documents_link.doc_type === 'undefined' || documents_link.doc_type == '') {\n      return Promise.reject('Select document type');\n    } else {\n      document_type = documents_link.doc_type;\n    }\n\n    if (typeof documents_link.doc_link === 'undefined' || documents_link.doc_link.length == 0) {\n      return Promise.reject('Enter document link');\n    } else {\n      document_link = documents_link.doc_link;\n    }\n\n    return new Promise(function (resolve, reject) {\n      _.map(document_link, function (link) {\n        async_updateDocument(document_type, link, declearation).then(function (json) {\n          if (json.error == 0) {\n            resolve('Document updated successfully');\n          } else {\n            reject('Response with error 1');\n          }\n        }, function (error) {\n          reject('error occurs!!!');\n        });\n      });\n    });\n  };\n}\n\nfunction async_getMyInventory() {\n  return fireAjax('POST', '', {\n    'action': \"get_my_inventories\"\n  });\n}\n\nexport function getMyInventory() {\n  return function (dispatch, getState) {\n    return new Promise(function (reslove, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getMyInventory().then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch({\n            type: \"ACTION_GET_MY_INVENTORY\",\n            payload: json.data\n          });\n        }\n      });\n    });\n  };\n}\n\nfunction async_addInventoryAudit(id, message) {\n  var data = {\n    'action': 'add_inventory_audit',\n    'inventory_id': id,\n    'audit_message': message\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function addInventoryAudit(id, msg) {\n  return function (dispatch, getState) {\n    return new Promise(function (reslove, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      dispatch(showInventoryPending(false));\n      async_addInventoryAudit(id, msg).then(function (json) {\n        if (json.data && json.data.new_token) {\n          var _getLoggedUser = getLoggedUser(),\n              userId = _getLoggedUser.userId;\n\n          var tokenData = setLoggedUser(json.data.new_token, userId);\n          dispatch(userDataUpdated(tokenData));\n        }\n\n        dispatch(hide_loading()); // hide loading icon\n\n        reslove(json);\n      }).catch(function () {\n        dispatch(showInventoryPending(true));\n        reject();\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/myProfile/actions/myProfile.js"],"names":["createAction","_","CONFIG","fireAjax","confirm","show_loading","hide_loading","setLoggedUser","getLoggedUser","userDataUpdated","showInventoryPending","constants","success_my_profile","data","ACTION_SUCCESS_MY_PROFILE","empty_my_profile","ACTION_EMPTY_MY_PROFILE","error_my_profile","ACTION_ERROR_MY_PROFILE","async_getMyProfileDetails","getMyProfileDetails","dispatch","getState","Promise","reslove","reject","then","json","error","message","success_update_profile_details","ACTION_SUCCESS_UPDATE_PROFILE_DETAILS","error_update_profile_details","ACTION_ERROR_UPDATE_PROFILE_DETAILS","async_updateProfileDetails","n_marital_status","n_dob","n_address1","n_address2","n_em_contact1","n_em_contact2","n_blood_group","n_medical_con","n_emp_email","updateProfileDetails","new_profile_details","marital_status","dob","address1","address2","emr_con_1","emr_con_2","blood_group","medical_con","emp_email","trim","success_update_bank_details","ACTION_SUCCESS_UPDATE_BANK_DETAILS","error_update_bank_details","ACTION_ERROR_UPDATE_BANK_DETAILS","async_updateBankDetails","n_bank_account_no","n_bank_name","n_bank_address","n_ifsc","updateBankDetails","new_bank_details","bank_account_no","bank_name","bank_address","ifsc","includes","ifscRegex","match","success_update_password","ACTION_SUCCESS_UPDATE_PASSWORD","error_update_password","ACTION_ERROR_UPDATE_PASSWORD","async_updatePassword","n_new_password","updatePassword","new_password","resolve","async_updateDocument","document_type","document_link","declearation","updateDocument","documents_link","doc_type","doc_link","length","map","link","async_getMyInventory","getMyInventory","type","payload","async_addInventoryAudit","id","addInventoryAudit","msg","new_token","userId","tokenData","catch"],"mappings":"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","sourcesContent":["import {createAction} from 'redux-actions';\nimport _ from 'lodash';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport {confirm} from '../../../services/notify';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport {setLoggedUser, getLoggedUser} from '../../../services/generic';\nimport {userDataUpdated, showInventoryPending} from '../../../redux/actions';\nimport * as constants from '../../../redux/constants';\n\nexport function success_my_profile (data) {\n  return createAction(constants.ACTION_SUCCESS_MY_PROFILE)(data);\n}\nexport function empty_my_profile (data) {\n  return createAction(constants.ACTION_EMPTY_MY_PROFILE)(data);\n}\nexport function error_my_profile (data) {\n  return createAction(constants.ACTION_ERROR_MY_PROFILE)(data);\n}\n\nfunction async_getMyProfileDetails () {\n  return fireAjax('POST', '', {'action': 'get_user_profile_detail'});\n}\n\nexport function getMyProfileDetails () {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getMyProfileDetails().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_my_profile(json.data));\n        } else {\n          dispatch(empty_my_profile(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_my_profile('error occurs!!!'));\n      });\n    });\n  };\n}\n// -------update profile details\n\nexport function success_update_profile_details (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PROFILE_DETAILS)(data);\n}\nexport function error_update_profile_details (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateProfileDetails (n_marital_status, n_dob, n_address1, n_address2, n_em_contact1, n_em_contact2, n_blood_group, n_medical_con, n_emp_email) {\n  return fireAjax('POST', '', {\n    'action':            'update_user_profile_detail',\n    'permanent_address': n_address2,\n    'current_address':   n_address1,\n    'emergency_ph1':     n_em_contact1,\n    'emergency_ph2':     n_em_contact2,\n    'blood_group':       n_blood_group,\n    'medical_condition': n_medical_con,\n    'dob':               n_dob,\n    'marital_status':    n_marital_status,\n    'other_email':       n_emp_email\n  });\n}\n\nexport function updateProfileDetails (new_profile_details) {\n  return function (dispatch, getState) {\n    let n_marital_status = '';\n    let n_dob = '';\n    let n_address1 = '';\n    let n_address2 = '';\n    let n_em_contact1 = '';\n    let n_em_contact2 = '';\n    let n_blood_group = '';\n    let n_medical_con = '';\n    let n_emp_email = '';\n\n    if (typeof new_profile_details.marital_status !== 'undefined') {\n      n_marital_status = new_profile_details.marital_status;\n    }\n    if (typeof new_profile_details.dob !== 'undefined') {\n      n_dob = new_profile_details.dob;\n    }\n    if (typeof new_profile_details.address1 !== 'undefined') {\n      n_address1 = new_profile_details.address1;\n    }\n    if (typeof new_profile_details.address2 !== 'undefined') {\n      n_address2 = new_profile_details.address2;\n    }\n    if (typeof new_profile_details.emr_con_1 !== 'undefined') {\n      n_em_contact1 = new_profile_details.emr_con_1;\n    }\n    if (typeof new_profile_details.emr_con_2 !== 'undefined') {\n      n_em_contact2 = new_profile_details.emr_con_2;\n    }\n    if (typeof new_profile_details.blood_group !== 'undefined') {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_con !== 'undefined') {\n      n_medical_con = new_profile_details.medical_con;\n    }\n\n    if (typeof new_profile_details.emp_email !== 'undefined') {\n      n_emp_email = new_profile_details.emp_email;\n    }\n\n    if (n_marital_status.trim() === '') {\n      return Promise.reject('Marital status is empty');\n    }\n    if (n_dob.trim() === '') {\n      return Promise.reject('Date of birth is empty');\n    }\n    if (n_address1.trim() === '') {\n      return Promise.reject('Current address is empty');\n    }\n    if (n_address2.trim() === '') {\n      return Promise.reject('Permanent address is empty');\n    }\n    if (n_em_contact1.trim() === '') {\n      return Promise.reject('Emmergency contact 1 is empty');\n    }\n    if (n_em_contact2.trim() === '') {\n      return Promise.reject('Emmergency contact 2 is empty');\n    }\n    if (n_blood_group.trim() === '') {\n      return Promise.reject('Blood group not selected');\n    }\n    if (n_medical_con.trim() === '') {\n      return Promise.reject('Any medical conditions is empty');\n    }\n\n    if (n_emp_email.trim() === '') {\n      return Promise.reject('Personal email is empty');\n    }\n\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateProfileDetails(\n        n_marital_status,\n        n_dob, n_address1,\n        n_address2,\n        n_em_contact1,\n         n_em_contact2,\n        n_blood_group,\n        n_medical_con,\n       n_emp_email\n      ).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_profile_details(json.data.message));\n        } else {\n          dispatch(error_update_profile_details(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_profile_details('error occurs!!!'));\n      });\n    });\n  };\n}\n\n// -------update bank details\n\nexport function success_update_bank_details (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_BANK_DETAILS)(data);\n}\nexport function error_update_bank_details (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_BANK_DETAILS)(data);\n}\n\nfunction async_updateBankDetails (n_bank_account_no, n_bank_name, n_bank_address, n_ifsc) {\n  return fireAjax('POST', '', {\n    'action':          'update_user_bank_detail',\n    'bank_account_no': n_bank_account_no,\n    'bank_name':       n_bank_name,\n    'bank_address':    n_bank_address,\n    'ifsc':            n_ifsc\n  });\n}\n\nexport function updateBankDetails (new_bank_details) {\n  return function (dispatch, getState) {\n    let n_bank_name = '';\n    let n_bank_address = '';\n    let n_bank_account_no = '';\n    let n_ifsc = '';\n\n    if (typeof new_bank_details.bank_account_no !== 'undefined') {\n      n_bank_account_no = new_bank_details.bank_account_no;\n    }\n    if (typeof new_bank_details.bank_name !== 'undefined') {\n      n_bank_name = new_bank_details.bank_name;\n    }\n    if (typeof new_bank_details.bank_address !== 'undefined') {\n      n_bank_address = new_bank_details.bank_address;\n    }\n    if (typeof new_bank_details.ifsc !== 'undefined') {\n      n_ifsc = new_bank_details.ifsc;\n    }\n    if (n_bank_account_no === '') {\n      return Promise.reject('Account number is empty');\n    }\n    if (n_bank_name === '') {\n      return Promise.reject('Bank name is empty');\n    }\n    if(!n_bank_name.includes(\"ICICI\")){\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    }\n    if (n_bank_address === '') {\n      return Promise.reject('Bank address is empty');\n    }\n    if (n_ifsc === '') {\n      return Promise.reject('IFSC is empty');\n    }\n    const ifscRegex = /(ICIC)0[A-Z0-9]{6}$/;\n    if(!n_ifsc.includes(\"ICIC\")){\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    }\n   else if(!n_ifsc.match(ifscRegex)){\n      return Promise.reject('ICICI IFSC code you have entered is not valid. \\n Please enter valid ICICI IFSC code. ');\n    }\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateBankDetails(n_bank_account_no, n_bank_name, n_bank_address, n_ifsc).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_bank_details(json.data.message));\n        } else {\n          dispatch(error_update_bank_details(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_bank_details('error occurs!!!'));\n      });\n    });\n  };\n}\n\n// -------update password\n\nexport function success_update_password (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PASSWORD)(data);\n}\nexport function error_update_password (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PASSWORD)(data);\n}\n\nfunction async_updatePassword (n_new_password) {\n  return fireAjax('POST', '', {\n    'action':   'update_new_password',\n    'password': n_new_password\n  });\n}\n\nexport function updatePassword (new_password) {\n  return function (dispatch, getState) {\n    let n_new_password = '';\n\n    if (typeof new_password !== 'undefined' && new_password != '') {\n      n_new_password = new_password;\n    }\n\n    if (n_new_password === '') {\n      return Promise.reject('New Password is empty!!');\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updatePassword(n_new_password).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          dispatch(success_update_password(json.data.message));\n          resolve(json.data.message);\n        } else {\n          dispatch(error_update_password(json.data.message));\n          reject(json.data.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_password('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\n// ------update document\nfunction async_updateDocument (document_type, document_link, declearation) {\n  let data = {\n    'action':        'insert_user_document',\n    'document_type': document_type,\n    'document_link': document_link,\n    'declearation':  declearation\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function updateDocument (documents_link) {\n  return function (dispatch, getState) {\n    let document_type = '';\n    let document_link = '';\n    let declearation = documents_link.declearation;\n\n    if (typeof documents_link.doc_type === 'undefined' || documents_link.doc_type == '') {\n      return Promise.reject('Select document type');\n    } else {\n      document_type = documents_link.doc_type;\n    }\n    if (typeof documents_link.doc_link === 'undefined' || documents_link.doc_link.length == 0) {\n      return Promise.reject('Enter document link');\n    } else {\n      document_link = documents_link.doc_link;\n    }\n    return new Promise((resolve, reject) => {\n      _.map(document_link, (link) => {\n        async_updateDocument(document_type, link, declearation).then((json) => {\n          if (json.error == 0) {\n            resolve('Document updated successfully');\n          } else {\n            reject('Response with error 1');\n          }\n        }, (error) => {\n          reject('error occurs!!!');\n        });\n      });\n    });\n  };\n}\n\nfunction async_getMyInventory () {\n  return fireAjax('POST', '', {'action': \"get_my_inventories\"});\n}\n\nexport function getMyInventory () {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getMyInventory().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch({type : \"ACTION_GET_MY_INVENTORY\",payload:json.data});\n        } \n      });\n    });\n  };\n}\n\nfunction async_addInventoryAudit (id, message) {\n  let data = {\n    'action': 'add_inventory_audit',\n    'inventory_id': id,\n    'audit_message': message\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function addInventoryAudit (id, msg) {\n  return function (dispatch, getState) { \n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      dispatch(showInventoryPending(false))\n      async_addInventoryAudit(id, msg).then((json) => {\n        if(json.data && json.data.new_token){\n          let {userId} = getLoggedUser();\n          let tokenData = setLoggedUser(json.data.new_token, userId);\n          dispatch(userDataUpdated(tokenData));\n        }\n        dispatch(hide_loading()); // hide loading icon\n        reslove(json)\n      }).catch(()=>{\n        dispatch(showInventoryPending(true));\n        reject()\n      })\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}