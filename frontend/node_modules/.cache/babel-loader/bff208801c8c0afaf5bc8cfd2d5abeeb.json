{"ast":null,"code":"import _defineProperty from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { handleActions } from 'redux-actions';\nimport update from 'immutability-helper';\nimport * as constants from '../../../redux/constants';\nimport '../../../redux/update';\nvar initialState = {\n  holidaysList: {\n    data: {},\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: ''\n  },\n  addHolidays: {\n    data: {},\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: ''\n  },\n  holidayType: {\n    data: [],\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: ''\n  },\n  deleteHolidays: {\n    data: {},\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: ''\n  }\n};\n\nvar requestHolidaysList = function requestHolidaysList(state, action) {\n  return update(state, {\n    holidaysList: {\n      $setRequestLoading: null\n    }\n  });\n};\n\nvar successHolidaysList = function successHolidaysList(state, action) {\n  return update(state, {\n    holidaysList: {\n      $setRequestSuccess: action.payload\n    },\n    addHolidays: {\n      isSuccess: {\n        $set: false\n      }\n    },\n    deleteHolidays: {\n      isSuccess: {\n        $set: false\n      }\n    }\n  });\n};\n\nvar errorHolidaysList = function errorHolidaysList(state, action) {\n  return update(state, {\n    holidaysList: {\n      $setRequestError: action.payload\n    }\n  });\n};\n\nvar requestAddHolidays = function requestAddHolidays(state, action) {\n  return update(state, {\n    addHolidays: {\n      $setRequestLoading: null\n    }\n  });\n};\n\nvar successAddHolidays = function successAddHolidays(state, action) {\n  return update(state, {\n    addHolidays: {\n      $setRequestSuccess: action.payload\n    }\n  });\n};\n\nvar errorAddHolidays = function errorAddHolidays(state, action) {\n  return update(state, {\n    addHolidays: {\n      $setRequestError: action.payload\n    }\n  });\n};\n\nvar requestDleteHolidays = function requestDleteHolidays(state, action) {\n  return update(state, {\n    deleteHolidays: {\n      $setRequestLoading: null\n    }\n  });\n};\n\nvar successDeleteHolidays = function successDeleteHolidays(state, action) {\n  return update(state, {\n    deleteHolidays: {\n      $setRequestSuccess: action.payload\n    }\n  });\n};\n\nvar errorDeleteHolidays = function errorDeleteHolidays(state, action) {\n  return update(state, {\n    deleteHolidays: {\n      $setRequestError: action.payload\n    }\n  });\n};\n\nvar requestHolidayType = function requestHolidayType(state, action) {\n  return update(state, {\n    holidayType: {\n      $setRequestLoading: null\n    }\n  });\n};\n\nvar successHolidayType = function successHolidayType(state, action) {\n  return update(state, {\n    holidayType: {\n      $setRequestSuccess: action.payload\n    }\n  });\n};\n\nvar errorHolidayType = function errorHolidayType(state, action) {\n  return update(state, {\n    holidayType: {\n      $setRequestError: action.payload\n    }\n  });\n};\n\nvar resetReducer = function resetReducer(state, action) {\n  return update(state, {\n    addHolidays: {\n      $setInitialState: null\n    },\n    deleteHolidays: {\n      $setInitialState: null\n    }\n  });\n};\n\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, constants.REQUEST_HOLIDAYSLIST, requestHolidaysList), _defineProperty(_handleActions, constants.SUCCESS_HOLIDAYSLIST, successHolidaysList), _defineProperty(_handleActions, constants.ERROR_HOLIDAYSLIST, errorHolidaysList), _defineProperty(_handleActions, constants.REQUEST_ADDHOLIDAYS, requestAddHolidays), _defineProperty(_handleActions, constants.SUCCESS_ADDHOLIDAYS, successAddHolidays), _defineProperty(_handleActions, constants.ERROR_ADDHOLIDAYS, errorAddHolidays), _defineProperty(_handleActions, constants.REQUEST_HOLIDAYTYPE, requestHolidayType), _defineProperty(_handleActions, constants.SUCCESS_HOLIDAYTYPE, successHolidayType), _defineProperty(_handleActions, constants.ERROR_HOLIDAYTYPE, errorHolidayType), _defineProperty(_handleActions, constants.RESET_ADDHOLIDAYREDUCER, resetReducer), _defineProperty(_handleActions, constants.REQUEST_DELETEHOLIDAYS, requestDleteHolidays), _defineProperty(_handleActions, constants.SUCCESS_DELETEHOLIDAYS, successDeleteHolidays), _defineProperty(_handleActions, constants.ERROR_DELETEHOLIDAYS, errorDeleteHolidays), _handleActions), initialState);","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/holidays/reducers/holidaysList.js"],"names":["handleActions","update","constants","initialState","holidaysList","data","isLoading","isError","isSuccess","message","addHolidays","holidayType","deleteHolidays","requestHolidaysList","state","action","$setRequestLoading","successHolidaysList","$setRequestSuccess","payload","$set","errorHolidaysList","$setRequestError","requestAddHolidays","successAddHolidays","errorAddHolidays","requestDleteHolidays","successDeleteHolidays","errorDeleteHolidays","requestHolidayType","successHolidayType","errorHolidayType","resetReducer","$setInitialState","REQUEST_HOLIDAYSLIST","SUCCESS_HOLIDAYSLIST","ERROR_HOLIDAYSLIST","REQUEST_ADDHOLIDAYS","SUCCESS_ADDHOLIDAYS","ERROR_ADDHOLIDAYS","REQUEST_HOLIDAYTYPE","SUCCESS_HOLIDAYTYPE","ERROR_HOLIDAYTYPE","RESET_ADDHOLIDAYREDUCER","REQUEST_DELETEHOLIDAYS","SUCCESS_DELETEHOLIDAYS","ERROR_DELETEHOLIDAYS"],"mappings":"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","sourcesContent":["import {handleActions} from 'redux-actions';\nimport update from 'immutability-helper';\nimport * as constants from '../../../redux/constants';\nimport '../../../redux/update';\n\nlet initialState = {\n  holidaysList: {\n    data:      {},\n    isLoading: false,\n    isError:   false,\n    isSuccess: false,\n    message:   ''\n  },\n  addHolidays: {\n    data:      {},\n    isLoading: false,\n    isError:   false,\n    isSuccess: false,\n    message:   ''\n  },\n  holidayType : {\n    data:      [],\n    isLoading: false,\n    isError:   false,\n    isSuccess: false,\n    message:   ''\n  },\n  deleteHolidays: {\n    data:      {},\n    isLoading: false,\n    isError:   false,\n    isSuccess: false,\n    message:   ''\n  }\n};\n\nconst requestHolidaysList = (state, action) => update(state, {\n  holidaysList: {$setRequestLoading: null}\n});\nconst successHolidaysList = (state, action) => update(state, {\n  holidaysList: {$setRequestSuccess: action.payload},\n  addHolidays : {isSuccess :{$set:false}},\n  deleteHolidays : {isSuccess :{$set:false}}\n});\nconst errorHolidaysList = (state, action) => update(state, {\n  holidaysList: {$setRequestError: action.payload}\n});\n\nconst requestAddHolidays = (state, action) => update(state, {\n  addHolidays: {$setRequestLoading: null}\n});\nconst successAddHolidays = (state, action) => update(state, {\n  addHolidays: {$setRequestSuccess: action.payload}\n});\nconst errorAddHolidays = (state, action) => update(state, {\n  addHolidays: {$setRequestError: action.payload}\n});\n\nconst requestDleteHolidays = (state, action) => update(state, {\n  deleteHolidays: {$setRequestLoading: null}\n});\nconst successDeleteHolidays = (state, action) => update(state, {\n  deleteHolidays: {$setRequestSuccess: action.payload}\n});\nconst errorDeleteHolidays = (state, action) => update(state, {\n  deleteHolidays: {$setRequestError: action.payload}\n});\n\nconst requestHolidayType = (state, action) => update(state, {\n  holidayType: {$setRequestLoading: null}\n});\nconst successHolidayType = (state, action) => update(state, {\n  holidayType: {$setRequestSuccess: action.payload}\n});\nconst errorHolidayType = (state, action) => update(state, {\n  holidayType: {$setRequestError: action.payload}\n});\n\nconst resetReducer = (state,action) => update(state, {\n  addHolidays : {$setInitialState :null},\n  deleteHolidays : {$setInitialState :null}\n})\n\nexport default handleActions({\n  [constants.REQUEST_HOLIDAYSLIST]: requestHolidaysList,\n  [constants.SUCCESS_HOLIDAYSLIST]: successHolidaysList,\n  [constants.ERROR_HOLIDAYSLIST]:   errorHolidaysList,\n  [constants.REQUEST_ADDHOLIDAYS]: requestAddHolidays,\n  [constants.SUCCESS_ADDHOLIDAYS]: successAddHolidays,\n  [constants.ERROR_ADDHOLIDAYS]: errorAddHolidays,\n  [constants.REQUEST_HOLIDAYTYPE]: requestHolidayType,\n  [constants.SUCCESS_HOLIDAYTYPE]: successHolidayType,\n  [constants.ERROR_HOLIDAYTYPE]: errorHolidayType,\n  [constants.RESET_ADDHOLIDAYREDUCER]: resetReducer,\n  [constants.REQUEST_DELETEHOLIDAYS]: requestDleteHolidays,\n  [constants.SUCCESS_DELETEHOLIDAYS]: successDeleteHolidays,\n  [constants.ERROR_DELETEHOLIDAYS]: errorDeleteHolidays\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}