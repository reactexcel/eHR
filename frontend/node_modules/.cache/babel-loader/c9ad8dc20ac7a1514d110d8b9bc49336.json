{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/auth/containers/forgotPassword.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { notify } from '../../../services/notify';\nimport { isNotUserValid } from '../../../services/generic';\nimport GetLogo from '../../../components/auth/login/GetLogo';\nimport Navbar from '../../../components/auth/login/Navbar';\nimport LoadingIcon from '../../../components/generic/LoadingIcon';\nimport { Button } from '../../../components/generic/buttons';\nimport * as actions from '../../../redux/actions';\n\nvar ForgotPassword =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ForgotPassword, _React$Component);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword).call(this, props));\n\n    _this.props.isAlreadyLogin();\n\n    _this.state = {\n      form_username: ''\n    };\n    _this.doResetPassword = _this.doResetPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var location = props.location,\n          history = props.history,\n          loggedUser = props.loggedUser,\n          _props$forgotPassword = props.forgotPassword,\n          isError = _props$forgotPassword.isError,\n          isSuccess = _props$forgotPassword.isSuccess,\n          message = _props$forgotPassword.message;\n      var isNotValid = isNotUserValid(location.pathname, loggedUser);\n\n      if (isNotValid.status && isNotValid.redirectTo !== '/logout') {\n        history.push(isNotValid.redirectTo);\n      }\n\n      if (isError || isSuccess) {\n        var megType = isError ? 'error' : 'success';\n        notify(megType + ' ! ', message, megType);\n      }\n    }\n  }, {\n    key: \"doResetPassword\",\n    value: function doResetPassword(evt) {\n      evt.preventDefault();\n\n      if (this.state.form_username === '') {\n        notify('Warning !', 'Enter Username', 'warning');\n      } else {\n        this.props.requestForgotPassword({\n          username: this.state.form_username\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"center-block w-xxl w-auto-xs p-y-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(GetLogo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"p-a-md box-color r box-shadow-z1 text-color m-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(LoadingIcon, {\n        loading: this.props.forgotPassword.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"m-b text-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Reset Your Password\"), React.createElement(\"form\", {\n        name: \"form\",\n        onSubmit: this.doResetPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"md-form-group float-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"forgotPasswordInput\",\n        className: \"md-input\",\n        required: true,\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            form_username: e.target.value\n          });\n        },\n        value: this.state.form_username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Enter Username\")), React.createElement(Button, {\n        type: \"submit\",\n        id: \"resetPasswordButton\",\n        className: \"btn primary btn-block p-x-md\",\n        label: \"Reset Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"m-b text-sm text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"md-btn md-flat text-accent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/page_login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Login\")))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    loggedUser: state.logged_user.userLogin,\n    forgotPassword: state.logged_user.forgotPassword\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nvar VisibleForgotPassword = connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\nvar RouterVisibleForgotPassword = withRouter(VisibleForgotPassword);\nexport default RouterVisibleForgotPassword;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/auth/containers/forgotPassword.jsx"],"names":["React","connect","withRouter","Link","bindActionCreators","notify","isNotUserValid","GetLogo","Navbar","LoadingIcon","Button","actions","ForgotPassword","props","isAlreadyLogin","state","form_username","doResetPassword","bind","location","history","loggedUser","forgotPassword","isError","isSuccess","message","isNotValid","pathname","status","redirectTo","push","megType","evt","preventDefault","requestForgotPassword","username","isLoading","e","setState","target","value","Component","mapStateToProps","logged_user","userLogin","mapDispatchToProps","dispatch","VisibleForgotPassword","RouterVisibleForgotPassword"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {Link} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport {notify} from '../../../services/notify';\nimport {isNotUserValid} from '../../../services/generic';\nimport GetLogo from '../../../components/auth/login/GetLogo';\nimport Navbar from '../../../components/auth/login/Navbar';\nimport LoadingIcon from '../../../components/generic/LoadingIcon';\nimport {Button} from '../../../components/generic/buttons';\nimport * as actions from '../../../redux/actions';\n\nclass ForgotPassword extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n    this.state = {\n      form_username: ''\n    };\n    this.doResetPassword = this.doResetPassword.bind(this);\n  }\n  componentWillReceiveProps (props) {\n    let {location, history, loggedUser, forgotPassword: {isError, isSuccess, message}} = props;\n    \n    let isNotValid = isNotUserValid(location.pathname, loggedUser);\n    if (isNotValid.status && isNotValid.redirectTo !== '/logout') {\n      history.push(isNotValid.redirectTo);\n    }\n    if (isError || isSuccess) {\n      let megType = isError ? 'error' : 'success';\n      notify(megType + ' ! ', message, megType);\n    }\n  }\n  doResetPassword (evt) {\n    evt.preventDefault();\n\n    if (this.state.form_username === '') {\n      notify('Warning !', 'Enter Username', 'warning');\n    } else {\n      this.props.requestForgotPassword({username: this.state.form_username});\n    }\n  }\n  render () {\n    return (\n      <div className=\"center-block w-xxl w-auto-xs p-y-md\">\n        <GetLogo />\n        <Navbar />\n        <div className=\"p-a-md box-color r box-shadow-z1 text-color m-a\">\n          <LoadingIcon loading={this.props.forgotPassword.isLoading} />\n          <br />\n          <div className=\"m-b text-sm\">\n            Reset Your Password\n          </div>\n          <form name=\"form\" onSubmit={this.doResetPassword}>\n            <div className=\"md-form-group float-label\">\n              <input\n                id='forgotPasswordInput'\n                className=\"md-input\"\n                required type=\"text\"\n                onChange={(e) => this.setState({form_username: e.target.value})}\n                value={this.state.form_username} />\n              <label>Enter Username</label>\n            </div>\n            <Button type=\"submit\" id=\"resetPasswordButton\" className=\"btn primary btn-block p-x-md\" label=\"Reset Password\" />\n          </form>\n          <div className=\"m-b text-sm text-center\">\n            <br />\n            <button className=\"md-btn md-flat text-accent\">\n              <Link to='/page_login'>Login</Link>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    loggedUser:     state.logged_user.userLogin,\n    forgotPassword: state.logged_user.forgotPassword\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst VisibleForgotPassword = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ForgotPassword);\n\nconst RouterVisibleForgotPassword = withRouter(VisibleForgotPassword);\n\nexport default RouterVisibleForgotPassword;\n"]},"metadata":{},"sourceType":"module"}