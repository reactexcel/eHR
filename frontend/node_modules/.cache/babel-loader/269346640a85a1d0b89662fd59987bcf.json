{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport * as _ from 'lodash';\nimport * as jwt from 'jwt-simple';\nimport { CONFIG } from '../../../config/index';\nimport { fireAjax } from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nexport function list_leaves_sucess(data) {\n  return createAction(constants.ACTION_LIST_LEAVES_SUCCESS)(data);\n}\nexport function list_leaves_empty(data) {\n  return createAction(constants.ACTION_LIST_LEAVES_EMPTY)([]);\n}\nexport function list_leaves_error(err) {\n  return createAction(constants.ACTION_LIST_LEAVES_ERROR)('Error Occurs !!');\n}\n\nfunction async_getAllLeaves(from_date, to_date, no_of_days, reason) {\n  return fireAjax('POST', '', {\n    'action': 'get_all_leaves'\n  });\n}\n\nexport function getAllLeaves(role) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getAllLeaves().then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(list_leaves_sucess(json.data));\n          resolve();\n        } else {\n          dispatch(list_leaves_error(json.data.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(list_leaves_error(error.data.message));\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/leave/actions/listLeaves.js"],"names":["createAction","_","jwt","CONFIG","fireAjax","constants","show_loading","hide_loading","list_leaves_sucess","data","ACTION_LIST_LEAVES_SUCCESS","list_leaves_empty","ACTION_LIST_LEAVES_EMPTY","list_leaves_error","err","ACTION_LIST_LEAVES_ERROR","async_getAllLeaves","from_date","to_date","no_of_days","reason","getAllLeaves","role","dispatch","getState","Promise","resolve","reject","then","json","error","message"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,eAA3B;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,0BAA3B;AACA,SAAQC,YAAR,EAAsBC,YAAtB,QAAyC,yCAAzC;AAEA,OAAO,SAASC,kBAAT,CAA6BC,IAA7B,EAAmC;AACxC,SAAOT,YAAY,CAACK,SAAS,CAACK,0BAAX,CAAZ,CAAmDD,IAAnD,CAAP;AACD;AAED,OAAO,SAASE,iBAAT,CAA4BF,IAA5B,EAAkC;AACvC,SAAOT,YAAY,CAACK,SAAS,CAACO,wBAAX,CAAZ,CAAiD,EAAjD,CAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA4BC,GAA5B,EAAiC;AACtC,SAAOd,YAAY,CAACK,SAAS,CAACU,wBAAX,CAAZ,CAAiD,iBAAjD,CAAP;AACD;;AAED,SAASC,kBAAT,CAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,UAAjD,EAA6DC,MAA7D,EAAqE;AACnE,SAAOhB,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1B,cAAU;AADgB,GAAb,CAAf;AAGD;;AAED,OAAO,SAASiB,YAAT,CAAuBC,IAAvB,EAA6B;AAClC,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACnC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACjB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1BU,MAAAA,kBAAkB,GAAGY,IAArB,CACF,UAACC,IAAD,EAAU;AACZN,QAAAA,QAAQ,CAAChB,YAAY,EAAb,CAAR,CADY,CACc;;AAC1B,YAAIsB,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBP,UAAAA,QAAQ,CAACf,kBAAkB,CAACqB,IAAI,CAACpB,IAAN,CAAnB,CAAR;AACAiB,UAAAA,OAAO;AACR,SAHD,MAGO;AACLH,UAAAA,QAAQ,CAACV,iBAAiB,CAACgB,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAlB,CAAR;AACD;AACF,OATK,EAUF,UAACD,KAAD,EAAW;AACbP,QAAAA,QAAQ,CAAChB,YAAY,EAAb,CAAR,CADa,CACa;;AAC1BgB,QAAAA,QAAQ,CAACV,iBAAiB,CAACiB,KAAK,CAACrB,IAAN,CAAWsB,OAAZ,CAAlB,CAAR;AACD,OAbK;AAeD,KAjBM,CAAP;AAkBD,GAnBD;AAoBD","sourcesContent":["import {createAction} from 'redux-actions';\nimport * as _ from 'lodash';\nimport * as jwt from 'jwt-simple';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\nexport function list_leaves_sucess (data) {\n  return createAction(constants.ACTION_LIST_LEAVES_SUCCESS)(data);\n}\n\nexport function list_leaves_empty (data) {\n  return createAction(constants.ACTION_LIST_LEAVES_EMPTY)([]);\n}\n\nexport function list_leaves_error (err) {\n  return createAction(constants.ACTION_LIST_LEAVES_ERROR)('Error Occurs !!');\n}\n\nfunction async_getAllLeaves (from_date, to_date, no_of_days, reason) {\n  return fireAjax('POST', '', {\n    'action': 'get_all_leaves'\n  });\n}\n\nexport function getAllLeaves (role) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getAllLeaves().then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n  if (json.error == 0) {\n    dispatch(list_leaves_sucess(json.data));\n    resolve();\n  } else {\n    dispatch(list_leaves_error(json.data.message));\n  }\n},\n\t\t\t\t(error) => {\n  dispatch(hide_loading()); // hide loading icon\n  dispatch(list_leaves_error(error.data.message));\n}\n\t\t\t);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}