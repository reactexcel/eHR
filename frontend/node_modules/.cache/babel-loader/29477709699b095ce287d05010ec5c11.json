{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/healthStats/component/LeaveStats.jsx\";\nimport React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport * as _ from \"lodash\";\n\nvar LeaveStats =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LeaveStats, _React$Component);\n\n  function LeaveStats() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LeaveStats);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LeaveStats)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.highChartRender = function (data) {\n      Highcharts.chart({\n        chart: {\n          type: \"column\",\n          height: 50 + '%',\n          renderTo: \"chart-container-leave\"\n        },\n        title: {\n          text: \"\"\n        },\n        credits: {\n          enabled: false\n        },\n        xAxis: {\n          categories: _.map(data, function (o) {\n            return \"\".concat(o.date, \" \").concat(o.day);\n          })\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: \"Total Employment %\"\n          }\n        },\n        tooltip: {\n          pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\n          shared: true\n        },\n        plotOptions: {\n          column: {\n            stacking: \"percent\"\n          }\n        },\n        series: [{\n          name: \"Approved\",\n          color: \"#69f0ae\",\n          data: _.map(data, \"approved\")\n        }, {\n          name: \"Pending\",\n          color: \"#ffff00\",\n          data: _.map(data, \"pending\")\n        }, {\n          name: \"Rejected\",\n          color: \"#f44336\",\n          data: _.map(data, \"rejected\")\n        }, {\n          name: \"Employees Present\",\n          color: \"#98AEDA\",\n          data: _.map(data, function (item) {\n            return item.total_employees - item.approved;\n          })\n        }]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LeaveStats, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps) {\n      if (nextProps.flag) {\n        if (nextProps && nextProps.data && nextProps.data.stats) {\n          this.highChartRender(_.filter(nextProps.data.stats, function (o) {\n            {\n              return o.day_type === \"WORKING_DAY\";\n            }\n          }));\n          nextProps.handleFlag();\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.highChartRender();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"chart-container-leave\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LeaveStats;\n}(React.Component);\n\nexport { LeaveStats as default };","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/healthStats/component/LeaveStats.jsx"],"names":["React","Component","Highcharts","_","LeaveStats","highChartRender","data","chart","type","height","renderTo","title","text","credits","enabled","xAxis","categories","map","o","date","day","yAxis","min","tooltip","pointFormat","shared","plotOptions","column","stacking","series","name","color","item","total_employees","approved","nextProps","flag","stats","filter","day_type","handleFlag"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport * as _ from \"lodash\";\nexport default class LeaveStats extends React.Component {\n  componentWillUpdate(nextProps) {\n    if(nextProps.flag){\n      if (nextProps && nextProps.data && nextProps.data.stats) {\n        this.highChartRender(_.filter(nextProps.data.stats, function(o) {{return o.day_type===\"WORKING_DAY\"}}));\n        nextProps.handleFlag();\n      }\n    }\n  }\n  componentDidMount(){\n    this.highChartRender();\n  }\n  highChartRender = (data) => {\n    Highcharts.chart({\n      chart: {\n        type: \"column\",\n        height:  50 + '%', \n        renderTo: \"chart-container-leave\"\n      },\n      title: {\n        text: \"\"\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: _.map(data, o => `${o.date} ${o.day}`)\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: \"Total Employment %\"\n        }\n      },\n      tooltip: {\n        pointFormat:\n          '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\n        shared: true\n      },\n      plotOptions: {\n        column: {\n          stacking: \"percent\"\n        }\n      },\n      series: [\n        {\n            name: \"Approved\",\n            color:\"#69f0ae\",\n            data: _.map(data,\"approved\")\n        },\n        {\n            name: \"Pending\",\n            color:\"#ffff00\",\n            data: _.map(data,\"pending\")\n        },\n        {\n            name: \"Rejected\",\n            color:\"#f44336\",\n            data: _.map(data,\"rejected\")\n        },\n        {\n          name: \"Employees Present\",\n          color: \"#98AEDA\",\n          data: _.map(data,function(item){\n            return item.total_employees - item.approved;\n          })\n      }\n      ]\n    });\n  };\n  render() {\n    return <div id=\"chart-container-leave\"></div>;\n  }\n}"]},"metadata":{},"sourceType":"module"}