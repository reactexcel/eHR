{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport _ from 'lodash';\nimport { fireAjax } from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nexport function success_user_working_hours(data) {\n  return createAction(constants.ACTION_SUCCESS_USER_WORKING_HOURS)(data);\n}\nexport function empty_user_working_hours(data) {\n  return createAction(constants.ACTION_EMPTY_USER_WORKING_HOURS)(data);\n}\nexport function error_user_working_hours(data) {\n  return createAction(constants.ACTION_ERROR_USER_WORKING_HOURS)(data);\n}\n\nfunction async_get_managed_user_working_hours(userid) {\n  return fireAjax('POST', '', {\n    action: 'get_managed_user_working_hours',\n    userid: userid\n  });\n}\n\nexport function get_managed_user_working_hours(userid) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_get_managed_user_working_hours(userid).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error === 0) {\n          dispatch(success_user_working_hours(json.data));\n        } else {\n          dispatch(empty_user_working_hours(json.data));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_user_working_hours({}));\n      });\n    });\n  };\n} // /-------------------\n\nexport function success_add_user_working_hours(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_USER_WORKING_HOURS)(data);\n}\nexport function error_add_user_working_hours(data) {\n  return createAction(constants.ACTION_ERROR_ADD_USER_WORKING_HOURS)(data);\n}\n\nfunction async_add_user_working_hours(userid, date, working_hours, reason) {\n  return fireAjax('POST', '', {\n    action: 'add_user_working_hours',\n    userid: userid,\n    date: date,\n    working_hours: working_hours,\n    reason: reason\n  });\n}\n\nexport function add_user_working_hours(userid, date, working_hours, reason) {\n  return function (dispatch, getState) {\n    if (_.isEmpty(date)) {\n      return Promise.reject('date is empty');\n    }\n\n    if (_.isEmpty(working_hours)) {\n      return Promise.reject('Time is empty');\n    }\n\n    if (_.isEmpty(reason)) {\n      return Promise.reject('Reason is empty');\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_add_user_working_hours(userid, date, working_hours, reason).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_add_user_working_hours(json.data.message));\n          dispatch(get_managed_user_working_hours(userid));\n        } else {\n          dispatch(error_add_user_working_hours(json.data.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_add_user_working_hours('error occurs'));\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/workingHours/actions/manageUserWorkingHours.js"],"names":["createAction","_","fireAjax","constants","show_loading","hide_loading","success_user_working_hours","data","ACTION_SUCCESS_USER_WORKING_HOURS","empty_user_working_hours","ACTION_EMPTY_USER_WORKING_HOURS","error_user_working_hours","ACTION_ERROR_USER_WORKING_HOURS","async_get_managed_user_working_hours","userid","action","get_managed_user_working_hours","dispatch","getState","Promise","resolve","reject","then","json","error","success_add_user_working_hours","ACTION_SUCCESS_ADD_USER_WORKING_HOURS","error_add_user_working_hours","ACTION_ERROR_ADD_USER_WORKING_HOURS","async_add_user_working_hours","date","working_hours","reason","add_user_working_hours","isEmpty","message"],"mappings":"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","sourcesContent":["import {createAction} from 'redux-actions';\nimport _ from 'lodash';\nimport {fireAjax} from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\nexport function success_user_working_hours (data) {\n  return createAction(constants.ACTION_SUCCESS_USER_WORKING_HOURS)(data);\n}\n\nexport function empty_user_working_hours (data) {\n  return createAction(constants.ACTION_EMPTY_USER_WORKING_HOURS)(data);\n}\n\nexport function error_user_working_hours (data) {\n  return createAction(constants.ACTION_ERROR_USER_WORKING_HOURS)(data);\n}\n\nfunction async_get_managed_user_working_hours (userid) {\n  return fireAjax('POST', '', {\n    action: 'get_managed_user_working_hours',\n    userid: userid\n  });\n}\n\nexport function get_managed_user_working_hours (userid) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_managed_user_working_hours(userid).then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n  if (json.error === 0) {\n    dispatch(success_user_working_hours(json.data));\n  } else {\n    dispatch(empty_user_working_hours(json.data));\n  }\n}, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_user_working_hours({}));\n      }\n\t\t\t);\n    });\n  };\n}\n\n// /-------------------\n\nexport function success_add_user_working_hours (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_USER_WORKING_HOURS)(data);\n}\nexport function error_add_user_working_hours (data) {\n  return createAction(constants.ACTION_ERROR_ADD_USER_WORKING_HOURS)(data);\n}\n\nfunction async_add_user_working_hours (userid, date, working_hours, reason) {\n  return fireAjax('POST', '', {\n    action:        'add_user_working_hours',\n    userid:        userid,\n    date:          date,\n    working_hours: working_hours,\n    reason:        reason\n  });\n}\n\nexport function add_user_working_hours (userid, date, working_hours, reason) {\n  return function (dispatch, getState) {\n    if (_.isEmpty(date)) {\n      return Promise.reject('date is empty');\n    }\n    if (_.isEmpty(working_hours)) {\n      return Promise.reject('Time is empty');\n    }\n    if (_.isEmpty(reason)) {\n      return Promise.reject('Reason is empty');\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_add_user_working_hours(userid, date, working_hours, reason).then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n\t\t\t        if (json.error == 0) {\n\t\t\t        \tdispatch(success_add_user_working_hours(json.data.message));\n\t\t\t            dispatch(get_managed_user_working_hours(userid));\n\t\t\t          } else {\n\t\t\t            dispatch(error_add_user_working_hours(json.data.message));\n\t\t\t          }\n},\n\t\t\t\t(error) => {\n  dispatch(hide_loading()); // hide loading icon\n  dispatch(error_add_user_working_hours('error occurs'));\n}\n\t\t\t);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}