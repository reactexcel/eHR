{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/manageRoles/components/AddRolesForm.jsx\";\nimport React from 'react';\nimport _ from 'lodash';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport PropTypes from 'prop-types';\nimport Dialog from 'material-ui/Dialog';\nimport { Button, ButtonRaised } from '../../../components/generic/buttons/';\n\nvar AddRolesForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddRolesForm, _React$Component);\n\n  function AddRolesForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddRolesForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddRolesForm).call(this, props));\n    _this.state = {\n      open: false,\n      baseRoleId: '',\n      name: '',\n      description: '',\n      error: {\n        baseRoleId: '',\n        name: '',\n        description: ''\n      }\n    };\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddRolesForm, [{\n    key: \"handleOpen\",\n    value: function handleOpen() {\n      this.setState({\n        open: true,\n        baseRoleId: '',\n        name: '',\n        description: ''\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this$state = this.state,\n          baseRoleId = _this$state.baseRoleId,\n          name = _this$state.name,\n          description = _this$state.description;\n      var error = {\n        baseRoleId: '',\n        name: '',\n        description: ''\n      };\n      var valid = true;\n\n      if (_.isEmpty(name)) {\n        valid = false;\n        error.name = 'This field is required.';\n      }\n\n      if (_.isEmpty(description)) {\n        valid = false;\n        error.description = 'This field is required.';\n      }\n\n      this.setState({\n        error: error\n      });\n\n      if (valid) {\n        this.props.callAddNewRole({\n          baseRoleId: baseRoleId,\n          name: name,\n          description: description\n        });\n        this.handleClose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var optionMenu = _.map(this.props.displayData.roles, function (role, index) {\n        return React.createElement(\"div\", {\n          id: \"\".concat(role.name, \"_list\"),\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          key: index,\n          value: role.id,\n          primaryText: role.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n      });\n\n      return React.createElement(\"div\", {\n        className: \"col-sm-12 p-y\",\n        id: \"role_button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-fw info\",\n        id: \"add_role\",\n        onClick: this.handleOpen,\n        label: \"Add New Role\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        id: \"add_role_dialog\",\n        title: \"Add Role\",\n        modal: false,\n        open: this.state.open,\n        onRequestClose: this.handleClose,\n        contentClassName: \"dialog-add-role\",\n        autoScrollBodyContent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(SelectField, {\n        fullWidth: true,\n        id: \"role_selector\",\n        value: this.state.baseRoleId,\n        onChange: function onChange(event, index, value) {\n          _this2.setState({\n            baseRoleId: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: '',\n        primaryText: \" Select Base Role \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"role_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, optionMenu)), React.createElement(TextField, {\n        id: \"role_name\",\n        floatingLabelText: \"Name\",\n        floatingLabelFixed: true,\n        fullWidth: true,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        value: this.state.name,\n        errorText: this.state.error.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"role_desc\",\n        floatingLabelText: \"Description\",\n        floatingLabelFixed: true,\n        fullWidth: true,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            description: e.target.value\n          });\n        },\n        value: this.state.description,\n        errorText: this.state.error.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(ButtonRaised, {\n        className: \"col-md-12 m-y-sm indigo\",\n        id: \"role_submit_button\",\n        onClick: function onClick() {\n          return _this2.handleSubmit();\n        },\n        label: 'Submit New Role',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddRolesForm;\n}(React.Component);\n\nexport { AddRolesForm as default };\nAddRolesForm.propTypes = {\n  displayData: PropTypes.shape({\n    roles: PropTypes.array\n  }).isRequired,\n  callAddNewRole: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/manageRoles/components/AddRolesForm.jsx"],"names":["React","_","TextField","SelectField","MenuItem","PropTypes","Dialog","Button","ButtonRaised","AddRolesForm","props","state","open","baseRoleId","name","description","error","handleOpen","bind","handleClose","handleSubmit","setState","valid","isEmpty","callAddNewRole","optionMenu","map","displayData","roles","role","index","id","event","value","e","target","Component","propTypes","shape","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport PropTypes from 'prop-types';\nimport Dialog from 'material-ui/Dialog';\nimport {Button, ButtonRaised} from '../../../components/generic/buttons/';\n\nexport default class AddRolesForm extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      open:        false,\n      baseRoleId:  '',\n      name:        '',\n      description: '',\n      error:       {baseRoleId: '', name: '', description: ''}\n    };\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleOpen () {\n    this.setState({\n      open:        true,\n      baseRoleId:  '',\n      name:        '',\n      description: ''\n    });\n  }\n  handleClose () {\n    this.setState({open: false});\n  }\n  handleSubmit () {\n    let {baseRoleId, name, description} = this.state;\n    let error = {baseRoleId: '', name: '', description: ''};\n    let valid = true;\n    if (_.isEmpty(name)) {\n      valid = false;\n      error.name = 'This field is required.';\n    }\n    if (_.isEmpty(description)) {\n      valid = false;\n      error.description = 'This field is required.';\n    }\n    this.setState({error});\n    if (valid) {\n      this.props.callAddNewRole({baseRoleId, name, description});\n      this.handleClose();\n    }\n  }\n  render () {\n    let optionMenu = _.map(this.props.displayData.roles, (role, index) => (\n      <div id={`${role.name}_list`} key={index}>\n        <MenuItem key={index} value={role.id} primaryText={role.name} />\n      </div>\n    ));\n    return (\n      <div className=\"col-sm-12 p-y\" id=\"role_button\">\n        <Button className=\"btn-fw info\" id=\"add_role\" onClick={this.handleOpen} label=\"Add New Role\" />\n        <Dialog\n          id=\"add_role_dialog\"\n          title=\"Add Role\"\n          modal={false}\n          open={this.state.open}\n          onRequestClose={this.handleClose}\n          contentClassName=\"dialog-add-role\"\n          autoScrollBodyContent><br />\n          <SelectField fullWidth id=\"role_selector\" value={this.state.baseRoleId} onChange={(event, index, value) => { this.setState({baseRoleId: value}); }}>\n            <MenuItem value={''} primaryText=\" Select Base Role \" />\n            <div id=\"role_list\">\n              {optionMenu}\n            </div>\n          </SelectField>\n          <TextField\n            id=\"role_name\"\n            floatingLabelText=\"Name\"\n            floatingLabelFixed fullWidth\n            onChange={(e) => (this.setState({name: e.target.value}))}\n            value={this.state.name}\n            errorText={this.state.error.name}\n          />\n          <TextField\n            id=\"role_desc\"\n            floatingLabelText=\"Description\"\n            floatingLabelFixed fullWidth\n            onChange={(e) => (this.setState({description: e.target.value}))}\n            value={this.state.description}\n            errorText={this.state.error.description}\n          />\n          <ButtonRaised className=\"col-md-12 m-y-sm indigo\" id=\"role_submit_button\" onClick={() => this.handleSubmit()} label={'Submit New Role'} />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nAddRolesForm.propTypes = {\n  displayData: PropTypes.shape({\n    roles: PropTypes.array\n  }).isRequired,\n  callAddNewRole: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}