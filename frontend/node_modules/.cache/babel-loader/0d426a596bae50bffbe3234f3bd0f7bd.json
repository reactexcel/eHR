{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport { hashHistory } from 'react-router';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers';\nimport rootSaga from './sagas';\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar sagaMiddleware = createSagaMiddleware();\nvar middleware = [sagaMiddleware, thunk];\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware.apply(void 0, middleware)));\nsagaMiddleware.run(rootSaga); // export const history = syncHistoryWithStore(hashHistory, store);\n\nexport default store;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/store.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","syncHistoryWithStore","hashHistory","thunk","rootReducer","rootSaga","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","middleware","store","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,oBAAR,QAAmC,oBAAnC;AACA,SAAQC,WAAR,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CT,OAAxE;AACA,IAAMU,cAAc,GAAGT,oBAAoB,EAA3C;AACA,IAAMU,UAAU,GAAG,CAACD,cAAD,EAAiBN,KAAjB,CAAnB;AAEA,IAAMQ,KAAK,GAAGd,WAAW,CACvBO,WADuB,EAEvBE,gBAAgB,CACfR,eAAe,MAAf,SAAmBY,UAAnB,CADe,CAFO,CAAzB;AAOAD,cAAc,CAACG,GAAf,CAAmBP,QAAnB,E,CAEA;;AAEA,eAAeM,KAAf","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {syncHistoryWithStore} from 'react-router-redux';\nimport {hashHistory} from 'react-router';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers';\nimport rootSaga from './sagas';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware, thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n   applyMiddleware(...middleware),\n ),\n);\n\nsagaMiddleware.run(rootSaga);\n\n// export const history = syncHistoryWithStore(hashHistory, store);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}