{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/components/employeeLeastActiveHours.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\nimport CircularProgress from \"material-ui/CircularProgress\";\nimport * as actions from '../../../redux/actions'; // import 'react-date-picker/index.css';\n\nimport _ from 'lodash';\n\nvar moment = require('moment');\n\nvar EmployeeLeastActiveHours =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmployeeLeastActiveHours, _Component);\n\n  function EmployeeLeastActiveHours(props) {\n    var _this;\n\n    _classCallCheck(this, EmployeeLeastActiveHours);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmployeeLeastActiveHours).call(this, props));\n    _this.state = {\n      year: '',\n      month: '',\n      userId: '',\n      monthlyAllUsersReport: '',\n      loading: false\n    };\n    _this.handleMonth = _this.handleMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleYear = _this.handleYear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setByData = _this.setByData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EmployeeLeastActiveHours, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        year: this.props.currentYear,\n        month: this.props.currentMonth,\n        monthlyAllUsersReport: this.props.monthlyAllUsersReport\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      if (props.monthlyAllUsersReport.isLoading) {\n        this.setState({\n          loading: true\n        });\n      } else if (props.monthlyAllUsersReport.isSuccess || props.monthlyAllUsersReport.isError) {\n        this.setState({\n          loading: false\n        });\n      }\n\n      this.setState({\n        monthlyAllUsersReport: props.monthlyAllUsersReport\n      });\n    }\n  }, {\n    key: \"handleMonth\",\n    value: function handleMonth(data) {\n      this.setState({\n        month: data,\n        loading: true\n      });\n      this.setByData({\n        month: data,\n        change: 'month'\n      });\n    }\n  }, {\n    key: \"handleYear\",\n    value: function handleYear(data) {\n      this.setState({\n        year: data,\n        loading: true\n      });\n      this.setByData({\n        year: data,\n        change: 'year'\n      });\n    }\n  }, {\n    key: \"setByData\",\n    value: function setByData(data) {\n      var userId = localStorage.getItem('userid');\n      var year = this.state.year !== '' ? this.state.year : this.props.currentYear;\n      var month = this.state.month !== '' ? this.state.month : this.props.currentMonth;\n\n      if (data.change === 'month') {\n        month = data.month;\n      } else if (data.change === 'year') {\n        year = data.year;\n      }\n\n      this.props.getByData({\n        'month': month,\n        'year': year\n      });\n    }\n  }, {\n    key: \"renderTotalHours\",\n    value: function renderTotalHours(userData) {\n      var computedTime = {\n        time: '',\n        count: ''\n      };\n      var count = 0;\n      computedTime.time = _.sumBy(userData, function (entryTimings) {\n        if (parseInt(entryTimings.active_hours.total_time) > 0) {\n          computedTime.count = count++;\n        }\n\n        return parseFloat(entryTimings.active_hours.total_time);\n      });\n      return computedTime;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = [];\n      var leastaActiveList;\n\n      _.map(this.props.monthlyAllUsersReport.data, function (userData, k) {\n        var activeHoursTotalTime = _this2.renderTotalHours(userData.data).time;\n\n        var activeHoursTotalCount = _this2.renderTotalHours(userData.data).count;\n\n        var activeHoursTotalAverage = activeHoursTotalCount > 0 ? _.round(activeHoursTotalTime / activeHoursTotalCount, 1) : 0;\n\n        var totalHoursTotalTime = _.sumBy(userData.data, function (entryTimings) {\n          return parseFloat(entryTimings.total_hours.total_time);\n        });\n\n        var totalHoursTotalAverage = activeHoursTotalCount > 0 ? _.round(totalHoursTotalTime / activeHoursTotalCount, 1) : 0;\n        user[k] = {\n          name: userData.name,\n          id: userData.user_id,\n          activeHoursTotalTime: activeHoursTotalTime,\n          activeHoursTotalCount: activeHoursTotalCount,\n          activeHoursTotalAverage: activeHoursTotalAverage,\n          totalHoursTotalTime: totalHoursTotalTime,\n          totalHoursTotalAverage: totalHoursTotalAverage\n        };\n\n        var orderedActiveHoursTotalAverage = _.orderBy(user, ['activeHoursTotalAverage'], ['asc']);\n\n        var filteredActiveHours = _.filter(orderedActiveHoursTotalAverage, function (o) {\n          return o.activeHoursTotalAverage != 0;\n        });\n\n        var finalActiveHours = _.slice(filteredActiveHours, [0], [10]);\n\n        leastaActiveList = _.map(finalActiveHours, function (val, i) {\n          return React.createElement(\"tr\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, val.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, val.activeHoursTotalAverage), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, val.totalHoursTotalAverage));\n        });\n      });\n\n      var MonthlyAllUsersReport = this.state.monthlyAllUsersReport;\n      var noOfDays = [];\n      var noOfActiveHours = [];\n      var noOfTotalHours = [];\n      var monthOptions = [];\n      var yearOptions = [];\n\n      var monthOption = _.map(this.props.months, function (monthData, i) {\n        monthOptions.push(React.createElement(\"option\", {\n          key: i,\n          value: monthData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, monthData));\n      });\n\n      var yearOption = _.map(this.props.year, function (data, i) {\n        return yearOptions.push(React.createElement(\"option\", {\n          key: i,\n          value: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, data));\n      });\n\n      return React.createElement(\"div\", {\n        className: \"col-xs-12 employee-life-cycle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center emp-life-cycle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row no-gutter box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          fontSize: \"16px\",\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"LEAST ACTIVE EMPLOYEES\"), React.createElement(\"div\", {\n        className: \"table-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-striped table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Employee Name\"), React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Average Active Hours\"), React.createElement(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Average Total Hours\"))), this.state.loading ? React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(CircularProgress, {\n        size: 30,\n        thickness: 3,\n        style: {\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))) : this.props.monthlyAllUsersReport.data.length === undefined ? React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), \"No Data Found this month\", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))) : React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, leastaActiveList))))), React.createElement(\"div\", {\n        className: \"collapse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container p-t \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-xs-6 profile-input p-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Select Month:\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel1\",\n        defaultValue: this.props.currentMonth,\n        onChange: function onChange(evt) {\n          _this2.handleMonth(evt.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, monthOptions)), React.createElement(\"div\", {\n        className: \"form-group col-xs-6 profile-input p-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Select Year:\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel12\",\n        defaultValue: this.props.currentYear,\n        onChange: function onChange(evt) {\n          _this2.handleYear(evt.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, yearOptions)))));\n    }\n  }]);\n\n  return EmployeeLeastActiveHours;\n}(Component);\n\nexport default EmployeeLeastActiveHours;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/components/employeeLeastActiveHours.js"],"names":["React","Component","connect","bindActionCreators","withRouter","CircularProgress","actions","_","moment","require","EmployeeLeastActiveHours","props","state","year","month","userId","monthlyAllUsersReport","loading","handleMonth","bind","handleYear","setByData","setState","currentYear","currentMonth","isLoading","isSuccess","isError","data","change","localStorage","getItem","getByData","userData","computedTime","time","count","sumBy","entryTimings","parseInt","active_hours","total_time","parseFloat","user","leastaActiveList","map","k","activeHoursTotalTime","renderTotalHours","activeHoursTotalCount","activeHoursTotalAverage","round","totalHoursTotalTime","total_hours","totalHoursTotalAverage","name","id","user_id","orderedActiveHoursTotalAverage","orderBy","filteredActiveHours","filter","o","finalActiveHours","slice","val","i","MonthlyAllUsersReport","noOfDays","noOfActiveHours","noOfTotalHours","monthOptions","yearOptions","monthOption","months","monthData","push","yearOption","fontSize","fontWeight","textAlign","marginTop","length","undefined","evt","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\nimport CircularProgress from \"material-ui/CircularProgress\";\nimport * as actions from '../../../redux/actions';\n// import 'react-date-picker/index.css';\nimport _ from 'lodash';\nvar moment = require('moment');\n\nclass EmployeeLeastActiveHours extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            year: '',\n            month: '',\n            userId: '',\n            monthlyAllUsersReport: '',\n            loading: false\n        }\n        this.handleMonth = this.handleMonth.bind(this);\n        this.handleYear = this.handleYear.bind(this);\n        this.setByData = this.setByData.bind(this);\n    }\n    componentWillMount() {\n        this.setState({\n            year: this.props.currentYear,\n            month: this.props.currentMonth,\n            monthlyAllUsersReport: this.props.monthlyAllUsersReport\n        });\n    }\n    componentWillReceiveProps(props) {\n        if (props.monthlyAllUsersReport.isLoading) {\n            this.setState({\n                loading: true,\n            })\n        } else if (props.monthlyAllUsersReport.isSuccess || props.monthlyAllUsersReport.isError) {\n            this.setState({\n                loading: false,\n            })\n        }\n        this.setState({\n            monthlyAllUsersReport: props.monthlyAllUsersReport,\n        });\n    }\n    handleMonth(data) {\n        this.setState({ month: data, loading: true });\n        this.setByData({ month: data, change: 'month' });\n    }\n    handleYear(data) {\n        this.setState({ year: data, loading: true });\n        this.setByData({ year: data, change: 'year' });\n    }\n    setByData(data) {\n        const userId = localStorage.getItem('userid');\n        let year = this.state.year !== '' ? this.state.year : this.props.currentYear;\n        let month = this.state.month !== '' ? this.state.month : this.props.currentMonth;\n        if (data.change === 'month') {\n            month = data.month;\n        } else if (data.change === 'year') {\n            year = data.year;\n        }\n        this.props.getByData({\n            'month': month,\n            'year': year\n        });\n    }\n    renderTotalHours(userData) {\n        const computedTime = {\n            time: '',\n            count: ''\n        };\n        let count = 0;\n        computedTime.time = _.sumBy(userData, function (entryTimings) {\n            if (parseInt(entryTimings.active_hours.total_time) > 0) {\n                computedTime.count = count++;\n            }\n            return parseFloat(entryTimings.active_hours.total_time)\n        });\n        return computedTime;\n    }\n    render() {\n        let user = [];\n        let leastaActiveList;\n        _.map(this.props.monthlyAllUsersReport.data, (userData, k) => {\n            let activeHoursTotalTime = (this.renderTotalHours(userData.data)).time;\n            let activeHoursTotalCount = (this.renderTotalHours(userData.data)).count;\n            let activeHoursTotalAverage = activeHoursTotalCount > 0 ? _.round((activeHoursTotalTime / activeHoursTotalCount), 1) : 0;\n            let totalHoursTotalTime = _.sumBy(userData.data, function (entryTimings) { return parseFloat(entryTimings.total_hours.total_time) });\n            let totalHoursTotalAverage = activeHoursTotalCount > 0 ? _.round((totalHoursTotalTime / activeHoursTotalCount), 1) : 0;\n            user[k] = {\n                name: userData.name,\n                id: userData.user_id,\n                activeHoursTotalTime,\n                activeHoursTotalCount,\n                activeHoursTotalAverage,\n                totalHoursTotalTime,\n                totalHoursTotalAverage\n            };\n            let orderedActiveHoursTotalAverage = _.orderBy(user, ['activeHoursTotalAverage'], ['asc']);\n            let filteredActiveHours = _.filter(orderedActiveHoursTotalAverage, function (o) { return o.activeHoursTotalAverage != 0; });\n            let finalActiveHours = _.slice(filteredActiveHours, [0], [10])\n\n            leastaActiveList = _.map(finalActiveHours, (val, i) => {\n                return (\n                    <tr key={i}>\n                        <td>{val.name}</td>\n                        <td>{val.activeHoursTotalAverage}</td>\n                        <td>{val.totalHoursTotalAverage}</td>\n                    </tr>\n                )\n            });\n\n        });\n        let MonthlyAllUsersReport = this.state.monthlyAllUsersReport;\n        var noOfDays = [];\n        var noOfActiveHours = [];\n        var noOfTotalHours = [];\n        let monthOptions = [];\n        let yearOptions = [];\n        let monthOption = _.map(this.props.months, (monthData, i) => {\n            monthOptions.push(<option key={i} value={monthData}>{monthData}</option>);\n        });\n        let yearOption = _.map(this.props.year, (data, i) => {\n            return (\n                yearOptions.push(<option key={i} value={data}>{data}</option>)\n            );\n        });\n        return (\n            <div className=\"col-xs-12 employee-life-cycle\">\n                <div className=\"text-center emp-life-cycle\">\n                    <div className=\"row no-gutter box\">\n                        <h4 style={{ fontSize: \"16px\", fontWeight: 'bold' }}>LEAST ACTIVE EMPLOYEES</h4>\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-striped table-hover\">\n                                <thead style={{ textAlign: \"center\" }}>\n                                    <tr>\n                                        <th style={{ textAlign: \"center\" }}>Employee Name</th>\n                                        <th style={{ textAlign: \"center\" }}>Average Active Hours</th>\n                                        <th style={{ textAlign: \"center\" }}>Average Total Hours</th>\n                                    </tr>\n                                </thead>\n                                {this.state.loading ?\n                                    <tbody>\n                                        <tr>\n                                            <td />\n                                            <CircularProgress\n                                                size={30}\n                                                thickness={3}\n                                                style={{ marginTop: \"20px\" }}\n                                            />\n                                            <td />\n                                        </tr>\n                                    </tbody>\n                                    : this.props.monthlyAllUsersReport.data.length === undefined ?\n                                        <tbody>\n                                            <tr>\n                                                <td />\n                                                No Data Found this month\n                                            <td />\n                                            </tr>\n                                        </tbody>\n                                        :\n                                        <tbody>\n                                            {leastaActiveList}\n                                        </tbody>}\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"collapse\">\n\n                </div>\n                <div className=\"container p-t \">\n                    <div className=\"row\">\n                        <div className=\"form-group col-xs-6 profile-input p-a\">\n                            <label htmlFor=\"sel1\">Select Month:</label>\n                            <select className=\"form-control\" id=\"sel1\" defaultValue={this.props.currentMonth}\n                                onChange={(evt) => { this.handleMonth(evt.target.value); }}>\n                                {monthOptions}\n                            </select>\n                        </div>\n                        <div className=\"form-group col-xs-6 profile-input p-a\">\n                            <label htmlFor=\"sel1\">Select Year:</label>\n                            <select className=\"form-control\" id=\"sel12\" defaultValue={this.props.currentYear}\n                                onChange={(evt) => { this.handleYear(evt.target.value); }}>\n                                {yearOptions}\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EmployeeLeastActiveHours;"]},"metadata":{},"sourceType":"module"}