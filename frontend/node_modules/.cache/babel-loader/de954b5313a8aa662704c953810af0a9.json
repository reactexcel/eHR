{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/salary/components/managePayslips/ManagePayslipsUsersList.jsx\";\nimport React from 'react';\nimport * as _ from 'lodash';\nimport $ from 'jquery';\nimport { notify } from '../../../../services/notify';\nimport { getToken } from '../../../../services/generic';\nimport { CONFIG } from '../../../../config/index';\nimport Dialog from 'material-ui/Dialog';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nvar ManagePayslipsUsersList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManagePayslipsUsersList, _React$Component);\n\n  function ManagePayslipsUsersList(props) {\n    var _this;\n\n    _classCallCheck(this, ManagePayslipsUsersList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManagePayslipsUsersList).call(this, props));\n    _this.state = {\n      user_token: '',\n      'email_paylsips_ids': [],\n      'openIframe': false,\n      'checked': [],\n      openTransfer: false\n    };\n    _this._select_payslips_to_email = _this._select_payslips_to_email.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOpenIframe = _this.handleOpenIframe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseIframe = _this.handleCloseIframe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectAll = _this.selectAll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.change = _this.change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTransfer = _this.getTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeTrnsfer = _this.closeTrnsfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.openTrnsfer = _this.openTrnsfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManagePayslipsUsersList, [{\n    key: \"handleOpenIframe\",\n    value: function handleOpenIframe() {\n      this.setState({\n        openIframe: true\n      });\n    }\n  }, {\n    key: \"handleCloseIframe\",\n    value: function handleCloseIframe() {\n      this.setState({\n        openIframe: false\n      });\n    }\n  }, {\n    key: \"_select_payslips_to_email\",\n    value: function _select_payslips_to_email(e) {\n      var existing_email_paylsips_ids = this.state.email_paylsips_ids;\n      var checked_payslip_id = e.target.value;\n      var checked_status = e.target.checked;\n      var new_email_paylsips_ids = existing_email_paylsips_ids;\n\n      if (checked_status == true) {\n        new_email_paylsips_ids.push(checked_payslip_id);\n      } else {\n        _.pull(new_email_paylsips_ids, checked_payslip_id);\n      }\n\n      this.setState({\n        email_paylsips_ids: new_email_paylsips_ids\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        email_paylsips_ids: [],\n        user_token: getToken()\n      });\n    }\n  }, {\n    key: \"selectAll\",\n    value: function selectAll(e) {\n      $('input[name=employee]').prop('checked', e.target.checked);\n      var check = [];\n\n      if (e.target.checked == true) {\n        _.map(this.props.users, function (user) {\n          check.push(user.user_Id);\n        });\n      } else {\n        check = [];\n      }\n\n      this.setState({\n        checked: check\n      });\n    }\n  }, {\n    key: \"change\",\n    value: function change(userid, e) {\n      var check = this.state.checked;\n\n      if (e.target.checked == true) {\n        if (_.includes(check, userid) == false) {\n          check.push(userid);\n        }\n      } else {\n        if (_.includes(check, userid) == true) {\n          _.pull(check, userid);\n        }\n      }\n\n      this.setState({\n        checked: check\n      });\n    }\n  }, {\n    key: \"getTransfer\",\n    value: function getTransfer() {\n      var _this2 = this;\n\n      this.props.onGetTransferList(this.state.checked).then(function (data) {\n        _this2.openTrnsfer();\n      }).catch(function (err) {\n        notify(err.toString());\n      });\n    }\n  }, {\n    key: \"openTrnsfer\",\n    value: function openTrnsfer() {\n      this.setState({\n        openTransfer: true\n      });\n    }\n  }, {\n    key: \"closeTrnsfer\",\n    value: function closeTrnsfer() {\n      this.setState({\n        openTransfer: false\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(e) {\n      var _this3 = this;\n\n      var stop_user = '';\n\n      _.map(this.props.users, function (user, keyval) {\n        if (typeof _this3.props.all_users_latest_payslip !== 'undefined' && _this3.props.all_users_latest_payslip.length > 0) {\n          var findUser = _.find(_this3.props.all_users_latest_payslip, {\n            'user_Id': user.user_Id\n          });\n\n          if (typeof findUser === 'undefined') {\n            if (_.includes(_this3.state.checked, user.user_Id) == true) {\n              stop_user += '\\n' + user.user_Id;\n            }\n          }\n        }\n      });\n\n      if (stop_user !== '') {\n        var res = window.confirm('Payslip not generated for user ID :' + stop_user + '\\n Do you want to submit');\n\n        if (!res) {\n          e.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var styles = _.cloneDeep(this.constructor.styles); // ----account no.\n\n\n      var employee_account_no = this.props.managePayslips.employee_account_no;\n      var Account_list = [];\n\n      _.map(employee_account_no, function (empAcc, key) {\n        Account_list.push(employee_account_no[key] + React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }));\n      }); // ------user list\n\n\n      var usersList = _.map(this.props.users.sort(function (a, b) {\n        return a.id - b.id;\n      }), function (user, keyval) {\n        var userid = user.user_Id;\n        var generatedPayslipIdToEmail = '';\n        var payslipGenerated = 0;\n        var email_to_user_status = 0;\n\n        if (typeof _this4.props.all_users_latest_payslip !== 'undefined' && _this4.props.all_users_latest_payslip.length > 0) {\n          var findUser = _.find(_this4.props.all_users_latest_payslip, {\n            'user_Id': userid\n          });\n\n          if (typeof findUser !== 'undefined') {\n            payslipGenerated = 1;\n\n            if (typeof findUser.status !== 'undefined') {\n              email_to_user_status = findUser.status;\n            }\n\n            if (typeof findUser.id !== 'undefined' && generatedPayslipIdToEmail == '') {\n              generatedPayslipIdToEmail = findUser.id;\n            }\n          }\n        }\n\n        var selectedUserId = _this4.props.selectedUserId;\n\n        var styles = _.cloneDeep(_this4.constructor.styles);\n\n        var key = parseInt(userid);\n        var profileImae = user.slack_profile.image_72;\n        var backgroundClass = styles.cursorPointer;\n\n        if (selectedUserId == userid) {\n          backgroundClass = styles.selectedUser;\n        } // ---\n\n\n        var payslipGeneratedHtmlClass = styles.pendingStatus;\n        var Payslip_Generated_text = 'Payslip Not Generated';\n\n        if (payslipGenerated == 1) {\n          payslipGeneratedHtmlClass = styles.doneStatus;\n          Payslip_Generated_text = 'Payslip Generated';\n        }\n\n        var checkbox_send_email = React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"send_payslip_emails\",\n          value: generatedPayslipIdToEmail,\n          style: {\n            'verticalAlign': 'middle'\n          },\n          onChange: _this4._select_payslips_to_email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        });\n        var email_to_user_statusHtmlClass = styles.pendingStatus;\n\n        if (email_to_user_status == 1) {\n          email_to_user_statusHtmlClass = styles.doneStatus; // checkbox_send_email = \"\"\n        }\n\n        if (payslipGenerated == 0) {\n          // if payslip is not generated then there is no option to send email\n          checkbox_send_email = '';\n        } // ---\n\n\n        return React.createElement(\"li\", {\n          className: \"list-item b-b\",\n          key: keyval,\n          style: backgroundClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-left text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"w-40 avatar\",\n          onClick: function onClick() {\n            return _this4.props.onUserClick(userid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: profileImae,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            return _this4.change(userid, e);\n          },\n          className: \"m-t\",\n          name: \"employee\",\n          value: userid || '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"list-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: function onClick() {\n            return _this4.props.onUserClick(userid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, user.name), React.createElement(\"small\", {\n          className: \"text-muted text-ellipsis\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, user.jobtitle), React.createElement(\"small\", {\n          className: \"text-muted text-ellipsis\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Emp Id : \", userid))), React.createElement(\"div\", {\n          className: \"text-muted\",\n          style: payslipGeneratedHtmlClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, Payslip_Generated_text), React.createElement(\"div\", {\n          className: \"text-muted\",\n          style: email_to_user_statusHtmlClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, checkbox_send_email, \"Email to Employee\")));\n      });\n\n      var googleDriveEmailStatus = React.createElement(\"span\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Google Drive Email - \", this.props.google_drive_emailid);\n\n      if (this.props.google_drive_emailid == '' || this.props.google_drive_emailid == false) {\n        googleDriveEmailStatus = React.createElement(\"span\", {\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Google drive token not found. Plz do login first!!\");\n      } // ---\n\n\n      var list = this.state.checked;\n      var list_item = [];\n\n      _.map(list, function (val, i) {\n        list_item.push(React.createElement(\"input\", {\n          key: i,\n          type: \"hidden\",\n          name: \"user_id[]\",\n          value: val,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }));\n      });\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          'marginTop': 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          'marginBottom': 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, googleDriveEmailStatus)), React.createElement(RaisedButton, {\n        label: \"Google Drive Login\",\n        onClick: this.handleOpenIframe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          'marginTop': 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"md-btn md-raised m-b-sm indigo\",\n        onClick: function onClick() {\n          return _this4.props.callEmailPayslips(_this4.state.email_paylsips_ids);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Email Payslips\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: styles.form,\n        action: CONFIG.transfer_link,\n        method: \"POST\",\n        target: \"_blank\",\n        onSubmit: function onSubmit(e) {\n          return _this4.validate(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, list_item, React.createElement(\"input\", {\n        type: \"hidden\",\n        name: \"token\",\n        value: this.state.user_token,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"md-btn md-raised m-b-sm indigo m-l-sm-xs \",\n        name: \"submit\",\n        value: \"Transfer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        title: \"Google authentication for drive\",\n        modal: false,\n        open: this.state.openIframe,\n        onRequestClose: this.handleCloseIframe,\n        contentStyle: {\n          'width': '80%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        ref: \"myIframe\",\n        src: CONFIG.google_login_btn_page_url,\n        style: {\n          'width': '100%',\n          'height': '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \" \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list no-border p-b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-item b-b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"select_all\",\n        onChange: function onChange(e) {\n          return _this4.selectAll(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), \"Select All Users\"), usersList))), React.createElement(Dialog, {\n        title: \"Employee Account Transfer\",\n        open: this.state.openTransfer,\n        onRequestClose: this.closeTrnsfer,\n        contentStyle: {\n          'width': '50%'\n        },\n        autoScrollBodyContent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        style: styles.headTransfer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Account No. Salary Name\")), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        style: styles.bodyTransfer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, Account_list))));\n    }\n  }]);\n\n  return ManagePayslipsUsersList;\n}(React.Component);\n\nManagePayslipsUsersList.styles = {\n  cursorPointer: {\n    'cursor': 'pointer'\n  },\n  selectedUser: {\n    'background': '#03a9f4',\n    'color': 'white'\n  },\n  pendingStatus: {\n    'background': 'red',\n    'color': 'white',\n    'padding': '2px',\n    'fontSize': '12px'\n  },\n  doneStatus: {\n    'background': 'green',\n    'color': 'white',\n    'padding': '2px',\n    'fontSize': '12px'\n  },\n  headTransfer: {\n    borderBottom: '1px solid gainsboro',\n    overflow: 'hidden',\n    fontWeight: 'bold'\n  },\n  bodyTransfer: {\n    borderBottom: '1px solid gainsboro',\n    overflow: 'hidden'\n  },\n  form: {\n    width: '65%',\n    float: 'right'\n  }\n};\nexport default ManagePayslipsUsersList;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/salary/components/managePayslips/ManagePayslipsUsersList.jsx"],"names":["React","_","$","notify","getToken","CONFIG","Dialog","RaisedButton","ManagePayslipsUsersList","props","state","user_token","openTransfer","_select_payslips_to_email","bind","handleOpenIframe","handleCloseIframe","selectAll","change","getTransfer","closeTrnsfer","openTrnsfer","setState","openIframe","e","existing_email_paylsips_ids","email_paylsips_ids","checked_payslip_id","target","value","checked_status","checked","new_email_paylsips_ids","push","pull","prop","check","map","users","user","user_Id","userid","includes","onGetTransferList","then","data","catch","err","toString","stop_user","keyval","all_users_latest_payslip","length","findUser","find","res","window","confirm","preventDefault","styles","cloneDeep","constructor","employee_account_no","managePayslips","Account_list","empAcc","key","usersList","sort","a","b","id","generatedPayslipIdToEmail","payslipGenerated","email_to_user_status","status","selectedUserId","parseInt","profileImae","slack_profile","image_72","backgroundClass","cursorPointer","selectedUser","payslipGeneratedHtmlClass","pendingStatus","Payslip_Generated_text","doneStatus","checkbox_send_email","email_to_user_statusHtmlClass","onUserClick","name","jobtitle","googleDriveEmailStatus","google_drive_emailid","list","list_item","val","i","callEmailPayslips","form","transfer_link","validate","google_login_btn_page_url","headTransfer","bodyTransfer","Component","borderBottom","overflow","fontWeight","width","float"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as _ from 'lodash';\nimport $ from 'jquery';\nimport {notify} from '../../../../services/notify';\nimport {getToken} from '../../../../services/generic';\nimport {CONFIG} from '../../../../config/index';\nimport Dialog from 'material-ui/Dialog';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nclass ManagePayslipsUsersList extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      user_token:           '',\n      'email_paylsips_ids': [],\n      'openIframe':         false,\n      'checked':            [],\n      openTransfer:         false\n    };\n    this._select_payslips_to_email = this._select_payslips_to_email.bind(this);\n    this.handleOpenIframe = this.handleOpenIframe.bind(this);\n    this.handleCloseIframe = this.handleCloseIframe.bind(this);\n    this.selectAll = this.selectAll.bind(this);\n    this.change = this.change.bind(this);\n    this.getTransfer = this.getTransfer.bind(this);\n    this.closeTrnsfer = this.closeTrnsfer.bind(this);\n    this.openTrnsfer = this.openTrnsfer.bind(this);\n  }\n  handleOpenIframe () {\n    this.setState({openIframe: true});\n  }\n\n  handleCloseIframe () {\n    this.setState({openIframe: false});\n  }\n\n  _select_payslips_to_email (e) {\n    let existing_email_paylsips_ids = this.state.email_paylsips_ids;\n    let checked_payslip_id = e.target.value;\n    let checked_status = e.target.checked;\n\n    let new_email_paylsips_ids = existing_email_paylsips_ids;\n\n    if (checked_status == true) {\n      new_email_paylsips_ids.push(checked_payslip_id);\n    } else {\n      _.pull(new_email_paylsips_ids, checked_payslip_id);\n    }\n    this.setState({email_paylsips_ids: new_email_paylsips_ids});\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({email_paylsips_ids: [], user_token: getToken()});\n  }\n  selectAll (e) {\n    $('input[name=employee]').prop('checked', e.target.checked);\n    let check = [];\n    if (e.target.checked == true) {\n      _.map(this.props.users, (user) => {\n        check.push(user.user_Id);\n      });\n    } else {\n      check = [];\n    }\n    this.setState({checked: check});\n  }\n  change (userid, e) {\n    let check = this.state.checked;\n    if (e.target.checked == true) {\n      if (_.includes(check, userid) == false) {\n        check.push(userid);\n      }\n    } else {\n      if (_.includes(check, userid) == true) {\n        _.pull(check, userid);\n      }\n    }\n    this.setState({checked: check});\n  }\n  getTransfer () {\n    this.props.onGetTransferList(this.state.checked).then((data) => {\n      this.openTrnsfer();\n    }).catch((err) => {\n      notify(err.toString());\n    });\n  }\n  openTrnsfer () {\n    this.setState({openTransfer: true});\n  }\n\n  closeTrnsfer () {\n    this.setState({openTransfer: false});\n  }\n  validate (e) {\n    let stop_user = '';\n    _.map(this.props.users, (user, keyval) => {\n      if (typeof this.props.all_users_latest_payslip !== 'undefined' && this.props.all_users_latest_payslip.length > 0) {\n        let findUser = _.find(this.props.all_users_latest_payslip, {'user_Id': user.user_Id});\n        if (typeof findUser === 'undefined') {\n          if (_.includes(this.state.checked, user.user_Id) == true) {\n            stop_user += '\\n' + user.user_Id;\n          }\n        }\n      }\n    });\n\n    if (stop_user !== '') {\n      let res = window.confirm('Payslip not generated for user ID :' + stop_user + '\\n Do you want to submit');\n      if (!res) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  render () {\n    let styles = _.cloneDeep(this.constructor.styles);\n\n    // ----account no.\n\n    let employee_account_no = this.props.managePayslips.employee_account_no;\n\n    let Account_list = [];\n    _.map(employee_account_no, (empAcc, key) => {\n      Account_list.push(employee_account_no[key] + <br />);\n    });\n\n// ------user list\n\n    let usersList = _.map(this.props.users.sort(function (a, b) {\n          return a.id - b.id;\n        }), (user, keyval) => {\n      let userid = user.user_Id;\n\n      let generatedPayslipIdToEmail = '';\n\n      let payslipGenerated = 0;\n      let email_to_user_status = 0;\n      if (typeof this.props.all_users_latest_payslip !== 'undefined' && this.props.all_users_latest_payslip.length > 0) {\n        let findUser = _.find(this.props.all_users_latest_payslip, {'user_Id': userid});\n        if (typeof findUser !== 'undefined') {\n          payslipGenerated = 1;\n          if (typeof findUser.status !== 'undefined') {\n            email_to_user_status = findUser.status;\n          }\n\n          if (typeof findUser.id !== 'undefined' && generatedPayslipIdToEmail == '') {\n            generatedPayslipIdToEmail = findUser.id;\n          }\n        }\n      }\n\n      let selectedUserId = this.props.selectedUserId;\n      let styles = _.cloneDeep(this.constructor.styles);\n      let key = parseInt(userid);\n      let profileImae = user.slack_profile.image_72;\n      let backgroundClass = styles.cursorPointer;\n      if (selectedUserId == userid) {\n        backgroundClass = styles.selectedUser;\n      }\n\n      // ---\n      let payslipGeneratedHtmlClass = styles.pendingStatus;\n      let Payslip_Generated_text = 'Payslip Not Generated';\n      if (payslipGenerated == 1) {\n        payslipGeneratedHtmlClass = styles.doneStatus;\n        Payslip_Generated_text = 'Payslip Generated';\n      }\n\n      let checkbox_send_email = <input type=\"checkbox\" name=\"send_payslip_emails\" value={generatedPayslipIdToEmail} style={{\n        'verticalAlign': 'middle'\n      }} onChange={this._select_payslips_to_email} />;\n      let email_to_user_statusHtmlClass = styles.pendingStatus;\n      if (email_to_user_status == 1) {\n        email_to_user_statusHtmlClass = styles.doneStatus;\n        // checkbox_send_email = \"\"\n      }\n      if (payslipGenerated == 0) {\n        // if payslip is not generated then there is no option to send email\n        checkbox_send_email = '';\n      }\n      // ---\n\n      return (\n        <li className=\"list-item b-b\" key={keyval} style={backgroundClass}>\n          <div className=\"list-left text-center\">\n            <span className=\"w-40 avatar\" onClick={() => this.props.onUserClick(userid)}>\n              <img src={profileImae} />\n            </span>\n            <br />\n            <input type=\"checkbox\" onChange={(e) => this.change(userid, e)} className=\"m-t\" name=\"employee\" value={userid || ''} />\n          </div>\n          <div className=\"list-body\">\n            <div onClick={() => this.props.onUserClick(userid)}>\n              <div>{user.name}</div>\n              <small className=\"text-muted text-ellipsis\">{user.jobtitle}</small>\n              <small className=\"text-muted text-ellipsis\">\n                <b>Emp Id : {userid}</b>\n              </small>\n            </div>\n\n            <div className=\"text-muted\" style={payslipGeneratedHtmlClass}>{Payslip_Generated_text}</div>\n            <div className=\"text-muted\" style={email_to_user_statusHtmlClass}>{checkbox_send_email}Email to Employee</div>\n\n          </div>\n        </li>\n      );\n    });\n\n    let googleDriveEmailStatus = <span className=\"text-info\">Google Drive Email - {this.props.google_drive_emailid}</span>;\n    if (this.props.google_drive_emailid == '' || this.props.google_drive_emailid == false) {\n      googleDriveEmailStatus = <span className=\"text-danger\">Google drive token not found. Plz do login first!!</span>;\n    }\n    // ---\n    let list = this.state.checked;\n    let list_item = [];\n    _.map(list, (val, i) => {\n      list_item.push(<input key={i} type=\"hidden\" name=\"user_id[]\" value={val} />);\n    });\n    return (\n      <div className=\"row\">\n        <div className=\"col-12\">\n\n          <div className=\"row\" style={{\n            'marginTop': 12\n          }}>\n            <div className=\"col-lg-12 col-md-12\">\n              <div style={{\n                'marginBottom': 5\n              }}>\n                <b>{googleDriveEmailStatus}</b>\n              </div>\n              <RaisedButton label=\"Google Drive Login\" onClick={this.handleOpenIframe} />\n            </div>\n          </div>\n\n          <div className=\"row\" style={{\n            'marginTop': 8\n          }}>\n            <div className=\"col-lg-6 col-md-6\">\n              <button className=\"md-btn md-raised m-b-sm indigo\" onClick={() => (this.props.callEmailPayslips(this.state.email_paylsips_ids))}>Email Payslips</button>\n            </div>\n            <div className=\"col-lg-6 col-md-6\">\n              <form style={styles.form} action={CONFIG.transfer_link} method=\"POST\" target='_blank' onSubmit={(e) => this.validate(e)}>\n                {list_item}\n                <input type=\"hidden\" name=\"token\" value={this.state.user_token} />\n                <input type='submit' className=\"md-btn md-raised m-b-sm indigo m-l-sm-xs \" name=\"submit\" value=\"Transfer\" />\n              </form>\n            </div>\n          </div>\n\n          <br />\n          <Dialog title=\"Google authentication for drive\" modal={false} open={this.state.openIframe} onRequestClose={this.handleCloseIframe} contentStyle={{\n            'width': '80%'}}>\n            <iframe ref=\"myIframe\" src={CONFIG.google_login_btn_page_url} style={{\n              'width':  '100%',\n              'height': '300px'\n            }}> </iframe>\n          </Dialog>\n          <br />\n\n          <div className=\"box\">\n            <ul className=\"list no-border p-b\">\n              <li className=\"list-item b-b\">\n                <input type=\"checkbox\" name=\"select_all\" onChange={(e) => this.selectAll(e)} />\n                Select All Users\n              </li>\n              {usersList}\n            </ul>\n          </div>\n        </div>\n        <Dialog title=\"Employee Account Transfer\" open={this.state.openTransfer} onRequestClose={this.closeTrnsfer} contentStyle={{\n          'width': '50%'\n        }} autoScrollBodyContent>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\" style={styles.headTransfer}>\n              <div className=\"col-md-12\">Account No.&#09;Salary&#09;Name</div>\n            </li>\n            <li className=\"list-group-item\" style={styles.bodyTransfer}>\n              {Account_list}\n            </li>\n          </ul>\n\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nManagePayslipsUsersList.styles = {\n  cursorPointer: {\n    'cursor': 'pointer'\n  },\n  selectedUser: {\n    'background': '#03a9f4',\n    'color':      'white'\n  },\n  pendingStatus: {\n    'background': 'red',\n    'color':      'white',\n    'padding':    '2px',\n    'fontSize':   '12px'\n  },\n  doneStatus: {\n    'background': 'green',\n    'color':      'white',\n    'padding':    '2px',\n    'fontSize':   '12px'\n  },\n  headTransfer: {\n    borderBottom: '1px solid gainsboro',\n    overflow:     'hidden',\n    fontWeight:   'bold'\n  },\n  bodyTransfer: {\n    borderBottom: '1px solid gainsboro',\n    overflow:     'hidden'\n  },\n  form: {\n    width: '65%',\n    float: 'right'\n  }\n};\n\nexport default ManagePayslipsUsersList;\n"]},"metadata":{},"sourceType":"module"}