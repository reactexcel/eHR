{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/inventory/components/AddDeviceStatus.jsx\";\nimport React from 'react';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport { GithubPicker } from 'react-color';\nimport { notify, confirm } from '../../../services/notify';\nimport { CONFIG } from '../../../config/index';\nimport style from '../../../styles/inventory/viewUser.scss';\n\nvar AddDeviceStatus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddDeviceStatus, _React$Component);\n\n  function AddDeviceStatus(props) {\n    var _this;\n\n    _classCallCheck(this, AddDeviceStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddDeviceStatus).call(this, props));\n    _this.state = {\n      background: '',\n      colorPicker: 'hide',\n      statusType: '',\n      checkValue: '',\n      status_message: ''\n    };\n    _this.addMoreStatus = _this.addMoreStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeComplete = _this.handleChangeComplete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleStatusClose = _this.handleStatusClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddDeviceStatus, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        statusList: props.deviceStatusList,\n        open: props.open\n      });\n    }\n  }, {\n    key: \"addMoreStatus\",\n    value: function addMoreStatus(event) {\n      event.preventDefault();\n      var statusValue = this.state.statusType.trim();\n      var colorValue = this.state.background;\n\n      if (colorValue && statusValue !== '') {\n        this.props.callAddStatus(statusValue, colorValue);\n        this.setState({\n          statusType: '',\n          background: ''\n        });\n      } else {\n        notify('Warning !', 'First Fill Status Type & Color', 'warning');\n      }\n    }\n  }, {\n    key: \"handleChangeComplete\",\n    value: function handleChangeComplete(color) {\n      this.setState({\n        background: color.hex\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete() {\n      this.props.callDeleteDeviceStatus(this.state.checkValue);\n    }\n  }, {\n    key: \"handleStatusClose\",\n    value: function handleStatusClose() {\n      this.setState({\n        openStatus: false,\n        statusType: '',\n        background: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var actions = [React.createElement(FlatButton, {\n        label: \"Delete\",\n        secondary: true,\n        onClick: function onClick() {\n          if (_this2.state.checkValue !== '') {\n            confirm('Are you sure ?', 'Do you want to delete this Device Status ?', 'warning').then(function (res) {\n              if (res) {\n                _this2.handleDelete();\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(FlatButton, {\n        label: \"Cancel\",\n        primary: true,\n        onClick: this.props.handleStatusClose,\n        style: {\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(RaisedButton, {\n        label: \"Submit\",\n        primary: true,\n        onClick: this.addMoreStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"md-btn md-raised m-b-sm indigo addStatus\",\n        onClick: this.props.handleStatusOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Add Status Type\"), React.createElement(Dialog, {\n        title: 'ADD STATUS TYPE',\n        titleStyle: {\n          opacity: '0.56'\n        },\n        actions: actions,\n        modal: false,\n        open: this.props.open,\n        onRequestClose: this.handleStatusClose,\n        autoScrollBodyContent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-5\",\n        style: {\n          overflowY: 'auto',\n          maxHeight: '250px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Status Type List\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.manageDevice.statusList.map(function (val, i) {\n        var col = _this2.props.deviceStatusList.filter(function (data) {\n          return data.status === val.status;\n        });\n\n        var statusColor;\n\n        if (col.length > 0) {\n          statusColor = col[0].color;\n        }\n\n        return React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"first\",\n          value: val.status,\n          onChange: function onChange(e) {\n            _this2.setState({\n              checkValue: e.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), val.status, React.createElement(\"span\", {\n          style: {\n            background: statusColor,\n            marginLeft: '5%',\n            width: '45px',\n            height: '15px',\n            color: statusColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\\xA0\"));\n      })), React.createElement(\"vr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-7\",\n        style: {\n          marginTop: '5%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        ref: \"value\",\n        floatingLabelText: 'Status Type',\n        onBlur: function onBlur(e) {\n          _this2.setState({\n            statusType: _this2.state.statusType.trim(),\n            colorPicker: 'hide'\n          });\n        },\n        onChange: function onChange(e) {\n          _this2.setState({\n            colorPicker: 'show',\n            statusType: e.target.value\n          });\n        },\n        value: this.state.statusType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), this.state.statusType ? React.createElement(\"div\", {\n        className: \"col-sm-12 well\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Add Color\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(GithubPicker, {\n        color: this.state.background,\n        onChangeComplete: this.handleChangeComplete,\n        triangle: 'top-left',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Selected Color\"), React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.state.background,\n          height: '41px'\n        },\n        value: this.state.background,\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))))) : null))));\n    }\n  }]);\n\n  return AddDeviceStatus;\n}(React.Component);\n\nexport { AddDeviceStatus as default };","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/inventory/components/AddDeviceStatus.jsx"],"names":["React","Dialog","FlatButton","RaisedButton","TextField","GithubPicker","notify","confirm","CONFIG","style","AddDeviceStatus","props","state","background","colorPicker","statusType","checkValue","status_message","addMoreStatus","bind","handleDelete","handleChangeComplete","handleStatusClose","setState","statusList","deviceStatusList","open","event","preventDefault","statusValue","trim","colorValue","callAddStatus","color","hex","callDeleteDeviceStatus","openStatus","actions","then","res","marginRight","handleStatusOpen","opacity","overflowY","maxHeight","manageDevice","map","val","i","col","filter","data","status","statusColor","length","e","target","value","marginLeft","width","height","marginTop","backgroundColor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport {GithubPicker} from 'react-color';\nimport {notify, confirm} from '../../../services/notify';\nimport {CONFIG} from '../../../config/index';\nimport style from '../../../styles/inventory/viewUser.scss'\n\nexport default class AddDeviceStatus extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      background:     '',\n      colorPicker:    'hide',\n      statusType:     '',\n      checkValue:     '',\n      status_message: ''\n    };\n    this.addMoreStatus = this.addMoreStatus.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeComplete = this.handleChangeComplete.bind(this);\n    this.handleStatusClose = this.handleStatusClose.bind(this);\n  }\n  componentWillReceiveProps (props) {\n    this.setState({\n      statusList: props.deviceStatusList,\n      open:       props.open\n    });\n  }\n\n  addMoreStatus (event) {\n    event.preventDefault();\n    let statusValue = this.state.statusType.trim();\n    let colorValue = this.state.background;\n    if (colorValue && statusValue !== '') {\n      this.props.callAddStatus(statusValue, colorValue);\n      this.setState({\n        statusType: '',\n        background: ''\n      });\n    } else {\n      notify('Warning !', 'First Fill Status Type & Color', 'warning');\n    }\n  }\n\n  handleChangeComplete (color) {\n    this.setState({background: color.hex});\n  }\n\n  handleDelete () {\n    this.props.callDeleteDeviceStatus(this.state.checkValue);\n  }\n\n  handleStatusClose () {\n    this.setState({\n      openStatus: false,\n      statusType: '',\n      background: ''\n    });\n  }\n\n  render () {\n    const actions = [\n      <FlatButton\n        label=\"Delete\"\n        secondary\n        onClick={() => {\n          if (this.state.checkValue !== '') {\n            confirm('Are you sure ?', 'Do you want to delete this Device Status ?', 'warning').then((res) => {\n              if (res) {\n                this.handleDelete();\n              }\n            });\n          }\n        }} />,\n      <FlatButton\n        label=\"Cancel\"\n        primary\n        onClick={this.props.handleStatusClose}\n        style={{marginRight: 5}}\n    />,\n      <RaisedButton\n        label=\"Submit\"\n        primary\n        onClick={this.addMoreStatus}\n    />\n    ];\n    return (\n      <div>\n        <button className=\"md-btn md-raised m-b-sm indigo addStatus\"  onClick={this.props.handleStatusOpen}>Add Status Type</button>\n        <Dialog\n          title={'ADD STATUS TYPE'}\n          titleStyle={{opacity: '0.56'}}\n          actions={actions}\n          modal={false}\n          open={this.props.open}\n          onRequestClose={this.handleStatusClose}\n          autoScrollBodyContent >\n\n          <div className=\"row m-0\">\n            <div className='col-sm-5' style={{overflowY: 'auto', maxHeight: '250px'}}>\n              <label>Status Type List</label>\n              <ol>\n                {this.props.manageDevice.statusList.map((val, i) => {\n                  let col = this.props.deviceStatusList.filter(data => data.status === val.status);\n                  let statusColor;\n                  if (col.length > 0) {\n                    statusColor = col[0].color;\n                  }\n                  return <li key={i}>\n                    <input\n                      type='radio'\n                      name=\"first\"\n                      value={val.status}\n                      onChange={(e) => { this.setState({checkValue: e.target.value}); }}\n                    />\n                    {val.status}\n                    <span style={{\n                      background: statusColor,\n                      marginLeft: '5%',\n                      width:      '45px',\n                      height:     '15px',\n                      color:      statusColor\n                    }}>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  </li>;\n                })}\n              </ol>\n              <vr />\n            </div>\n            <div className='col-sm-7' style={{marginTop: '5%'}}>\n              <div>\n                <TextField\n                  fullWidth\n                  ref='value'\n                  floatingLabelText={'Status Type'}\n                  onBlur={(e) => { this.setState({statusType: this.state.statusType.trim(), colorPicker: 'hide'}); }}\n                  onChange={(e) => { this.setState({colorPicker: 'show', statusType: e.target.value}); }}\n                  value={this.state.statusType}\n                />\n              </div>\n                {this.state.statusType\n                  ? <div className='col-sm-12 well'>\n                    <label>Add Color</label>\n                    <div className='row'>\n                      <div className='col-sm-6 '>\n                        <GithubPicker color={this.state.background}\n                          onChangeComplete={this.handleChangeComplete}\n                          triangle={'top-left'} />\n                      </div>\n                      <div className=\"col-sm-6\">\n                        <div className=\"panel panel-default\">\n                          <div className=\"panel-heading\">Selected Color</div>\n                          <div style={{backgroundColor: this.state.background, height: '41px'}}\n                            value={this.state.background} className=\"panel-body\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  : null\n                  }\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}