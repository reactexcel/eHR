{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getUserDaySummary),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateUserDaySummary),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(empUpdateDaySummary);\n\nimport { fireAjax } from '../../../services/index';\nimport { call, put } from 'redux-saga/effects';\nimport * as actions from '../../../redux/actions';\nimport { notify } from '../../../services/notify';\nvar ExpessUrl = 'http://144.76.34.244:3017/attendance/update_time_by_employee';\nexport function getUserDaySummary(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function getUserDaySummary$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fireAjax, 'POST', '', {\n            'action': 'user_day_summary',\n            'userid': action.payload.userid,\n            'date': action.payload.date\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.error === 0)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 7;\n          return put(actions.successUserDaySummary(response.data));\n\n        case 7:\n          _context.next = 11;\n          break;\n\n        case 9:\n          _context.next = 11;\n          return put(actions.errorUserDaySummary(response.message));\n\n        case 11:\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put(actions.errorUserDaySummary('Error Occurs !!'));\n\n        case 17:\n          console.warn('Some error found in \"user_day_summary\" action\\n', _context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n}\nexport function updateUserDaySummary(action) {\n  var _action$payload, userid, date, entryTime, exitTime, reason, year, month, _response;\n\n  return _regeneratorRuntime.wrap(function updateUserDaySummary$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _action$payload = action.payload, userid = _action$payload.userid, date = _action$payload.date, entryTime = _action$payload.entryTime, exitTime = _action$payload.exitTime, reason = _action$payload.reason, year = _action$payload.year, month = _action$payload.month;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(fireAjax, 'POST', '', {\n            'action': 'update_user_day_summary',\n            'userid': userid,\n            'date': date,\n            'entry_time': entryTime,\n            'exit_time': exitTime,\n            'reason': reason\n          });\n\n        case 4:\n          _response = _context2.sent;\n\n          if (!(_response.error === 0)) {\n            _context2.next = 14;\n            break;\n          }\n\n          _context2.next = 8;\n          return put(actions.successUpdateUserDaySummary(_response.data));\n\n        case 8:\n          _context2.next = 10;\n          return put(actions.requestUserDaySummary({\n            userid: userid,\n            date: date\n          }));\n\n        case 10:\n          _context2.next = 12;\n          return put(actions.requestUserAttendance({\n            userid: userid,\n            year: year,\n            month: month\n          }));\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.next = 16;\n          return put(actions.errorUpdateUserDaySummary(_response.data.message));\n\n        case 16:\n          _context2.next = 18;\n          return put(actions.requestUserDaySummary({\n            userid: userid,\n            date: date\n          }));\n\n        case 18:\n          _context2.next = 27;\n          break;\n\n        case 20:\n          _context2.prev = 20;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 24;\n          return put(actions.errorUpdateUserDaySummary('Error Occurs !!'));\n\n        case 24:\n          _context2.next = 26;\n          return put(actions.requestUserDaySummary({\n            userid: userid,\n            date: date\n          }));\n\n        case 26:\n          console.warn('Some error found in \"update_user_day_summary\" action\\n', _context2.t0);\n\n        case 27:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 20]]);\n}\nexport function empUpdateDaySummary(action) {\n  var _action$payload2, userid, date, entryTime, exitTime, reason, year, month, _response2;\n\n  return _regeneratorRuntime.wrap(function empUpdateDaySummary$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _action$payload2 = action.payload, userid = _action$payload2.userid, date = _action$payload2.date, entryTime = _action$payload2.entryTime, exitTime = _action$payload2.exitTime, reason = _action$payload2.reason, year = _action$payload2.year, month = _action$payload2.month;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(fireAjax, 'POST', '', {\n            'action': 'add_manual_attendance',\n            'userid': parseInt(userid),\n            'date': date,\n            'entry_time': entryTime,\n            'exit_time': exitTime,\n            'reason': reason\n          });\n\n        case 4:\n          _response2 = _context3.sent;\n\n          if (!(_response2.error === 0)) {\n            _context3.next = 15;\n            break;\n          }\n\n          _context3.next = 8;\n          return put(actions.successUpdateEmpDaySummary(_response2.success));\n\n        case 8:\n          _context3.next = 10;\n          return put(actions.requestUserDaySummary({\n            userid: userid,\n            date: date\n          }));\n\n        case 10:\n          _context3.next = 12;\n          return put(actions.requestUserAttendance({\n            userid: userid,\n            year: year,\n            month: month\n          }));\n\n        case 12:\n          notify(\"success\", \"Your In/Out time and reason are sent to the Admin for approval\", \"success\");\n          _context3.next = 19;\n          break;\n\n        case 15:\n          _context3.next = 17;\n          return put(actions.errorUpdateEmpDaySummary(_response2.data.message));\n\n        case 17:\n          _context3.next = 19;\n          return put(actions.requestUserDaySummary({\n            userid: userid,\n            date: date\n          }));\n\n        case 19:\n          _context3.next = 28;\n          break;\n\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 25;\n          return put(actions.errorUpdateEmpDaySummary('Error Occurs !!'));\n\n        case 25:\n          _context3.next = 27;\n          return put(actions.requestUserDaySummary({\n            userid: userid,\n            date: date\n          }));\n\n        case 27:\n          console.warn('Some error found in \"add_manual_attendance\" action\\n', _context3.t0);\n\n        case 28:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 21]]);\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/attendance/actions/userDaySummary.js"],"names":["getUserDaySummary","updateUserDaySummary","empUpdateDaySummary","fireAjax","call","put","actions","notify","ExpessUrl","action","payload","userid","date","response","error","successUserDaySummary","data","errorUserDaySummary","message","console","warn","entryTime","exitTime","reason","year","month","successUpdateUserDaySummary","requestUserDaySummary","requestUserAttendance","errorUpdateUserDaySummary","parseInt","successUpdateEmpDaySummary","success","errorUpdateEmpDaySummary"],"mappings":"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","sourcesContent":["import {fireAjax} from '../../../services/index';\nimport {call, put} from 'redux-saga/effects';\nimport * as actions from '../../../redux/actions';\nimport {notify} from '../../../services/notify';\nconst ExpessUrl = 'http://144.76.34.244:3017/attendance/update_time_by_employee';\n\nexport function* getUserDaySummary (action) {\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action': 'user_day_summary',\n      'userid': action.payload.userid,\n      'date':   action.payload.date\n    });\n    if (response.error === 0) {\n      yield put(actions.successUserDaySummary(response.data));\n    } else {\n      yield put(actions.errorUserDaySummary(response.message));\n    }\n  } catch (e) {\n    yield put(actions.errorUserDaySummary('Error Occurs !!'));\n    console.warn('Some error found in \"user_day_summary\" action\\n', e);\n  }\n}\n\nexport function* updateUserDaySummary (action) {\n  let {userid, date, entryTime, exitTime, reason, year, month} = action.payload;\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':     'update_user_day_summary',\n      'userid':     userid,\n      'date':       date,\n      'entry_time': entryTime,\n      'exit_time':  exitTime,\n      'reason':     reason\n    });\n    if (response.error === 0) {\n      yield put(actions.successUpdateUserDaySummary(response.data));\n      yield put(actions.requestUserDaySummary({userid, date}));\n      yield put(actions.requestUserAttendance({userid, year, month}));\n    } else {\n      yield put(actions.errorUpdateUserDaySummary(response.data.message));\n      yield put(actions.requestUserDaySummary({userid, date}));\n    }\n  } catch (e) {\n    yield put(actions.errorUpdateUserDaySummary('Error Occurs !!'));\n    yield put(actions.requestUserDaySummary({userid, date}));\n    console.warn('Some error found in \"update_user_day_summary\" action\\n', e);\n  }\n}\n\nexport function* empUpdateDaySummary (action) {\n  const {userid, date, entryTime, exitTime, reason, year, month} = action.payload;\n  try {\n    const response = yield call(fireAjax, 'POST', '', {\n      'action':     'add_manual_attendance',\n      'userid':     parseInt(userid),\n      'date':       date,\n      'entry_time': entryTime,\n      'exit_time':  exitTime,\n      'reason':     reason\n    });\n    if (response.error === 0) {\n      yield put(actions.successUpdateEmpDaySummary(response.success));\n      yield put(actions.requestUserDaySummary({userid, date}));\n      yield put(actions.requestUserAttendance({userid, year, month}));\n      notify(\n      \"success\",\n      \"Your In/Out time and reason are sent to the Admin for approval\",\n      \"success\"\n    );\n    } else {\n      yield put(actions.errorUpdateEmpDaySummary(response.data.message));\n      yield put(actions.requestUserDaySummary({userid, date}));\n    }\n  } catch (e) {\n    yield put(actions.errorUpdateEmpDaySummary('Error Occurs !!'));\n    yield put(actions.requestUserDaySummary({userid, date}));\n    console.warn('Some error found in \"add_manual_attendance\" action\\n', e);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}