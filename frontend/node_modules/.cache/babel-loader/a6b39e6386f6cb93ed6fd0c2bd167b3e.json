{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/containers/manageUsers.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport * as _ from 'lodash';\nimport ToggleButton from 'react-toggle-button';\nimport PropTypes from 'prop-types';\nimport { notify } from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport { isNotUserValid } from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport ButtonRaised from '../../../components/generic/buttons/ButtonRaised';\nimport UsersList from '../../../components/generic/UsersList';\nimport UsersListHeader from '../../../components/generic/UsersListHeader';\nimport UpdateEmployeeDocument from '../../../modules/manageUsers/components/UpdateEmployeeDocument';\nimport Button from '../../../components/generic/buttons/Button';\nimport AlertNotification from '../../../components/generic/AlertNotification';\nimport DisplayUserBankDetails from '../../../components/manageUser/DisplayUserBankDetails';\nimport DisplayUserDeviceDetails from '../../../components/manageUser/DisplayUserDeviceDetails';\nimport UserPayslipsHistory from '../../../components/salary/managePayslips/UserPayslipsHistory';\nimport FormAddNewEmployee from '../../../modules/manageUsers/components/FormAddNewEmployee';\nimport AddSalaryForm from '../../../modules/salary/components/manageSalary/AddSalaryForm';\nimport FormAddNewEmployeeDetails from '../../../modules/manageUsers/components/FormAddNewEmployeeDetails';\nimport FormUserProfileDetails from '../../../modules/manageUsers/components/FormUserProfileDetails';\nimport EmployeeLifeCycle from '../../../modules/manageUsers/components/EmployeeLifeCycle';\nimport * as actions from '../../../redux/actions';\nimport * as actionsUsersList from '../../../redux/generic/actions/usersList';\nimport * as actionsManageUsers from '../../../redux/manageUsers/actions/manageUsers';\nimport * as actionsManagePayslips from '../../../redux/salary/actions/managePayslips';\nimport * as actions_manageSalary from '../../../redux/salary/actions/manageSalary';\nimport { RaisedButton } from 'material-ui';\nimport Dialog from 'material-ui/Dialog';\n\nvar ManageUsers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManageUsers, _React$Component);\n\n  function ManageUsers(props) {\n    var _this;\n\n    _classCallCheck(this, ManageUsers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManageUsers).call(this, props));\n\n    _this.props.onIsAlreadyLogin();\n\n    _this.state = {\n      status_message: '',\n      'defaultUserDisplay': '',\n      user_profile_detail: {},\n      user_bank_detail: [],\n      user_assign_machine: [],\n      user_documents: {},\n      user_payslip_history: [],\n      employee_life_cycle: {},\n      'openIframe': false,\n      username: '',\n      open: false\n    };\n    _this.onUserClick = _this.onUserClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callUpdateUserBankDetails = _this.callUpdateUserBankDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callUpdateUserDeviceDetails = _this.callUpdateUserDeviceDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callUpdateUserProfileDetails = _this.callUpdateUserProfileDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOpenIframe = _this.handleOpenIframe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseIframe = _this.handleCloseIframe.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeEmployeeStatus = _this.changeEmployeeStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeSteps = _this.handleChangeSteps.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callAddUserSalary = _this.callAddUserSalary.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManageUsers, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onUsersList();\n      this.props.onFetchTeams();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var location = props.location,\n          loggedUser = props.loggedUser,\n          user_payslip_history = props.managePayslips.user_payslip_history,\n          _props$manageUsers = props.manageUsers,\n          username = _props$manageUsers.username,\n          user_profile_detail = _props$manageUsers.user_profile_detail,\n          user_bank_detail = _props$manageUsers.user_bank_detail,\n          user_assign_machine = _props$manageUsers.user_assign_machine,\n          user_documents = _props$manageUsers.user_documents,\n          stages = _props$manageUsers.stages;\n      var isNotValid = isNotUserValid(location.pathname, loggedUser);\n\n      if (isNotValid.status) {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n\n      this.setState({\n        user_payslip_history: user_payslip_history,\n        username: username,\n        user_profile_detail: user_profile_detail,\n        user_bank_detail: user_bank_detail,\n        user_assign_machine: user_assign_machine,\n        user_documents: user_documents\n      });\n\n      if (this.state.employee_life_cycle_stages !== stages) {\n        this.setState({\n          employee_life_cycle: stages.employee_life_cycle\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.defaultUserDisplay === '') {\n        if (this.props.usersList.users.length > 0) {\n          var firstUser = this.props.usersList.users[0];\n          var defaultUserId = firstUser.user_Id;\n          var defaultUserName = firstUser.username;\n          this.onUserClick(defaultUserId, defaultUserName);\n        }\n      }\n    }\n  }, {\n    key: \"handleFormAddNewEmployee\",\n    value: function handleFormAddNewEmployee() {\n      this.props.history.push(\"/add_new_employee\");\n    }\n  }, {\n    key: \"onUserClick\",\n    value: function onUserClick(userid, username) {\n      var selectedUserName = '';\n      var selectedUserImage = '';\n      var selectedUserJobtitle = '';\n      var selectedUserId = '';\n\n      if (this.props.usersList.users.length > 0) {\n        var userDetails = _.find(this.props.usersList.users, {\n          'user_Id': userid\n        });\n\n        if (typeof userDetails !== 'undefined') {\n          selectedUserName = userDetails.name;\n          selectedUserImage = userDetails.slack_profile.image_192;\n          selectedUserJobtitle = userDetails.jobtitle;\n          selectedUserId = userDetails.user_Id;\n        }\n      }\n\n      this.setState({\n        'defaultUserDisplay': userid,\n        'selected_user_name': selectedUserName,\n        'selected_user_image': selectedUserImage,\n        'selected_user_jobtitle': selectedUserJobtitle,\n        'selected_user_id': selectedUserId\n      });\n      this.props.onUserProfileDetails(userid, username);\n      this.props.onGetUserDocument(userid);\n      this.props.onUserManagePayslipsData(userid);\n      this.props.onGetStages(userid);\n    }\n  }, {\n    key: \"callUpdateUserBankDetails\",\n    value: function callUpdateUserBankDetails(newBankDetails) {\n      this.props.onUpdateUserBankDetails(newBankDetails).then(function (data) {}, function (error) {\n        notify(error);\n      });\n    }\n  }, {\n    key: \"callUpdateUserDeviceDetails\",\n    value: function callUpdateUserDeviceDetails(newDeviceDetails) {\n      this.props.onUpdateUserDeviceDetails(newDeviceDetails).then(function (data) {}, function (error) {\n        notify(error);\n      });\n    }\n  }, {\n    key: \"callUpdateUserProfileDetails\",\n    value: function callUpdateUserProfileDetails(newProfileDetails) {\n      var _this2 = this;\n\n      // this.setState({initiateProfileUpdate: false}); \n      this.props.onUpdateUserProfileDetails(newProfileDetails).then(function (data) {}, function (error) {\n        if (error.message === 'You have to add salary first.') {\n          _this2.setState({\n            open: true\n          });\n        } else {\n          notify(error);\n        }\n      });\n    }\n  }, {\n    key: \"changeEmployeeStatus\",\n    value: function changeEmployeeStatus(userid, status) {\n      var _this3 = this;\n\n      this.props.onChangeEmployeeStatus(userid, status).then(function (msg) {\n        notify('Success!', msg, 'success');\n\n        _this3.props.onUsersList().then(function () {\n          if (_this3.props.usersList.users.length > 0) {\n            var firstUser = _this3.props.usersList.users[0];\n            var defaultUserId = firstUser.user_Id;\n\n            _this3.onUserClick(defaultUserId);\n          }\n        });\n      }).catch(function (err) {\n        notify('Error!', err, 'error');\n      });\n    }\n  }, {\n    key: \"handleChangeSteps\",\n    value: function handleChangeSteps(stepid, userid) {\n      var employee_life_cycle = this.state.employee_life_cycle;\n\n      _.map(employee_life_cycle, function (stage, key) {\n        _.map(stage.steps, function (step, k) {\n          if (step.id === stepid) {\n            step.status = !step.status;\n          }\n        });\n      });\n\n      this.setState({\n        employee_life_cycle: employee_life_cycle\n      });\n      this.props.onHandleChangeSteps(userid, stepid);\n    }\n  }, {\n    key: \"handleOpenIframe\",\n    value: function handleOpenIframe() {\n      this.setState({\n        openIframe: true\n      });\n    }\n  }, {\n    key: \"handleCloseIframe\",\n    value: function handleCloseIframe() {\n      this.setState({\n        openIframe: false\n      });\n    }\n  }, {\n    key: \"callAddUserSalary\",\n    value: function callAddUserSalary(new_salary_details) {\n      var _this4 = this;\n\n      new_salary_details.first_update = true;\n      this.props.onAddNewSalary(new_salary_details).then(function (data) {\n        _this4.setState({\n          open: false // initiateProfileUpdate: true\n\n        });\n      }, function (error) {\n        notify(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        title: \"Add Salary\",\n        modal: false,\n        open: this.state.open,\n        onRequestClose: function onRequestClose() {\n          return _this5.setState({\n            open: false\n          });\n        },\n        contentClassName: \"dialog-class\",\n        autoScrollBodyContent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content-salary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(AddSalaryForm, Object.assign({}, this.props, {\n        userid: this.state.selected_user_id,\n        callAddUserSalary: this.callAddUserSalary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })))), React.createElement(AlertNotification, {\n        message: this.props.manageUsers.status_message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: 'Manage Employees Profile',\n        showLoading: this.props.frontend.show_loading,\n        userListHeader: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(UsersListHeader, {\n        users: this.props.usersList.users,\n        selectedUserId: this.state.selected_user_id,\n        onUserClick: this.onUserClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2 col-sm-3\",\n        id: \"fixedScroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(UsersList, Object.assign({\n        users: this.props.usersList.users,\n        selectedUserId: this.state.selected_user_id,\n        onUserClick: this.onUserClick,\n        top: 5\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-10 col-sm-9 col-xs-12 p\",\n        id: \"manage-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row emp-action-btn p-b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-new-emp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(ButtonRaised, {\n        className: \"col-xs-12 m-b-sm indigo\",\n        onClick: function onClick() {\n          return _this5.handleFormAddNewEmployee();\n        },\n        label: 'Add Employee',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"disable-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-fw btn-danger responsive-p-x-sm\",\n        label: 'Disable Selected User',\n        onClick: function onClick() {\n          return _this5.changeEmployeeStatus(_this5.state.selected_user_id, 'Disabled');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"slack-notification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-bell-slash fa-lg\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), \" Slack Notifications\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(ToggleButton, {\n        value: this.state.user_profile_detail.slack_msg === '0' || false,\n        onToggle: function onToggle() {\n          var user = _this5.refs.userForm.state;\n          if (user.slack_msg === '0') user.slack_msg = '1';else if (user.slack_msg === '1') user.slack_msg = '0';\n\n          _this5.callUpdateUserProfileDetails(user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(EmployeeLifeCycle, {\n        employee_life_cycle: this.state.employee_life_cycle,\n        handleChangeSteps: function handleChangeSteps(stepid) {\n          return _this5.handleChangeSteps(stepid, _this5.state.selected_user_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-7 p-t p-b p-r p-l b-r\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(FormUserProfileDetails, Object.assign({\n        ref: \"userForm\",\n        user_profile_detail: this.state.user_profile_detail,\n        callUpdateUserProfileDetails: this.callUpdateUserProfileDetails // initiateProfileUpdate={this.state.initiateProfileUpdate}\n        ,\n        username: this.state.username\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-5 p-t p-b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-12 profile-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(DisplayUserBankDetails, {\n        userBankDetails: this.state.user_bank_detail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-12 profile-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(DisplayUserDeviceDetails, {\n        userAssignMachine: this.state.user_assign_machine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-12 profile-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(UpdateEmployeeDocument, Object.assign({\n        user_documents: this.state.user_documents,\n        user_id: this.state.selected_user_id,\n        onUpdatedocuments: this.props.onUpdatedocuments\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-xs-6 col-md-12 profile-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Previous Payslips\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(UserPayslipsHistory, {\n        user_payslip_history: this.state.user_payslip_history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return ManageUsers;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    managePayslips: state.managePayslips.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    usersList: state.usersList.toJS(),\n    manageUsers: state.manageUsers.toJS(),\n    teamList: state.teamList.teamList\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: function onUsersList() {\n      return dispatch(actionsUsersList.get_users_list());\n    },\n    onUserProfileDetails: function onUserProfileDetails(userid, username) {\n      return dispatch(actionsManageUsers.getUserProfileDetails(userid, username));\n    },\n    onUpdateUserBankDetails: function onUpdateUserBankDetails(newBankDetails) {// return dispatch(actionsManageUsers.updateUserBankDetails(newBankDetails));\n    },\n    onUpdateUserProfileDetails: function onUpdateUserProfileDetails(newProfileDetails) {\n      return dispatch(actionsManageUsers.updateUserProfileDetails(newProfileDetails));\n    },\n    onUpdateUserDeviceDetails: function onUpdateUserDeviceDetails(newDeviceDetails) {// return dispatch(actionsManageUsers.updateUserDeviceDetails(newDeviceDetails));\n    },\n    onUpdatedocuments: function onUpdatedocuments(documentLink) {// return dispatch(actionsManageUsers.updateDocument(documentLink));\n    },\n    onChangeEmployeeStatus: function onChangeEmployeeStatus(userid, status) {\n      return dispatch(actionsManageUsers.changeEmployeeStatus(userid, status));\n    },\n    onGetUserDocument: function onGetUserDocument(userid) {\n      return dispatch(actionsManageUsers.getUserDocument(userid));\n    },\n    onDeleteDocument: function onDeleteDocument(docId) {\n      return dispatch(actionsManageUsers.deleteDocument(docId));\n    },\n    onUserManagePayslipsData: function onUserManagePayslipsData(userid) {\n      return dispatch(actionsManagePayslips.get_user_manage_payslips_data(userid));\n    },\n    onFetchTeams: function onFetchTeams() {\n      return dispatch(actions.requestTeamList());\n    },\n    onGetStages: function onGetStages(id) {\n      return dispatch(actionsManageUsers.getSteps(id));\n    },\n    onHandleChangeSteps: function onHandleChangeSteps(userid, stepid) {\n      return dispatch(actionsManageUsers.changeSteps(userid, stepid));\n    },\n    onAddNewSalary: function onAddNewSalary(new_salary_data) {\n      return dispatch(actions_manageSalary.add_user_new_salary(new_salary_data));\n    }\n  };\n};\n\nvar VisibleManageUsers = connect(mapStateToProps, mapDispatchToProps)(ManageUsers);\nvar RouterVisibleManageUsers = withRouter(VisibleManageUsers);\nexport default RouterVisibleManageUsers;\nManageUsers.propTypes = {\n  onIsAlreadyLogin: PropTypes.func.isRequired,\n  onFetchTeam: PropTypes.func.isRequired,\n  onUserProfileDetails: PropTypes.func.isRequired,\n  onGetUserDocument: PropTypes.func.isRequired,\n  onUserManagePayslipsData: PropTypes.func.isRequired,\n  onUpdateUserBankDetails: PropTypes.func.isRequired,\n  onUpdateUserDeviceDetails: PropTypes.func.isRequired,\n  onUpdateUserProfileDetails: PropTypes.func.isRequired,\n  onChangeEmployeeStatus: PropTypes.func.isRequired,\n  onUsersList: PropTypes.func.isRequired,\n  onUpdatedocuments: PropTypes.func.isRequired,\n  usersList: PropTypes.object.isRequired,\n  manageUsers: PropTypes.object.isRequired,\n  router: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/containers/manageUsers.jsx"],"names":["React","connect","withRouter","_","ToggleButton","PropTypes","notify","Menu","isNotUserValid","Header","ButtonRaised","UsersList","UsersListHeader","UpdateEmployeeDocument","Button","AlertNotification","DisplayUserBankDetails","DisplayUserDeviceDetails","UserPayslipsHistory","FormAddNewEmployee","AddSalaryForm","FormAddNewEmployeeDetails","FormUserProfileDetails","EmployeeLifeCycle","actions","actionsUsersList","actionsManageUsers","actionsManagePayslips","actions_manageSalary","RaisedButton","Dialog","ManageUsers","props","onIsAlreadyLogin","state","status_message","user_profile_detail","user_bank_detail","user_assign_machine","user_documents","user_payslip_history","employee_life_cycle","username","open","onUserClick","bind","callUpdateUserBankDetails","callUpdateUserDeviceDetails","callUpdateUserProfileDetails","handleOpenIframe","handleCloseIframe","changeEmployeeStatus","handleChangeSteps","callAddUserSalary","onUsersList","onFetchTeams","location","loggedUser","managePayslips","manageUsers","stages","isNotValid","pathname","status","history","push","redirectTo","setState","employee_life_cycle_stages","defaultUserDisplay","usersList","users","length","firstUser","defaultUserId","user_Id","defaultUserName","userid","selectedUserName","selectedUserImage","selectedUserJobtitle","selectedUserId","userDetails","find","name","slack_profile","image_192","jobtitle","onUserProfileDetails","onGetUserDocument","onUserManagePayslipsData","onGetStages","newBankDetails","onUpdateUserBankDetails","then","data","error","newDeviceDetails","onUpdateUserDeviceDetails","newProfileDetails","onUpdateUserProfileDetails","message","onChangeEmployeeStatus","msg","catch","err","stepid","map","stage","key","steps","step","k","id","onHandleChangeSteps","openIframe","new_salary_details","first_update","onAddNewSalary","selected_user_id","frontend","show_loading","handleFormAddNewEmployee","slack_msg","user","refs","userForm","onUpdatedocuments","Component","mapStateToProps","toJS","logged_user","userLogin","teamList","mapDispatchToProps","dispatch","isAlreadyLogin","get_users_list","getUserProfileDetails","updateUserProfileDetails","documentLink","getUserDocument","onDeleteDocument","docId","deleteDocument","get_user_manage_payslips_data","requestTeamList","getSteps","changeSteps","new_salary_data","add_user_new_salary","VisibleManageUsers","RouterVisibleManageUsers","propTypes","func","isRequired","onFetchTeam","object","router"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport * as _ from 'lodash';\nimport ToggleButton from 'react-toggle-button';\nimport PropTypes from 'prop-types';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport ButtonRaised from '../../../components/generic/buttons/ButtonRaised';\nimport UsersList from '../../../components/generic/UsersList';\nimport UsersListHeader from '../../../components/generic/UsersListHeader';\nimport UpdateEmployeeDocument from '../../../modules/manageUsers/components/UpdateEmployeeDocument';\nimport Button from '../../../components/generic/buttons/Button';\nimport AlertNotification from '../../../components/generic/AlertNotification';\nimport DisplayUserBankDetails from '../../../components/manageUser/DisplayUserBankDetails';\nimport DisplayUserDeviceDetails from '../../../components/manageUser/DisplayUserDeviceDetails';\nimport UserPayslipsHistory from '../../../components/salary/managePayslips/UserPayslipsHistory';\nimport FormAddNewEmployee from '../../../modules/manageUsers/components/FormAddNewEmployee';\nimport AddSalaryForm from '../../../modules/salary/components/manageSalary/AddSalaryForm';\nimport FormAddNewEmployeeDetails from '../../../modules/manageUsers/components/FormAddNewEmployeeDetails';\nimport FormUserProfileDetails from '../../../modules/manageUsers/components/FormUserProfileDetails';\nimport EmployeeLifeCycle from '../../../modules/manageUsers/components/EmployeeLifeCycle';\nimport * as actions from '../../../redux/actions';\nimport * as actionsUsersList from '../../../redux/generic/actions/usersList';\nimport * as actionsManageUsers from '../../../redux/manageUsers/actions/manageUsers';\nimport * as actionsManagePayslips from '../../../redux/salary/actions/managePayslips';\nimport * as actions_manageSalary from '../../../redux/salary/actions/manageSalary';\nimport { RaisedButton } from 'material-ui';\nimport Dialog from 'material-ui/Dialog';\n\nclass ManageUsers extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      status_message:       '',\n      'defaultUserDisplay': '',\n      user_profile_detail:  {},\n      user_bank_detail:     [],\n      user_assign_machine:  [],\n      user_documents:       {},\n      user_payslip_history: [],\n      employee_life_cycle:  {},\n      'openIframe':         false,\n      username:             '',\n      open:                 false\n    };\n    this.onUserClick = this.onUserClick.bind(this);\n    this.callUpdateUserBankDetails = this.callUpdateUserBankDetails.bind(this);\n    this.callUpdateUserDeviceDetails = this.callUpdateUserDeviceDetails.bind(this);\n    this.callUpdateUserProfileDetails = this.callUpdateUserProfileDetails.bind(this);\n    this.handleOpenIframe = this.handleOpenIframe.bind(this);\n    this.handleCloseIframe = this.handleCloseIframe.bind(this);\n    this.changeEmployeeStatus = this.changeEmployeeStatus.bind(this);\n    this.handleChangeSteps = this.handleChangeSteps.bind(this);\n    this.callAddUserSalary = this.callAddUserSalary.bind(this);\n  }\n  componentWillMount () {\n    this.props.onUsersList();\n    this.props.onFetchTeams();\n  }\n  componentWillReceiveProps (props) {\n    let {location, loggedUser, managePayslips:{user_payslip_history}, manageUsers:{username, user_profile_detail, user_bank_detail, user_assign_machine, user_documents, stages}} = props;\n    let isNotValid = isNotUserValid(location.pathname, loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    this.setState({\n      user_payslip_history: user_payslip_history,\n      username:             username,\n      user_profile_detail:  user_profile_detail,\n      user_bank_detail:     user_bank_detail,\n      user_assign_machine:  user_assign_machine,\n      user_documents:       user_documents\n    });\n    if (this.state.employee_life_cycle_stages !== stages) {\n      this.setState({\n        employee_life_cycle: stages.employee_life_cycle\n      });\n    }\n  }\n  componentDidUpdate () {\n    if (this.state.defaultUserDisplay === '') {\n      if (this.props.usersList.users.length > 0) {\n        let firstUser = this.props.usersList.users[0];\n        let defaultUserId = firstUser.user_Id;\n        let defaultUserName = firstUser.username;\n        this.onUserClick(defaultUserId, defaultUserName);\n      }\n    }\n  }\n  handleFormAddNewEmployee(){\n    this.props.history.push(\"/add_new_employee\")\n  }\n  onUserClick (userid, username) {\n    let selectedUserName = '';\n    let selectedUserImage = '';\n    let selectedUserJobtitle = '';\n    let selectedUserId = '';\n    if (this.props.usersList.users.length > 0) {\n      let userDetails = _.find(this.props.usersList.users, {'user_Id': userid});\n      if (typeof userDetails !== 'undefined') {\n        selectedUserName = userDetails.name;\n        selectedUserImage = userDetails.slack_profile.image_192;\n        selectedUserJobtitle = userDetails.jobtitle;\n        selectedUserId = userDetails.user_Id;\n      }\n    }\n    this.setState({\n      'defaultUserDisplay':     userid,\n      'selected_user_name':     selectedUserName,\n      'selected_user_image':    selectedUserImage,\n      'selected_user_jobtitle': selectedUserJobtitle,\n      'selected_user_id':       selectedUserId\n    });\n    this.props.onUserProfileDetails(userid, username);\n    this.props.onGetUserDocument(userid);\n    this.props.onUserManagePayslipsData(userid);\n    this.props.onGetStages(userid);\n  }\n  callUpdateUserBankDetails (newBankDetails) {\n    this.props.onUpdateUserBankDetails(newBankDetails).then((data) => {}, (error) => {\n      notify(error);\n    });\n  }\n  callUpdateUserDeviceDetails (newDeviceDetails) {\n    this.props.onUpdateUserDeviceDetails(newDeviceDetails).then((data) => {}, (error) => {\n      notify(error);\n    });\n  }\n  callUpdateUserProfileDetails (newProfileDetails) {  \n    // this.setState({initiateProfileUpdate: false}); \n    this.props.onUpdateUserProfileDetails(newProfileDetails).then((data) => {}, (error) => {\n      if(error.message === 'You have to add salary first.'){\n        this.setState({\n          open:true\n        })\n      } else {\n        notify(error);\n      }\n    });\n  }\n \n  changeEmployeeStatus (userid, status) {\n    this.props.onChangeEmployeeStatus(userid, status).then((msg) => {\n      notify('Success!', msg, 'success');\n      this.props.onUsersList().then(() => {\n        if (this.props.usersList.users.length > 0) {\n          let firstUser = this.props.usersList.users[0];\n          let defaultUserId = firstUser.user_Id;\n          this.onUserClick(defaultUserId);\n        }\n      });\n    }).catch((err) => {\n      notify('Error!', err, 'error');\n    });\n  }\n  handleChangeSteps (stepid, userid) {\n    let {employee_life_cycle} = this.state;\n    _.map(employee_life_cycle, (stage, key) => {\n      _.map(stage.steps, (step, k) => {\n        if (step.id === stepid) {\n          step.status = !step.status;\n        }\n      });\n    });\n    this.setState({\n      employee_life_cycle\n    });\n    this.props.onHandleChangeSteps(userid, stepid);\n  }\n  \n  handleOpenIframe () {\n    this.setState({openIframe: true});\n  }\n  handleCloseIframe () {\n    this.setState({openIframe: false});\n  }\n  callAddUserSalary (new_salary_details) {\n    new_salary_details.first_update = true;\n    this.props.onAddNewSalary(new_salary_details).then((data) => {\n      this.setState({\n        open:false,\n        // initiateProfileUpdate: true\n      })\n    }, (error) => {\n      notify(error);\n    });\n  }\n  render () {        \n    return (\n      <div>\n        <Dialog title=\"Add Salary\"\n          modal={false}\n          open={this.state.open}\n          onRequestClose={()=>this.setState({open:false})}\n          contentClassName=\"dialog-class\"\n          autoScrollBodyContent>\n          <div  className=\"content-salary\">\n            <AddSalaryForm {...this.props} userid={this.state.selected_user_id} callAddUserSalary={this.callAddUserSalary} />\n          </div>\n        </Dialog>\n        <AlertNotification message={this.props.manageUsers.status_message} />\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Manage Employees Profile'} showLoading={this.props.frontend.show_loading} userListHeader />\n          <UsersListHeader users={this.props.usersList.users} selectedUserId={this.state.selected_user_id} onUserClick={this.onUserClick} />\n          <div className=\"app-body\" id=\"view\">\n             <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-2 col-sm-3\" id=\"fixedScroll\">\n                  <UsersList\n                    users={this.props.usersList.users}\n                    selectedUserId={this.state.selected_user_id}\n                    onUserClick={this.onUserClick}\n                    top={5} {...this.props}\n                  />\n                </div>\n                <div className=\"col-md-10 col-sm-9 col-xs-12 p\" id=\"manage-user\">\n                  <div className=\"row emp-action-btn p-b\">\n                    <div className=\"add-new-emp\">\n                      <ButtonRaised className=\"col-xs-12 m-b-sm indigo\"\n                        onClick={() => this.handleFormAddNewEmployee()}\n                        label={'Add Employee'} />\n                    </div>\n                    <div className=\"disable-user\">\n                      <Button className=\"btn-fw btn-danger responsive-p-x-sm\" label={'Disable Selected User'} onClick={() => this.changeEmployeeStatus(this.state.selected_user_id, 'Disabled')} />\n                    </div>\n                    <div className=\"slack-notification\">\n                      <div className=\"btn-wrapper\">\n                        <label>\n                          <i className=\"fa fa-bell-slash fa-lg\" aria-hidden=\"true\"></i> Slack Notifications\n                        </label>\n                        <span>\n                          <ToggleButton\n                            value={this.state.user_profile_detail.slack_msg === '0' || false}\n                            onToggle={() => {\n                              let user = this.refs.userForm.state;\n                              if (user.slack_msg === '0') user.slack_msg = '1';\n                              else if (user.slack_msg === '1') user.slack_msg = '0';\n                              this.callUpdateUserProfileDetails(user);\n                            }}\n                          />\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row box\">\n                    <EmployeeLifeCycle employee_life_cycle={this.state.employee_life_cycle} handleChangeSteps={(stepid) => this.handleChangeSteps(stepid, this.state.selected_user_id)} />\n                  </div>\n                  <div className=\"row box\">\n                    <div className=\"col-md-7 p-t p-b p-r p-l b-r\">\n                      <FormUserProfileDetails\n                        ref=\"userForm\"\n                        user_profile_detail={this.state.user_profile_detail}\n                        callUpdateUserProfileDetails={this.callUpdateUserProfileDetails}\n                        // initiateProfileUpdate={this.state.initiateProfileUpdate}\n                        username={this.state.username} {...this.props}\n                      />\n                    </div>\n                    <div className=\"col-md-5 p-t p-b\">\n                      <div className=\"col-xs-6 col-md-12 profile-input\">\n                        <DisplayUserBankDetails userBankDetails={this.state.user_bank_detail} />\n                      </div>\n                      <div className=\"col-xs-6 col-md-12 profile-input\">\n                        <DisplayUserDeviceDetails userAssignMachine={this.state.user_assign_machine} />\n                      </div>\n                      <div className=\"col-xs-6 col-md-12 profile-input\">\n                        <UpdateEmployeeDocument\n                          user_documents={this.state.user_documents}\n                          user_id={this.state.selected_user_id}\n                          onUpdatedocuments={this.props.onUpdatedocuments} {...this.props}\n                        />\n                      </div>\n                      <div className=\"col-xs-6 col-md-12 profile-input\">\n                        <h6 className=\"text-center\">\n                          <u>Previous Payslips</u>\n                        </h6>\n                        <hr />\n                        <UserPayslipsHistory user_payslip_history={this.state.user_payslip_history} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:       state.frontend.toJS(),\n    managePayslips: state.managePayslips.toJS(),\n    loggedUser:     state.logged_user.userLogin,\n    usersList:      state.usersList.toJS(),\n    manageUsers:    state.manageUsers.toJS(),\n    teamList:       state.teamList.teamList\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: () => {\n      return dispatch(actionsUsersList.get_users_list());\n    },\n    onUserProfileDetails: (userid, username) => {\n      return dispatch(actionsManageUsers.getUserProfileDetails(userid, username));\n    },\n    onUpdateUserBankDetails: (newBankDetails) => {\n      // return dispatch(actionsManageUsers.updateUserBankDetails(newBankDetails));\n    },\n    onUpdateUserProfileDetails: (newProfileDetails) => {\n      return dispatch(actionsManageUsers.updateUserProfileDetails(newProfileDetails));\n    },\n    onUpdateUserDeviceDetails: (newDeviceDetails) => {\n      // return dispatch(actionsManageUsers.updateUserDeviceDetails(newDeviceDetails));\n    },\n    onUpdatedocuments: (documentLink) => {\n      // return dispatch(actionsManageUsers.updateDocument(documentLink));\n    },\n    onChangeEmployeeStatus: (userid, status) => {\n      return dispatch(actionsManageUsers.changeEmployeeStatus(userid, status));\n    },\n    onGetUserDocument: (userid) => {\n      return dispatch(actionsManageUsers.getUserDocument(userid));\n    },\n    onDeleteDocument: (docId) => {\n      return dispatch(actionsManageUsers.deleteDocument(docId));\n    },\n    onUserManagePayslipsData: (userid) => {\n      return dispatch(actionsManagePayslips.get_user_manage_payslips_data(userid));\n    },\n    onFetchTeams: () => {\n      return dispatch(actions.requestTeamList());\n    },\n    onGetStages: (id) => {\n      return dispatch(actionsManageUsers.getSteps(id));\n    },\n    onHandleChangeSteps: (userid, stepid) => {\n      return dispatch(actionsManageUsers.changeSteps(userid, stepid));\n    },\n    onAddNewSalary: (new_salary_data) => {\n      return dispatch(actions_manageSalary.add_user_new_salary(new_salary_data));\n    },\n  };\n};\n\nconst VisibleManageUsers = connect(mapStateToProps, mapDispatchToProps)(ManageUsers);\nconst RouterVisibleManageUsers = withRouter(VisibleManageUsers);\n\nexport default RouterVisibleManageUsers;\n\nManageUsers.propTypes = {\n  onIsAlreadyLogin:           PropTypes.func.isRequired,\n  onFetchTeam:                PropTypes.func.isRequired,\n  onUserProfileDetails:       PropTypes.func.isRequired,\n  onGetUserDocument:          PropTypes.func.isRequired,\n  onUserManagePayslipsData:   PropTypes.func.isRequired,\n  onUpdateUserBankDetails:    PropTypes.func.isRequired,\n  onUpdateUserDeviceDetails:  PropTypes.func.isRequired,\n  onUpdateUserProfileDetails: PropTypes.func.isRequired,\n  onChangeEmployeeStatus:     PropTypes.func.isRequired,\n  onUsersList:                PropTypes.func.isRequired,\n  onUpdatedocuments:          PropTypes.func.isRequired,\n  usersList:                  PropTypes.object.isRequired,\n  manageUsers:                PropTypes.object.isRequired,\n  router:                     PropTypes.object.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}