{"ast":null,"code":"import _defineProperty from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nimport { handleActions } from 'redux-actions';\nimport * as constants from '../../../redux/constants';\nimport update from 'immutability-helper';\nimport '../../../redux/update';\nvar initialState = {\n  teamList: {\n    data: {},\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: ''\n  },\n  addTeam: {\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: ''\n  },\n  team: {\n    data: {},\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: ''\n  }\n};\n\nvar requestTeamList = function requestTeamList(state, action) {\n  return update(state, {\n    teamList: {\n      $setRequestLoading: null\n    }\n  });\n};\n\nvar successTeamList = function successTeamList(state, action) {\n  return update(state, {\n    teamList: {\n      $setRequestSuccess: action.payload\n    }\n  });\n};\n\nvar errorTeamList = function errorTeamList(state, action) {\n  return update(state, {\n    teamList: {\n      $setRequestError: action.payload\n    }\n  });\n};\n\nvar requestAddTeam = function requestAddTeam(state, action) {\n  return update(state, {\n    addTeam: {\n      $setRequestLoading: null\n    }\n  });\n};\n\nvar successAddTeam = function successAddTeam(state, action) {\n  return update(state, {\n    addTeam: {\n      isLoading: {\n        $set: false\n      },\n      isError: {\n        $set: false\n      },\n      isSuccess: {\n        $set: true\n      },\n      message: {\n        $set: action.payload\n      }\n    }\n  });\n};\n\nvar errorAddTeam = function errorAddTeam(state, action) {\n  return update(state, {\n    addTeam: {\n      $setRequestError: action.payload\n    }\n  });\n};\n\nvar requestGetTeam = function requestGetTeam(state, action) {\n  return update(state, {\n    team: {\n      $setRequestLoading: null\n    }\n  });\n};\n\nvar successGetTeam = function successGetTeam(state, action) {\n  return update(state, {\n    team: {\n      $setRequestSuccess: action.payload\n    }\n  });\n};\n\nvar errorGetTeam = function errorGetTeam(state, action) {\n  return update(state, {\n    team: {\n      $setRequestError: action.payload\n    }\n  });\n};\n\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, constants.REQUEST_TEAM_LIST, requestTeamList), _defineProperty(_handleActions, constants.SUCCESS_TEAM_LIST, successTeamList), _defineProperty(_handleActions, constants.ERROR_TEAM_LIST, errorTeamList), _defineProperty(_handleActions, constants.REQUEST_ADD_TEAM, requestAddTeam), _defineProperty(_handleActions, constants.SUCCESS_ADD_TEAM, successAddTeam), _defineProperty(_handleActions, constants.ERROR_ADD_TEAM, errorAddTeam), _defineProperty(_handleActions, constants.REQUEST_GET_TEAM, requestGetTeam), _defineProperty(_handleActions, constants.SUCCESS_GET_TEAM, successGetTeam), _defineProperty(_handleActions, constants.ERROR_GET_TEAM, errorGetTeam), _handleActions), initialState);","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/team/reducers/teamList.js"],"names":["handleActions","constants","update","initialState","teamList","data","isLoading","isError","isSuccess","message","addTeam","team","requestTeamList","state","action","$setRequestLoading","successTeamList","$setRequestSuccess","payload","errorTeamList","$setRequestError","requestAddTeam","successAddTeam","$set","errorAddTeam","requestGetTeam","successGetTeam","errorGetTeam","REQUEST_TEAM_LIST","SUCCESS_TEAM_LIST","ERROR_TEAM_LIST","REQUEST_ADD_TEAM","SUCCESS_ADD_TEAM","ERROR_ADD_TEAM","REQUEST_GET_TEAM","SUCCESS_GET_TEAM","ERROR_GET_TEAM"],"mappings":"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","sourcesContent":["import {handleActions} from 'redux-actions';\nimport * as constants from '../../../redux/constants';\nimport update from 'immutability-helper';\nimport '../../../redux/update';\n\nlet initialState = {\n  teamList: {\n    data:      {},\n    isLoading: false,\n    isError:   false,\n    isSuccess: false,\n    message:   ''\n  },\n  addTeam: {\n    isLoading: false,\n    isError:   false,\n    isSuccess: false,\n    message:   ''\n  },\n  team: {\n    data:      {},\n    isLoading: false,\n    isError:   false,\n    isSuccess: false,\n    message:   ''\n  }\n};\n\nconst requestTeamList = (state, action) => update(state, {\n  teamList: {$setRequestLoading: null}\n});\n\nconst successTeamList = (state, action) => update(state, {\n  teamList: {$setRequestSuccess: action.payload}\n});\n\nconst errorTeamList = (state, action) => update(state, {\n  teamList: {$setRequestError: action.payload}\n});\n\nconst requestAddTeam = (state, action) => update(state, {\n  addTeam: {$setRequestLoading: null}\n});\n\nconst successAddTeam = (state, action) => update(state, {\n  addTeam: {\n    isLoading: {$set: false},\n    isError:   {$set: false},\n    isSuccess: {$set: true},\n    message:   {$set: action.payload}\n  }\n});\n\nconst errorAddTeam = (state, action) => update(state, {\n  addTeam: {$setRequestError: action.payload}\n});\n\nconst requestGetTeam = (state, action) => update(state, {\n  team: {$setRequestLoading: null}\n});\n\nconst successGetTeam = (state, action) => update(state, {\n  team: {$setRequestSuccess: action.payload}\n});\n\nconst errorGetTeam = (state, action) => update(state, {\n  team: {$setRequestError: action.payload}\n});\n\nexport default handleActions({\n  [constants.REQUEST_TEAM_LIST]: requestTeamList,\n  [constants.SUCCESS_TEAM_LIST]: successTeamList,\n  [constants.ERROR_TEAM_LIST]:   errorTeamList,\n  [constants.REQUEST_ADD_TEAM]:  requestAddTeam,\n  [constants.SUCCESS_ADD_TEAM]:  successAddTeam,\n  [constants.ERROR_ADD_TEAM]:    errorAddTeam,\n  [constants.REQUEST_GET_TEAM]:  requestGetTeam,\n  [constants.SUCCESS_GET_TEAM]:  successGetTeam,\n  [constants.ERROR_GET_TEAM]:    errorGetTeam\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}