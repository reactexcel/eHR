{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/attendance/containers/uploadAttendance.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport { CONFIG } from '../../../config/index';\nimport { isNotUserValid } from '../../../services/generic';\nimport AlertNotification from '../../../components/generic/AlertNotification';\nimport Header from '../../../components/generic/Header';\nimport AttendanceSheatForm from '../../../modules/attendance/components/uploadAttendance/AttendanceSheatForm';\nimport * as actions from '../../../redux/actions';\nimport * as actionsUsersList from '../../../redux/generic/actions/usersList';\nimport * as actionsManageUsers from '../../../redux/manageUsers/actions/manageUsers';\nimport * as actionsManagePayslips from '../../../redux/salary/actions/managePayslips';\n\nvar UploadAttendance =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadAttendance, _React$Component);\n\n  function UploadAttendance(props) {\n    var _this;\n\n    _classCallCheck(this, UploadAttendance);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadAttendance).call(this, props));\n\n    _this.props.onIsAlreadyLogin();\n\n    _this.state = {};\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UploadAttendance, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onUsersList();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      window.scrollTo(0, 0);\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status) {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      window.open(CONFIG.upload_attendance_url);\n    }\n  }, {\n    key: \"handleOpenIframe\",\n    value: function handleOpenIframe() {\n      this.setState({\n        openIframe: true\n      });\n    }\n  }, {\n    key: \"handleCloseIframe\",\n    value: function handleCloseIframe() {\n      this.setState({\n        openIframe: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(AlertNotification, {\n        message: this.props.manageUsers.status_message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: 'UPLOAD ATTENDANCE SHEET',\n        showLoading: this.props.frontend.show_loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-10 p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        name: \"submit\",\n        value: \"CLICK TO UPLOAD ATTENDANCE\",\n        className: \"col-xs-4 md-btn md-raised indigo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return UploadAttendance;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    managePayslips: state.managePayslips.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    usersList: state.usersList.toJS(),\n    manageUsers: state.manageUsers.toJS()\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: function onUsersList() {\n      return dispatch(actionsUsersList.get_users_list());\n    },\n    onUserProfileDetails: function onUserProfileDetails(userid, username) {\n      return dispatch(actionsManageUsers.getUserProfileDetails(userid, username));\n    },\n    onUpdateUserBankDetails: function onUpdateUserBankDetails(newBankDetails) {// return dispatch(actionsManageUsers.updateUserBankDetails(newBankDetails));\n    },\n    onUpdateUserProfileDetails: function onUpdateUserProfileDetails(newProfileDetails) {\n      return dispatch(actionsManageUsers.updateUserProfileDetails(newProfileDetails));\n    },\n    onAddNewEmployee: function onAddNewEmployee(newEmployeeDetails) {\n      return dispatch(actionsManageUsers.addNewEmployee(newEmployeeDetails));\n    },\n    onUpdatedocuments: function onUpdatedocuments(documentLink) {// return dispatch(actionsManageUsers.updateDocument(documentLink));\n    },\n    onChangeEmployeeStatus: function onChangeEmployeeStatus(userid, status) {\n      return dispatch(actionsManageUsers.changeEmployeeStatus(userid, status));\n    },\n    onGetUserDocument: function onGetUserDocument(userid) {\n      return dispatch(actionsManageUsers.getUserDocument(userid));\n    },\n    onDeleteDocument: function onDeleteDocument(docId) {\n      return dispatch(actionsManageUsers.deleteDocument(docId));\n    },\n    onUserManagePayslipsData: function onUserManagePayslipsData(userid) {\n      return dispatch(actionsManagePayslips.get_user_manage_payslips_data(userid));\n    }\n  };\n};\n\nvar VisibleUploadAttendance = connect(mapStateToProps, mapDispatchToProps)(UploadAttendance);\nvar RouterVisibleUploadAttendance = withRouter(VisibleUploadAttendance);\nexport default RouterVisibleUploadAttendance;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/attendance/containers/uploadAttendance.jsx"],"names":["React","connect","withRouter","Menu","CONFIG","isNotUserValid","AlertNotification","Header","AttendanceSheatForm","actions","actionsUsersList","actionsManageUsers","actionsManagePayslips","UploadAttendance","props","onIsAlreadyLogin","state","handleSubmit","bind","onUsersList","window","scrollTo","isNotValid","location","pathname","loggedUser","status","history","push","redirectTo","open","upload_attendance_url","setState","openIframe","manageUsers","status_message","frontend","show_loading","Component","mapStateToProps","toJS","managePayslips","logged_user","userLogin","usersList","mapDispatchToProps","dispatch","isAlreadyLogin","get_users_list","onUserProfileDetails","userid","username","getUserProfileDetails","onUpdateUserBankDetails","newBankDetails","onUpdateUserProfileDetails","newProfileDetails","updateUserProfileDetails","onAddNewEmployee","newEmployeeDetails","addNewEmployee","onUpdatedocuments","documentLink","onChangeEmployeeStatus","changeEmployeeStatus","onGetUserDocument","getUserDocument","onDeleteDocument","docId","deleteDocument","onUserManagePayslipsData","get_user_manage_payslips_data","VisibleUploadAttendance","RouterVisibleUploadAttendance"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport {CONFIG} from '../../../config/index';\nimport {isNotUserValid} from '../../../services/generic';\nimport AlertNotification from '../../../components/generic/AlertNotification';\nimport Header from '../../../components/generic/Header';\nimport AttendanceSheatForm from '../../../modules/attendance/components/uploadAttendance/AttendanceSheatForm';\nimport * as actions from '../../../redux/actions';\nimport * as actionsUsersList from '../../../redux/generic/actions/usersList';\nimport * as actionsManageUsers from '../../../redux/manageUsers/actions/manageUsers';\nimport * as actionsManagePayslips from '../../../redux/salary/actions/managePayslips';\n\nclass UploadAttendance extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentWillMount () {\n    this.props.onUsersList();\n  }\n  componentWillReceiveProps (props) {\n    window.scrollTo(0, 0);\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n  }\n  handleSubmit() {\n    window.open(CONFIG.upload_attendance_url)\n  }\n  handleOpenIframe () {\n    this.setState({openIframe: true});\n  }\n\n  handleCloseIframe () {\n    this.setState({openIframe: false});\n  }\n  render () {\n    return (\n      <div>\n        <AlertNotification message={this.props.manageUsers.status_message} />\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'UPLOAD ATTENDANCE SHEET'}\n            showLoading={this.props.frontend.show_loading}\n            />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-10 p\">\n                    <input type=\"button\" onClick={this.handleSubmit} name=\"submit\" value=\"CLICK TO UPLOAD ATTENDANCE\" className=\"col-xs-4 md-btn md-raised indigo\" />\n                 {/* <AttendanceSheatForm\n                    user_documents={this.state.user_documents}\n                    onUpdatedocuments={this.props.onUpdatedocuments}\n                    {...this.props}\n                    /> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:       state.frontend.toJS(),\n    managePayslips: state.managePayslips.toJS(),\n    loggedUser:     state.logged_user.userLogin,\n    usersList:      state.usersList.toJS(),\n    manageUsers:    state.manageUsers.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: () => {\n      return dispatch(actionsUsersList.get_users_list());\n    },\n    onUserProfileDetails: (userid, username) => {\n      return dispatch(actionsManageUsers.getUserProfileDetails(userid, username));\n    },\n    onUpdateUserBankDetails: (newBankDetails) => {\n      // return dispatch(actionsManageUsers.updateUserBankDetails(newBankDetails));\n    },\n    onUpdateUserProfileDetails: (newProfileDetails) => {\n      return dispatch(actionsManageUsers.updateUserProfileDetails(newProfileDetails));\n    },\n    onAddNewEmployee: (newEmployeeDetails) => {\n      return dispatch(actionsManageUsers.addNewEmployee(newEmployeeDetails));\n    },\n    onUpdatedocuments: (documentLink) => {\n      // return dispatch(actionsManageUsers.updateDocument(documentLink));\n    },\n    onChangeEmployeeStatus: (userid, status) => {\n      return dispatch(actionsManageUsers.changeEmployeeStatus(userid, status));\n    },\n    onGetUserDocument: (userid) => {\n      return dispatch(actionsManageUsers.getUserDocument(userid));\n    },\n    onDeleteDocument: (docId) => {\n      return dispatch(actionsManageUsers.deleteDocument(docId));\n    },\n    onUserManagePayslipsData: (userid) => {\n      return dispatch(actionsManagePayslips.get_user_manage_payslips_data(userid));\n    }\n  };\n};\n\nconst VisibleUploadAttendance = connect(mapStateToProps, mapDispatchToProps)(UploadAttendance);\n\nconst RouterVisibleUploadAttendance = withRouter(VisibleUploadAttendance);\n\nexport default RouterVisibleUploadAttendance;\n"]},"metadata":{},"sourceType":"module"}