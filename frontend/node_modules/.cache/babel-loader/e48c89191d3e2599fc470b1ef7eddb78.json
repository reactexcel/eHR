{"ast":null,"code":"import _objectSpread from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/components/PageMonthlyHours.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router';\nimport { notify } from '../../../services/notify';\nimport _ from 'lodash';\nimport * as actions from '../../../redux/actions';\nimport { HighchartsChart, Chart, XAxis, Tooltip, YAxis, Title, Subtitle, Legend, ColumnSeries, LineSeries, SplineSeries, PieSeries } from 'react-jsx-highcharts'; // import 'react-date-picker/index.css';\n\nimport DialogInOut from './DialogInOut';\n\nvar moment = require('moment');\n\nvar PageMonthlyHours =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageMonthlyHours, _Component);\n\n  function PageMonthlyHours(props) {\n    var _this;\n\n    _classCallCheck(this, PageMonthlyHours);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageMonthlyHours).call(this, props));\n    _this.state = {\n      search: '',\n      date: '',\n      end_year: '',\n      userId: '',\n      pendingData: '',\n      year: '',\n      month: '',\n      monthlyHours: '',\n      open: false\n    };\n    _this.getByData = _this.getByData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMonth = _this.handleMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleYear = _this.handleYear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUserId = _this.handleUserId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PageMonthlyHours, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        month: this.props.currentMonth,\n        year: this.props.currentYear,\n        monthlyHours: this.props.monthlyHours\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.setState({\n        monthlyHours: this.props.monthlyHours.data\n      });\n    }\n  }, {\n    key: \"handleMonth\",\n    value: function handleMonth(data) {\n      this.setState({\n        month: data\n      });\n      this.getByData({\n        month: data,\n        change: 'month'\n      });\n    }\n  }, {\n    key: \"handleYear\",\n    value: function handleYear(data) {\n      this.setState({\n        year: data\n      });\n      this.getByData({\n        year: data,\n        change: 'year'\n      });\n    }\n  }, {\n    key: \"handleUserId\",\n    value: function handleUserId(data) {\n      this.setState({\n        userId: data\n      });\n      this.getByData({\n        userId: data,\n        change: 'user_id'\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(data) {\n      var dateData = data.date.toString().length > 1 ? data.date : '0' + data.date;\n      this.setState({\n        open: true,\n        date: dateData\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"getByData\",\n    value: function getByData(data) {\n      var userId = this.state.userId;\n      var year = this.state.year !== '' ? this.state.year : this.props.currentYear;\n      var month = this.state.month !== '' ? this.state.month : this.props.currentMonth;\n\n      if (data.change === 'month') {\n        month = data.month;\n      } else if (data.change === 'year') {\n        year = data.year;\n      } else if (data.change === 'user_id') {\n        userId = data.userId;\n      }\n\n      if (userId === '') {\n        notify('Error!', 'Please Select user', 'error');\n      } else {\n        this.props.requestEmployeeMonthlyHours({\n          'id': userId,\n          'month': month,\n          'year': year\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var EmpMonthltHours = this.state.monthlyHours;\n      var noOfDays = [];\n      var activeHour = [];\n      var totalHour = [];\n      var monthOptions = [];\n      var yearOptions = [];\n      var userIdOptions = [];\n\n      var monthOption = _.map(this.props.months, function (monthData, i) {\n        monthOptions.push(React.createElement(\"option\", {\n          key: i,\n          value: monthData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, monthData));\n      });\n\n      var yearOption = _.map(this.props.year, function (data, i) {\n        return yearOptions.push(React.createElement(\"option\", {\n          key: i,\n          value: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, data));\n      });\n\n      var userIdOption = _.map(this.props.employeeList.data, function (userList, k) {\n        userIdOptions.push(React.createElement(\"option\", {\n          key: k,\n          value: userList.user_Id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"  \", userList.name));\n      });\n\n      if (EmpMonthltHours[0] !== null && EmpMonthltHours[0] !== undefined) {\n        var timeList = _.map(EmpMonthltHours[0].day_wise_detail, function (Data, j) {\n          noOfDays.push(Data.day);\n          activeHour.push({\n            y: parseFloat(Data.active_hours.total_time),\n            super: _objectSpread({}, _this2)\n          });\n          totalHour.push({\n            y: parseFloat(Data.total_hours.total_time),\n            super: _objectSpread({}, _this2)\n          });\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n        });\n      }\n\n      var clickOptions = {\n        line: {\n          point: {\n            events: {\n              click: function click() {\n                var x = this.x + 1;\n                this.super.handleClick({\n                  date: x\n                });\n              }\n            }\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(DialogInOut, Object.assign({\n        open: this.state.open,\n        handleClose: this.handleClose,\n        date: this.state.date,\n        userId: this.state.userId,\n        selectedYear: this.state.year,\n        selectedMonth: this.state.month\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"team row p-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12 well\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(HighchartsChart, {\n        plotOptions: clickOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        backgroundColor: null,\n        style: {\n          'fontFamily': 'Dosis, sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Title, {\n        style: {\n          'fontSize': '16px',\n          'fontWeight': 'bold',\n          'textTransform': 'uppercase'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, 'Employee Monthly Hours'), React.createElement(Subtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, 'Monthly Active Hour of Employee'), React.createElement(Legend, {\n        itemStyle: {\n          'fontWeight': 'bold',\n          'fontSize': '13px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        backgroundColor: 'rgba(219,219,216,0.8)',\n        shadow: false,\n        borderWidth: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        id: \"x\",\n        categories: noOfDays,\n        title: {\n          'style': {\n            'textTransform': 'uppercase'\n          }\n        },\n        gridLineWidth: 1,\n        labels: {\n          'style': {\n            'fontSize': '12px'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(XAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Month Days\")), React.createElement(YAxis, {\n        id: \"activeHour\",\n        minorTickInterval: 'auto',\n        title: {\n          'style': {\n            'textTransform': 'uppercase'\n          }\n        },\n        labels: {\n          'style': {\n            'fontSize': '12px'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(YAxis.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"No. of Hours\"), React.createElement(LineSeries, {\n        id: \"emp\",\n        name: 'Active Hours',\n        key: 'activeHour',\n        data: activeHour,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(LineSeries, {\n        id: \"emp2\",\n        name: 'Total Hours',\n        key: 'totalHour',\n        data: totalHour,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"container p-t\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-sm-4 col-xs-12 p-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Select User\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"user\",\n        onChange: function onChange(evt) {\n          _this2.handleUserId(evt.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Select User\"), userIdOptions)), React.createElement(\"div\", {\n        className: \"form-group col-sm-4 col-xs-6 p-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Select Month:\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel1\",\n        defaultValue: this.props.currentMonth,\n        onChange: function onChange(evt) {\n          _this2.handleMonth(evt.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, monthOptions)), React.createElement(\"div\", {\n        className: \"form-group col-sm-4  col-xs-6 p-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Select Year:\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel12\",\n        defaultValue: this.props.currentYear,\n        onChange: function onChange(evt) {\n          _this2.handleYear(evt.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, yearOptions))));\n    }\n  }]);\n\n  return PageMonthlyHours;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    usersList: state.usersList.toJS(),\n    teamStats: state.teamStats,\n    empLifeCycle: state.teamStats.empLifeCycle,\n    empHours: state.teamStats.empHours,\n    monthlyHours: state.teamStats.monthlyHours\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PageMonthlyHours));","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/manageUsers/components/PageMonthlyHours.jsx"],"names":["React","Component","connect","bindActionCreators","withRouter","notify","_","actions","HighchartsChart","Chart","XAxis","Tooltip","YAxis","Title","Subtitle","Legend","ColumnSeries","LineSeries","SplineSeries","PieSeries","DialogInOut","moment","require","PageMonthlyHours","props","state","search","date","end_year","userId","pendingData","year","month","monthlyHours","open","getByData","bind","handleMonth","handleYear","handleUserId","handleClick","handleClose","setState","currentMonth","currentYear","data","change","dateData","toString","length","requestEmployeeMonthlyHours","EmpMonthltHours","noOfDays","activeHour","totalHour","monthOptions","yearOptions","userIdOptions","monthOption","map","months","monthData","i","push","yearOption","userIdOption","employeeList","userList","k","user_Id","name","undefined","timeList","day_wise_detail","Data","j","day","y","parseFloat","active_hours","total_time","super","total_hours","clickOptions","line","point","events","click","x","evt","target","value","mapStateToProps","frontend","toJS","loggedUser","logged_user","userLogin","usersList","teamStats","empLifeCycle","empHours","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router';\nimport {notify} from '../../../services/notify';\nimport _ from 'lodash';\nimport * as actions from '../../../redux/actions';\nimport {HighchartsChart, Chart, XAxis, Tooltip, YAxis, Title, Subtitle, Legend, ColumnSeries, LineSeries, SplineSeries, PieSeries} from 'react-jsx-highcharts';\n// import 'react-date-picker/index.css';\nimport DialogInOut from './DialogInOut';\nvar moment = require('moment');\n\nclass PageMonthlyHours extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      search:       '',\n      date:   '',\n      end_year:     '',\n      userId:       '',\n      pendingData:  '',\n      year:         '',\n      month:        '',\n      monthlyHours: '',\n      open:         false\n    };\n    this.getByData = this.getByData.bind(this);\n    this.handleMonth = this.handleMonth.bind(this);\n    this.handleYear = this.handleYear.bind(this);\n    this.handleUserId = this.handleUserId.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n  componentWillMount () {\n    this.setState({\n      month:this.props.currentMonth,\n      year:this.props.currentYear,\n      monthlyHours: this.props.monthlyHours\n    });\n  }\n  componentWillReceiveProps (props) {\n    this.setState({\n      monthlyHours: this.props.monthlyHours.data\n    });\n  }\n\n  handleMonth (data) {\n    this.setState({month:data});\n    this.getByData({month:data, change: 'month' });\n  }\n\n  handleYear (data) {\n    this.setState({ year: data});\n    this.getByData({ year: data, change: 'year' });\n  }\n\n  handleUserId (data) {\n    this.setState({ userId: data});\n    this.getByData({ userId: data, change: 'user_id' });\n  }\n  handleClick(data){\n    let dateData = data.date.toString().length > 1 ? data.date : '0'+data.date;\n    this.setState({ open : true, date : dateData });\n  }\n  handleClose(){\n    this.setState({ open: false});\n  }\n\n  getByData (data) {\n    let userId = this.state.userId;\n    let year = this.state.year !== '' ? this.state.year : this.props.currentYear;\n    let month = this.state.month !== '' ? this.state.month : this.props.currentMonth;\n    if(data.change === 'month'){\n      month=data.month;\n    }else if (data.change === 'year') {\n      year=data.year;\n    }else if (data.change === 'user_id') {\n      userId=data.userId;\n    }\n    if (userId === '') {\n      notify('Error!', 'Please Select user', 'error');\n    }else{\n      this.props.requestEmployeeMonthlyHours({\n        'id':    userId,\n        'month': month,\n        'year':  year\n      });\n    }\n  }\n  render () {\n    let EmpMonthltHours = this.state.monthlyHours;\n    var noOfDays = [];\n    var activeHour = [];\n    var totalHour = [];\n    let monthOptions = [];\n    let yearOptions = [];\n    let userIdOptions = [];\n    let monthOption = _.map(this.props.months, (monthData, i) => {\n      monthOptions.push(<option key={i} value={monthData}>{monthData}</option>);\n    });\n    let yearOption = _.map(this.props.year, (data, i) => {\n      return (\n      yearOptions.push(<option key={i} value={data}>{data}</option>)\n      );\n    });\n    let userIdOption = _.map(this.props.employeeList.data, (userList, k) => {\n      userIdOptions.push(<option key={k} value={userList.user_Id}>  {userList.name}</option>);\n    });\n    if (EmpMonthltHours[0] !== null && EmpMonthltHours[0] !== undefined) {\n      let timeList = _.map(EmpMonthltHours[0].day_wise_detail, (Data, j) => {\n        noOfDays.push(Data.day);\n        activeHour.push({y:parseFloat(Data.active_hours.total_time),super:{...this}});\n        totalHour.push({y:parseFloat(Data.total_hours.total_time),super:{...this}});\n        return (\n        <div></div>\n        );\n      });\n    }\n    const clickOptions= {\n        line: {\n          point: {\n              events: {\n                  click: function () {\n                      const x = this.x+1;\n                      this.super.handleClick({ date: x });\n                  }\n              }\n          }\n        }\n    };\n    return (\n      <div>\n        <DialogInOut open={this.state.open} handleClose={this.handleClose} date={this.state.date} userId={this.state.userId} selectedYear={this.state.year} selectedMonth={this.state.month} {...this.props} />\n        <div className=\"team row p-a\">\n          <div className=\"col-xs-12 well\">\n            <HighchartsChart plotOptions={clickOptions} >\n              <Chart backgroundColor={null} style={{'fontFamily': 'Dosis, sans-serif'}} />\n              <Title style={{'fontSize': '16px', 'fontWeight': 'bold', 'textTransform': 'uppercase'}} >{'Employee Monthly Hours'}</Title>\n              <Subtitle>{'Monthly Active Hour of Employee'}</Subtitle>\n              <Legend itemStyle={{'fontWeight': 'bold', 'fontSize': '13px'}} />\n              <Tooltip backgroundColor={'rgba(219,219,216,0.8)'} shadow={false} borderWidth={0} />\n              <XAxis id=\"x\" categories={noOfDays} title={{'style': {'textTransform': 'uppercase'}}} gridLineWidth={1} labels={{'style': {'fontSize': '12px'}}} >\n                <XAxis.Title>Month Days</XAxis.Title>\n              </XAxis>\n              <YAxis id='activeHour' minorTickInterval={'auto'} title={{'style': {'textTransform': 'uppercase'}}} labels={{'style': {'fontSize': '12px'}}} >\n                <YAxis.Title>No. of Hours</YAxis.Title>\n                <LineSeries id='emp' name={'Active Hours'} key={'activeHour'} data={activeHour} />\n                <LineSeries id='emp2' name={'Total Hours'} key={'totalHour'} data={totalHour} />\n              </YAxis>\n            </HighchartsChart>\n          </div>\n        </div>\n        <div className=\"container p-t\">\n          <div className=\"form-group col-sm-4 col-xs-12 p-a\">\n            <label htmlFor=\"sel1\">Select User</label>\n            <select className=\"form-control\" id=\"user\"\n              onChange={(evt) => {  this.handleUserId(evt.target.value); }}>\n              <option>Select User</option>\n              {userIdOptions}\n            </select>\n          </div>\n          <div className=\"form-group col-sm-4 col-xs-6 p-a\">\n            <label htmlFor=\"sel1\">Select Month:</label>\n            <select className=\"form-control\" id=\"sel1\" defaultValue={this.props.currentMonth}\n              onChange={(evt) => { this.handleMonth(evt.target.value);  }}>\n              {monthOptions}\n            </select>\n          </div>\n          <div className=\"form-group col-sm-4  col-xs-6 p-a\">\n            <label htmlFor=\"sel1\">Select Year:</label>\n            <select className=\"form-control\" id=\"sel12\" defaultValue={this.props.currentYear}\n              onChange={(evt) => { this.handleYear(evt.target.value); }}>\n              {yearOptions}\n            </select>\n          </div>\n          {/* <div className=\"form-group col-md-3\">\n            <button type=\"button\" onClick={(evt) => this.getByData()} className=\"btn btn-primary form-group m-t-md\">Get Details</button>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:     state.frontend.toJS(),\n    loggedUser:   state.logged_user.userLogin,\n    usersList:    state.usersList.toJS(),\n    teamStats:    state.teamStats,\n    empLifeCycle: state.teamStats.empLifeCycle,\n    empHours:     state.teamStats.empHours,\n    monthlyHours: state.teamStats.monthlyHours\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PageMonthlyHours));\n"]},"metadata":{},"sourceType":"module"}