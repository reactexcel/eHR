{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport _ from 'lodash';\nimport { fireAjax } from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nexport function success_hours_summary(data) {\n  return createAction(constants.ACTION_SUCCESS_HOURS_SUMMARY)(data);\n}\nexport function empty_hours_summary(data) {\n  return createAction(constants.ACTION_EMPTY_HOURS_SUMMARY)(data);\n}\nexport function error_hours_summary(data) {\n  return createAction(constants.ACTION_ERROR_HOURS_SUMMARY)(data);\n}\n\nfunction async_get_working_hours_summary(year, month) {\n  return fireAjax('POST', '', {\n    action: 'working_hours_summary',\n    year: year,\n    month: month\n  });\n}\n\nexport function get_working_hours_summary(year, month) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      async_get_working_hours_summary(year, month).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error === 0) {\n          dispatch(success_hours_summary(json.data));\n        } else {\n          dispatch(error_hours_summary({}));\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(error_hours_summary({}));\n      });\n    });\n  };\n} // ----update day working timr\n\nexport function empty_update_hours_summary(data) {\n  return createAction(constants.ACTION_EMPTY_UPDATE_HOURS_SUMMARY)(data);\n}\nexport function error_update_hours_summary(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_HOURS_SUMMARY)(data);\n}\n\nfunction async_update_day_working_hours(date, time) {\n  return fireAjax('POST', '', {\n    action: 'update_day_working_hours',\n    date: date,\n    time: time\n  });\n}\n\nexport function update_day_working_hours(date, time) {\n  return function (dispatch, getState) {\n    if (_.isEmpty(date)) {\n      return Promise.reject('date is empty');\n    }\n\n    if (_.isEmpty(time)) {\n      return Promise.reject('time is empty');\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_update_day_working_hours(date, time).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error === 0) {\n          // dispatch( success_hours_summary( json.data ) )\n          dispatch(get_working_hours_summary(json.data.monthYear.year, json.data.monthYear.month));\n        } else {\n          // dispatch( error_hours_summary( {} ) )\n          dispatch(empty_update_hours_summary(json.data.message)); // dispatch( get_working_hours_summary( json.data.monthYear.year, json.data.monthYear.month ) )\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n        // dispatch( error_hours_summary( {}  ) )\n\n        dispatch(error_update_hours_summary('')); // dispatch( get_working_hours_summary( json.data.monthYear.year, json.data.monthYear.month ) )\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/workingHours/actions/workingHoursSummary.js"],"names":["createAction","_","fireAjax","constants","show_loading","hide_loading","success_hours_summary","data","ACTION_SUCCESS_HOURS_SUMMARY","empty_hours_summary","ACTION_EMPTY_HOURS_SUMMARY","error_hours_summary","ACTION_ERROR_HOURS_SUMMARY","async_get_working_hours_summary","year","month","action","get_working_hours_summary","dispatch","getState","Promise","resolve","reject","then","json","error","empty_update_hours_summary","ACTION_EMPTY_UPDATE_HOURS_SUMMARY","error_update_hours_summary","ACTION_ERROR_UPDATE_HOURS_SUMMARY","async_update_day_working_hours","date","time","update_day_working_hours","isEmpty","monthYear","message"],"mappings":"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","sourcesContent":["import {createAction} from 'redux-actions';\nimport _ from 'lodash';\nimport {fireAjax} from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\nexport function success_hours_summary (data) {\n  return createAction(constants.ACTION_SUCCESS_HOURS_SUMMARY)(data);\n}\n\nexport function empty_hours_summary (data) {\n  return createAction(constants.ACTION_EMPTY_HOURS_SUMMARY)(data);\n}\n\nexport function error_hours_summary (data) {\n  return createAction(constants.ACTION_ERROR_HOURS_SUMMARY)(data);\n}\n\nfunction async_get_working_hours_summary (year, month) {\n  return fireAjax('POST', '', {\n    action: 'working_hours_summary',\n    year:   year,\n    month:  month\n  });\n}\n\nexport function get_working_hours_summary (year, month) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_get_working_hours_summary(year, month).then(\n        (json) => {\n          dispatch(hide_loading());\n          if (json.error === 0) {\n            dispatch(success_hours_summary(json.data));\n          } else {\n            dispatch(error_hours_summary({}));\n          }\n        }, (error) => {\n        dispatch(hide_loading());\n        dispatch(error_hours_summary({}));\n      }\n      );\n    });\n  };\n}\n\n// ----update day working timr\n\nexport function empty_update_hours_summary (data) {\n  return createAction(constants.ACTION_EMPTY_UPDATE_HOURS_SUMMARY)(data);\n}\n\nexport function error_update_hours_summary (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_HOURS_SUMMARY)(data);\n}\n\nfunction async_update_day_working_hours (date, time) {\n  return fireAjax('POST', '', {\n    action: 'update_day_working_hours',\n    date:   date,\n    time:   time\n  });\n}\n\nexport function update_day_working_hours (date, time) {\n  return function (dispatch, getState) {\n    if (_.isEmpty(date)) {\n      return Promise.reject('date is empty');\n    }\n    if (_.isEmpty(time)) {\n      return Promise.reject('time is empty');\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_update_day_working_hours(date, time).then(\n        (json) => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error === 0) {\n// dispatch( success_hours_summary( json.data ) )\n            dispatch(get_working_hours_summary(json.data.monthYear.year, json.data.monthYear.month));\n          } else {\n// dispatch( error_hours_summary( {} ) )\n            dispatch(empty_update_hours_summary(json.data.message));\n// dispatch( get_working_hours_summary( json.data.monthYear.year, json.data.monthYear.month ) )\n          }\n        },\n        (error) => {\n          dispatch(hide_loading()); // hide loading icon\n          // dispatch( error_hours_summary( {}  ) )\n          dispatch(error_update_hours_summary(''));\n          // dispatch( get_working_hours_summary( json.data.monthYear.year, json.data.monthYear.month ) )\n        }\n      );\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}