{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/salary/containers/managePayslips.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport queryString from 'query-string';\nimport * as _ from 'lodash';\nimport { notify } from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport { isNotUserValid } from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport ManagePayslipsUsersList from '../../../modules/salary/components/managePayslips/ManagePayslipsUsersList';\nimport FormGeneratePaySlip from '../../../modules/salary/components/managePayslips/FormGeneratePaySlip';\nimport EmployeeActualSalary from '../../../modules/salary/components/managePayslips/EmployeeActualSalary';\nimport UserPayslipsHistory from '../../../components/salary/managePayslips/UserPayslipsHistory';\nimport * as actions from '../../../redux/actions';\nimport * as actions_usersList from '../../../redux/generic/actions/usersList';\nimport * as actions_managePayslips from '../../../redux/salary/actions/managePayslips';\n\nvar ManagePayslips =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManagePayslips, _React$Component);\n\n  function ManagePayslips(props) {\n    var _this;\n\n    _classCallCheck(this, ManagePayslips);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManagePayslips).call(this, props));\n\n    _this.props.onIsAlreadyLogin();\n\n    _this.state = {\n      year: '',\n      month: '',\n      'selected_user_name': '',\n      'selected_user_image': '',\n      'selected_user_jobtitle': '',\n      'selected_user_id': '',\n      'defaultUserDisplay': '',\n      'user_data_for_payslip': {},\n      'user_payslip_history': [],\n      'google_drive_emailid': '',\n      'employee_actual_salary': {}\n    };\n    _this.onUserClick = _this.onUserClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callCreateUserPayslip = _this.callCreateUserPayslip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callEmailPayslips = _this.callEmailPayslips.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.callMonthlyPayslip = _this.callMonthlyPayslip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.responseGoogle = _this.responseGoogle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveArrear = _this.saveArrear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManagePayslips, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onUsersList();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status) {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n\n      var s_google_drive_emailid = '';\n      var s_user_data_for_payslip = {};\n      var s_user_payslip_history = [];\n      var s_all_users_latest_payslip = [];\n      var s_employee_actual_salary = {};\n\n      if (typeof props.managePayslips.user_data_for_payslip !== 'undefined') {\n        s_user_data_for_payslip = props.managePayslips.user_data_for_payslip;\n      }\n\n      if (typeof props.managePayslips.user_payslip_history !== 'undefined') {\n        s_user_payslip_history = props.managePayslips.user_payslip_history;\n      }\n\n      if (typeof props.managePayslips.all_users_latest_payslip !== 'undefined') {\n        s_all_users_latest_payslip = props.managePayslips.all_users_latest_payslip;\n      }\n\n      if (typeof props.managePayslips.google_drive_emailid !== 'undefined') {\n        s_google_drive_emailid = props.managePayslips.google_drive_emailid;\n      }\n\n      if (typeof props.managePayslips.employee_actual_salary !== 'undefined') {\n        s_employee_actual_salary = props.managePayslips.employee_actual_salary;\n      }\n\n      this.setState({\n        user_data_for_payslip: s_user_data_for_payslip,\n        user_payslip_history: s_user_payslip_history,\n        all_users_latest_payslip: s_all_users_latest_payslip,\n        google_drive_emailid: s_google_drive_emailid,\n        employee_actual_salary: s_employee_actual_salary\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      window.scrollTo(0, 0);\n\n      if (this.state.defaultUserDisplay == '') {\n        if (this.props.usersList.users.length > 0) {\n          var firstUser = this.props.usersList.users[0];\n          var queryParams = queryString.parse(this.props.location.search);\n          var defaultUserId = queryParams.selectedUser || firstUser.user_Id;\n          this.onUserClick(defaultUserId);\n        }\n      }\n    }\n  }, {\n    key: \"onUserClick\",\n    value: function onUserClick(userid) {\n      var selected_user_name = '';\n      var selected_user_image = '';\n      var selected_user_jobtitle = '';\n      var selected_user_id = '';\n\n      if (this.props.usersList.users.length > 0) {\n        var userDetails = _.find(this.props.usersList.users, {\n          'user_Id': userid\n        });\n\n        if (typeof userDetails !== 'undefined') {\n          selected_user_name = userDetails.name;\n          selected_user_image = userDetails.slack_profile.image_192;\n          selected_user_jobtitle = userDetails.jobtitle;\n          selected_user_id = userDetails.user_Id;\n          this.props.history.push('manage_payslips?selectedUser=' + userDetails.user_Id);\n        }\n      }\n\n      this.setState({\n        'defaultUserDisplay': userid,\n        'selected_user_name': selected_user_name,\n        'selected_user_image': selected_user_image,\n        'selected_user_jobtitle': selected_user_jobtitle,\n        'selected_user_id': selected_user_id\n      });\n      var d = new Date();\n      var year = d.getFullYear();\n      var month = d.getMonth() + 1;\n\n      if (this.state.year == '' && this.state.month == '') {\n        this.props.onUserManagePayslipsData(userid);\n      } else {\n        this.props.onUserMonthlyManagePayslipsData(userid, this.state.year, this.state.month);\n      }\n    }\n  }, {\n    key: \"saveArrear\",\n    value: function saveArrear(user_id, extra_arrear, arrear_for_month) {\n      this.props.onCreateArrear(user_id, extra_arrear, arrear_for_month);\n    }\n  }, {\n    key: \"callCreateUserPayslip\",\n    value: function callCreateUserPayslip(payslipData, evt) {\n      var _this2 = this;\n\n      evt.preventDefault();\n      this.props.onCreateUserPayslip(payslipData).then(function (data) {\n        _this2.onUserClick(_this2.state.selected_user_id);\n      }, function (error) {\n        notify(error);\n      });\n    }\n  }, {\n    key: \"callMonthlyPayslip\",\n    value: function callMonthlyPayslip(userid, year, month) {\n      this.setState({\n        year: year,\n        month: month\n      });\n      this.props.onUserMonthlyManagePayslipsData(userid, year, month);\n    }\n  }, {\n    key: \"callEmailPayslips\",\n    value: function callEmailPayslips(ids) {\n      var _this3 = this;\n\n      if (ids.length == 0) {\n        notify('Select an employee!!!');\n      } else {\n        this.props.onEmailPayslips(ids).then(function (data) {\n          notify(data);\n\n          _this3.props.onUsersList();\n\n          _this3.onUserClick(_this3.state.selected_user_id);\n        }, function (error) {\n          notify(error);\n        });\n      }\n    }\n  }, {\n    key: \"responseGoogle\",\n    value: function responseGoogle(response) {\n      var accessToken = response.getAuthResponse().access_token;\n\n      if (accessToken == '') {\n        notify('Access token is empty!!!');\n      } else {\n        this.props.onSaveGoogleAccessToken(accessToken).then(function (data) {\n          notify(data);\n        }, function (error) {\n          notify(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status_message = '';\n      var selectedUserId = '';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        pageTitle: 'Manage Payslips' + status_message\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(ManagePayslipsUsersList, Object.assign({\n        users: this.props.usersList.users,\n        selectedUserId: this.state.selected_user_id,\n        onUserClick: this.onUserClick,\n        all_users_latest_payslip: this.state.all_users_latest_payslip,\n        callEmailPayslips: this.callEmailPayslips,\n        onGetTransferList: this.props.onGetTransferList,\n        google_drive_emailid: this.state.google_drive_emailid\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row no-gutter b-t\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12 b-l\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-a block box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, this.state.selected_user_name), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Employee Id : \", this.state.selected_user_id), React.createElement(\"h6\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Generate Payslip\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(FormGeneratePaySlip, {\n        user_id: this.state.selected_user_id,\n        name: this.state.selected_user_name,\n        designation: this.state.selected_user_jobtitle,\n        user_data_for_payslip: this.state.user_data_for_payslip,\n        callCreateUserPayslip: this.callCreateUserPayslip,\n        callMonthlyPayslip: this.callMonthlyPayslip,\n        pending_leaves: this.props.managePayslips.pending_leaves,\n        saveArrear: this.saveArrear,\n        actualSalary: this.state.employee_actual_salary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"p-a block box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 b-r\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"EmployeeActualSalary\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(EmployeeActualSalary, {\n        employee_actual_salary: this.state.employee_actual_salary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Previous Payslips\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(UserPayslipsHistory, {\n        user_payslip_history: this.state.user_payslip_history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))))))))))));\n    }\n  }]);\n\n  return ManagePayslips;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    usersList: state.usersList.toJS(),\n    managePayslips: state.managePayslips.toJS()\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: function onUsersList() {\n      return dispatch(actions_usersList.get_users_list());\n    },\n    onUserManagePayslipsData: function onUserManagePayslipsData(userid) {\n      return dispatch(actions_managePayslips.get_user_manage_payslips_data(userid));\n    },\n    onUserMonthlyManagePayslipsData: function onUserMonthlyManagePayslipsData(userid, year, month) {\n      return dispatch(actions_managePayslips.get_user_month_manage_payslips_data(userid, year, month));\n    },\n    onCreateUserPayslip: function onCreateUserPayslip(payslipData) {\n      return dispatch(actions_managePayslips.create_user_payslip(payslipData));\n    },\n    onEmailPayslips: function onEmailPayslips(payslips_ids) {\n      return dispatch(actions_managePayslips.email_payslips(payslips_ids));\n    },\n    onSaveGoogleAccessToken: function onSaveGoogleAccessToken(accessToken) {\n      return dispatch(actions_managePayslips.save_google_access_token(accessToken));\n    },\n    onCreateArrear: function onCreateArrear(user_id, extra_arrear, arrear_for_month) {\n      return dispatch(actions_managePayslips.create_arrear(user_id, extra_arrear, arrear_for_month));\n    },\n    onGetTransferList: function onGetTransferList(userIds) {\n      return dispatch(actions_managePayslips.getTransferList(userIds));\n    }\n  };\n};\n\nvar VisibleManagePayslips = connect(mapStateToProps, mapDispatchToProps)(ManagePayslips);\nvar RouterVisibleManagePayslips = withRouter(VisibleManagePayslips);\nexport default RouterVisibleManagePayslips;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/salary/containers/managePayslips.jsx"],"names":["React","connect","withRouter","queryString","_","notify","Menu","isNotUserValid","Header","ManagePayslipsUsersList","FormGeneratePaySlip","EmployeeActualSalary","UserPayslipsHistory","actions","actions_usersList","actions_managePayslips","ManagePayslips","props","onIsAlreadyLogin","state","year","month","onUserClick","bind","callCreateUserPayslip","callEmailPayslips","callMonthlyPayslip","responseGoogle","saveArrear","onUsersList","isNotValid","location","pathname","loggedUser","status","history","push","redirectTo","s_google_drive_emailid","s_user_data_for_payslip","s_user_payslip_history","s_all_users_latest_payslip","s_employee_actual_salary","managePayslips","user_data_for_payslip","user_payslip_history","all_users_latest_payslip","google_drive_emailid","employee_actual_salary","setState","window","scrollTo","defaultUserDisplay","usersList","users","length","firstUser","queryParams","parse","search","defaultUserId","selectedUser","user_Id","userid","selected_user_name","selected_user_image","selected_user_jobtitle","selected_user_id","userDetails","find","name","slack_profile","image_192","jobtitle","d","Date","getFullYear","getMonth","onUserManagePayslipsData","onUserMonthlyManagePayslipsData","user_id","extra_arrear","arrear_for_month","onCreateArrear","payslipData","evt","preventDefault","onCreateUserPayslip","then","data","error","ids","onEmailPayslips","response","accessToken","getAuthResponse","access_token","onSaveGoogleAccessToken","status_message","selectedUserId","onGetTransferList","pending_leaves","Component","mapStateToProps","frontend","toJS","logged_user","userLogin","mapDispatchToProps","dispatch","isAlreadyLogin","get_users_list","get_user_manage_payslips_data","get_user_month_manage_payslips_data","create_user_payslip","payslips_ids","email_payslips","save_google_access_token","create_arrear","userIds","getTransferList","VisibleManagePayslips","RouterVisibleManagePayslips"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport queryString from 'query-string';\nimport * as _ from 'lodash';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport ManagePayslipsUsersList from '../../../modules/salary/components/managePayslips/ManagePayslipsUsersList';\nimport FormGeneratePaySlip from '../../../modules/salary/components/managePayslips/FormGeneratePaySlip';\nimport EmployeeActualSalary from '../../../modules/salary/components/managePayslips/EmployeeActualSalary';\nimport UserPayslipsHistory from '../../../components/salary/managePayslips/UserPayslipsHistory';\nimport * as actions from '../../../redux/actions';\nimport * as actions_usersList from '../../../redux/generic/actions/usersList';\nimport * as actions_managePayslips from '../../../redux/salary/actions/managePayslips';\n\nclass ManagePayslips extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      year:                     '',\n      month:                    '',\n      'selected_user_name':     '',\n      'selected_user_image':    '',\n      'selected_user_jobtitle': '',\n      'selected_user_id':       '',\n      'defaultUserDisplay':     '',\n      'user_data_for_payslip':  {},\n      'user_payslip_history':   [],\n      'google_drive_emailid':   '',\n      'employee_actual_salary': {}\n    };\n\n    this.onUserClick = this.onUserClick.bind(this);\n    this.callCreateUserPayslip = this.callCreateUserPayslip.bind(this);\n    this.callEmailPayslips = this.callEmailPayslips.bind(this);\n    this.callMonthlyPayslip = this.callMonthlyPayslip.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n    this.saveArrear = this.saveArrear.bind(this);\n  }\n  componentWillMount () {    \n    this.props.onUsersList();\n  }\n  componentWillReceiveProps (props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    let s_google_drive_emailid = '';\n    let s_user_data_for_payslip = {};\n    let s_user_payslip_history = [];\n    let s_all_users_latest_payslip = [];\n    let s_employee_actual_salary = {};\n\n    if (typeof props.managePayslips.user_data_for_payslip !== 'undefined') {\n      s_user_data_for_payslip = props.managePayslips.user_data_for_payslip;\n    }\n\n    if (typeof props.managePayslips.user_payslip_history !== 'undefined') {\n      s_user_payslip_history = props.managePayslips.user_payslip_history;\n    }\n\n    if (typeof props.managePayslips.all_users_latest_payslip !== 'undefined') {\n      s_all_users_latest_payslip = props.managePayslips.all_users_latest_payslip;\n    }\n\n    if (typeof props.managePayslips.google_drive_emailid !== 'undefined') {\n      s_google_drive_emailid = props.managePayslips.google_drive_emailid;\n    }\n\n    if (typeof props.managePayslips.employee_actual_salary !== 'undefined') {\n      s_employee_actual_salary = props.managePayslips.employee_actual_salary;\n    }\n\n    this.setState({user_data_for_payslip: s_user_data_for_payslip, user_payslip_history: s_user_payslip_history, all_users_latest_payslip: s_all_users_latest_payslip, google_drive_emailid: s_google_drive_emailid, employee_actual_salary: s_employee_actual_salary});\n  }\n\n  componentDidUpdate () {\n    window.scrollTo(0,0);\n    if (this.state.defaultUserDisplay == '') {\n      if (this.props.usersList.users.length > 0) {\n        let firstUser = this.props.usersList.users[0];\n        const queryParams = queryString.parse(this.props.location.search)\n        let defaultUserId = queryParams.selectedUser || firstUser.user_Id;\n        this.onUserClick(defaultUserId);\n      }\n    }\n  }\n\n  onUserClick (userid) {\n    let selected_user_name = '';\n    let selected_user_image = '';\n    let selected_user_jobtitle = '';\n    let selected_user_id = '';\n\n    if (this.props.usersList.users.length > 0) {\n      let userDetails = _.find(this.props.usersList.users, {'user_Id': userid});\n      if (typeof userDetails !== 'undefined') {\n        selected_user_name = userDetails.name;\n        selected_user_image = userDetails.slack_profile.image_192;\n        selected_user_jobtitle = userDetails.jobtitle;\n        selected_user_id = userDetails.user_Id;\n        this.props.history.push('manage_payslips?selectedUser='+userDetails.user_Id)\n      }\n    }\n    this.setState({'defaultUserDisplay': userid, 'selected_user_name': selected_user_name, 'selected_user_image': selected_user_image, 'selected_user_jobtitle': selected_user_jobtitle, 'selected_user_id': selected_user_id});\n    let d = new Date();\n    let year = d.getFullYear();\n    let month = d.getMonth() + 1;\n    if (this.state.year == '' && this.state.month == '') {\n      this.props.onUserManagePayslipsData(userid);\n    } else {\n      this.props.onUserMonthlyManagePayslipsData(userid, this.state.year, this.state.month);\n    }\n  }\n  saveArrear (user_id, extra_arrear, arrear_for_month) {\n   \n    this.props.onCreateArrear(user_id, extra_arrear, arrear_for_month);\n  }\n\n  callCreateUserPayslip (payslipData, evt) {\n    evt.preventDefault();\n    this.props.onCreateUserPayslip(payslipData).then((data) => {\n      this.onUserClick(this.state.selected_user_id);\n    }, (error) => {\n      notify(error);\n    });\n  } \n\n  callMonthlyPayslip (userid, year, month) {\n    this.setState({year: year, month: month});\n    this.props.onUserMonthlyManagePayslipsData(userid, year, month);\n  }\n\n  callEmailPayslips (ids) {\n    if (ids.length == 0) {\n      notify('Select an employee!!!');\n    } else {\n      this.props.onEmailPayslips(ids).then((data) => {\n        notify(data);\n        this.props.onUsersList();\n        this.onUserClick(this.state.selected_user_id);\n      }, (error) => {\n        notify(error);\n      });\n    }\n  }\n\n  responseGoogle (response) {\n    let accessToken = response.getAuthResponse().access_token;\n    if (accessToken == '') {\n      notify('Access token is empty!!!');\n    } else {\n      this.props.onSaveGoogleAccessToken(accessToken).then((data) => {\n        notify(data);\n      }, (error) => {\n        notify(error);\n      });\n    }\n  }\n  render () {\n    let status_message = '';\n    let selectedUserId = '';\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Manage Payslips' + status_message} {...this.props}/>\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-3\">\n                  <ManagePayslipsUsersList users={this.props.usersList.users} selectedUserId={this.state.selected_user_id} onUserClick={this.onUserClick} all_users_latest_payslip={this.state.all_users_latest_payslip} callEmailPayslips={this.callEmailPayslips} onGetTransferList={this.props.onGetTransferList} google_drive_emailid={this.state.google_drive_emailid} {...this.props} />\n                </div>\n                <div className=\"col-md-9\">\n                  <div className=\"row no-gutter b-t\">\n                    <div className=\"col-xs-12 b-l\">\n                      <div className=\"p-a block box\">\n                        <h2>{this.state.selected_user_name}</h2>\n                        <h6>Employee Id : {this.state.selected_user_id}</h6>\n                        <h6 className=\"text-center\">Generate Payslip</h6>\n                        <hr />\n                        <FormGeneratePaySlip user_id={this.state.selected_user_id} name={this.state.selected_user_name} designation={this.state.selected_user_jobtitle} user_data_for_payslip={this.state.user_data_for_payslip} callCreateUserPayslip={this.callCreateUserPayslip} callMonthlyPayslip={this.callMonthlyPayslip} pending_leaves={this.props.managePayslips.pending_leaves} saveArrear={this.saveArrear} actualSalary={this.state.employee_actual_salary} />\n                      </div>\n                      <div className=\"p-a block box\">\n                        <div className=\"row\">\n                          <div className=\"col-md-8 b-r\">\n                            <h6 className=\"text-center\">\n                              <u>EmployeeActualSalary</u>\n                            </h6>\n                            <hr />\n                            <EmployeeActualSalary employee_actual_salary={this.state.employee_actual_salary} />\n                          </div>\n                          <div className=\"col-md-4\">\n                            <h6 className=\"text-center\">\n                              <u>Previous Payslips</u>\n                            </h6>\n                            <hr />\n                            <UserPayslipsHistory user_payslip_history={this.state.user_payslip_history} />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:       state.frontend.toJS(),\n    loggedUser:     state.logged_user.userLogin,\n    usersList:      state.usersList.toJS(),\n    managePayslips: state.managePayslips.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: () => {\n      return dispatch(actions_usersList.get_users_list());\n    },\n    onUserManagePayslipsData: (userid) => {\n      return dispatch(actions_managePayslips.get_user_manage_payslips_data(userid));\n    },\n    onUserMonthlyManagePayslipsData: (userid, year, month) => {\n      return dispatch(actions_managePayslips.get_user_month_manage_payslips_data(userid, year, month));\n    },\n    onCreateUserPayslip: (payslipData) => {\n      return dispatch(actions_managePayslips.create_user_payslip(payslipData));\n    },\n    onEmailPayslips: (payslips_ids) => {\n      return dispatch(actions_managePayslips.email_payslips(payslips_ids));\n    },\n    onSaveGoogleAccessToken: (accessToken) => {\n      return dispatch(actions_managePayslips.save_google_access_token(accessToken));\n    },\n    onCreateArrear: (user_id, extra_arrear, arrear_for_month) => {\n      return dispatch(actions_managePayslips.create_arrear(user_id, extra_arrear, arrear_for_month));\n    },\n    onGetTransferList: (userIds) => {\n      return dispatch(actions_managePayslips.getTransferList(userIds));\n    }\n\n  };\n};\n\nconst VisibleManagePayslips = connect(mapStateToProps, mapDispatchToProps)(ManagePayslips);\n\nconst RouterVisibleManagePayslips = withRouter(VisibleManagePayslips);\n\nexport default RouterVisibleManagePayslips;\n"]},"metadata":{},"sourceType":"module"}