{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/policyDocuments/containers/uploadPolicyDocument.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { notify } from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport { bindActionCreators } from 'redux';\nimport { isNotUserValid } from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport Message from '../../../components/generic/Message';\nimport FormUploadPolicyDocument from '../../../modules/policyDocuments/components/formUploadPolicyDocument';\nimport ListAllPolicyDocument from '../../../components/policyDocuments/ListAllPolicyDocument';\nimport * as actions from '../../../redux/actions';\n\nvar UploadPolicyDocumentContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadPolicyDocumentContainer, _React$Component);\n\n  function UploadPolicyDocumentContainer(props) {\n    var _this;\n\n    _classCallCheck(this, UploadPolicyDocumentContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadPolicyDocumentContainer).call(this, props));\n\n    _this.props.isAlreadyLogin();\n\n    _this.state = {\n      docs: [],\n      errClass: 'hidden',\n      errMsg: ''\n    };\n    _this.submitDocs = _this.submitDocs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.hideError = _this.hideError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitNewListofDocs = _this.submitNewListofDocs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UploadPolicyDocumentContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.requestUserPolicyDocument();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status) {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n\n      this.setState({\n        docs: props.policyDocuments.data\n      });\n      var _props$policyDocument = props.policyDocuments,\n          isSuccess = _props$policyDocument.isSuccess,\n          isError = _props$policyDocument.isError,\n          message = _props$policyDocument.message;\n\n      if (isSuccess && message !== '') {\n        notify('Success!', message, 'success');\n      } else if (isError) {\n        notify('Error!', message, 'error');\n      }\n    }\n  }, {\n    key: \"hideError\",\n    value: function hideError(e) {\n      e.preventDefault();\n      this.setState({\n        errClass: 'hidden',\n        errMsg: ''\n      });\n    }\n  }, {\n    key: \"submitNewListofDocs\",\n    value: function submitNewListofDocs(newList) {\n      this.props.requestSubmitDocs(newList);\n    }\n  }, {\n    key: \"submitDocs\",\n    value: function submitDocs(docs) {\n      this.props.requestSubmitDocs(docs);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: 'Upload Policy Documents',\n        showLoading: this.props.policyDocuments.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Message, {\n        className: this.state.errClass,\n        message: this.state.errMsg,\n        onClick: this.hideError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-6 col-xs-12 col-md-6 m-t-md m-b-md\",\n        id: \"submitDocs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FormUploadPolicyDocument, Object.assign({\n        submitDocs: this.submitDocs,\n        docs: this.state.docs\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm-6 col-xs-12 col-md-6\",\n        id: \"listDocs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ListAllPolicyDocument, {\n        policyDocuments: this.state.docs,\n        submitNewListofDocs: this.submitNewListofDocs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UploadPolicyDocumentContainer;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    loggedUser: state.logged_user.userLogin,\n    policyDocuments: state.policyDocuments.policyDocument\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UploadPolicyDocumentContainer));","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/policyDocuments/containers/uploadPolicyDocument.jsx"],"names":["React","connect","withRouter","notify","Menu","bindActionCreators","isNotUserValid","Header","Message","FormUploadPolicyDocument","ListAllPolicyDocument","actions","UploadPolicyDocumentContainer","props","isAlreadyLogin","state","docs","errClass","errMsg","submitDocs","bind","hideError","submitNewListofDocs","requestUserPolicyDocument","isNotValid","location","pathname","loggedUser","status","history","push","redirectTo","setState","policyDocuments","data","isSuccess","isError","message","e","preventDefault","newList","requestSubmitDocs","isLoading","Component","mapStateToProps","logged_user","userLogin","policyDocument","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,MAAR,QAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,wBAAP,MAAqC,sEAArC;AACA,OAAOC,qBAAP,MAAkC,2DAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;IAEMC,6B;;;;;AACJ,yCAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,uGAAMA,KAAN;;AACA,UAAKA,KAAL,CAAWC,cAAX;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAM,EADC;AAEXC,MAAAA,QAAQ,EAAE,QAFC;AAGXC,MAAAA,MAAM,EAAI;AAHC,KAAb;AAKA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AACA,UAAKE,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBF,IAAzB,uDAA3B;AAVkB;AAWnB;;;;yCACqB;AACpB,WAAKP,KAAL,CAAWU,yBAAX;AACD;;;8CAC0BV,K,EAAO;AAChC,UAAIW,UAAU,GAAGlB,cAAc,CAAC,KAAKO,KAAL,CAAWY,QAAX,CAAoBC,QAArB,EAA+Bb,KAAK,CAACc,UAArC,CAA/B;;AACA,UAAIH,UAAU,CAACI,MAAf,EAAuB;AACrB,aAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwBN,UAAU,CAACO,UAAnC;AACD;;AACD,WAAKC,QAAL,CAAc;AACZhB,QAAAA,IAAI,EAAEH,KAAK,CAACoB,eAAN,CAAsBC;AADhB,OAAd;AALgC,kCAQIrB,KAAK,CAACoB,eARV;AAAA,UAQ3BE,SAR2B,yBAQ3BA,SAR2B;AAAA,UAQhBC,OARgB,yBAQhBA,OARgB;AAAA,UAQPC,OARO,yBAQPA,OARO;;AAShC,UAAIF,SAAS,IAAIE,OAAO,KAAK,EAA7B,EAAiC;AAC/BlC,QAAAA,MAAM,CAAC,UAAD,EAAakC,OAAb,EAAsB,SAAtB,CAAN;AACD,OAFD,MAEO,IAAID,OAAJ,EAAa;AAClBjC,QAAAA,MAAM,CAAC,QAAD,EAAWkC,OAAX,EAAoB,OAApB,CAAN;AACD;AACF;;;8BACUC,C,EAAG;AACZA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKP,QAAL,CAAc;AACZf,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,MAAM,EAAI;AAFE,OAAd;AAID;;;wCACoBsB,O,EAAS;AAC5B,WAAK3B,KAAL,CAAW4B,iBAAX,CAA6BD,OAA7B;AACD;;;+BACWxB,I,EAAM;AAChB,WAAKH,KAAL,CAAW4B,iBAAX,CAA6BzB,IAA7B;AACD;;;6BACS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,oBAAU,KAAKH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAkB,QAAA,SAAS,EAAC,2BAA5B;AAAwD,QAAA,IAAI,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,yBAAnB;AAA8C,QAAA,WAAW,EAAE,KAAKA,KAAL,CAAWoB,eAAX,CAA2BS,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,EAAE,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAE,KAAK3B,KAAL,CAAWE,QAA/B;AAAyC,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,MAA7D;AAAqE,QAAA,OAAO,EAAE,KAAKG,SAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKI;AAAK,QAAA,SAAS,EAAC,2CAAf;AAA2D,QAAA,EAAE,EAAC,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AAA0B,QAAA,UAAU,EAAE,KAAKF,UAA3C;AAAuD,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC;AAAxE,SAAkF,KAAKH,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAA6C,QAAA,EAAE,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,qBAAD;AAAuB,QAAA,eAAe,EAAE,KAAKE,KAAL,CAAWC,IAAnD;AAAyD,QAAA,mBAAmB,EAAE,KAAKM,mBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ,CAFF,CAFF,CADF;AAsBD;;;;EAnEyCtB,KAAK,CAAC2C,S;;AAqElD,SAASC,eAAT,CAA0B7B,KAA1B,EAAiC;AAC/B,SAAO;AACLY,IAAAA,UAAU,EAAOZ,KAAK,CAAC8B,WAAN,CAAkBC,SAD9B;AAELb,IAAAA,eAAe,EAAElB,KAAK,CAACkB,eAAN,CAAsBc;AAFlC,GAAP;AAID;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAAE,SAAO5C,kBAAkB,CAACM,OAAD,EAAUsC,QAAV,CAAzB;AAA+C,CAA1F;;AAEA,eAAe/C,UAAU,CAACD,OAAO,CAAC2C,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpC,6BAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport {bindActionCreators} from 'redux';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport Message from '../../../components/generic/Message';\nimport FormUploadPolicyDocument from '../../../modules/policyDocuments/components/formUploadPolicyDocument';\nimport ListAllPolicyDocument from '../../../components/policyDocuments/ListAllPolicyDocument';\nimport * as actions from '../../../redux/actions';\n\nclass UploadPolicyDocumentContainer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n    this.state = {\n      docs:     [],\n      errClass: 'hidden',\n      errMsg:   ''\n    };\n    this.submitDocs = this.submitDocs.bind(this);\n    this.hideError = this.hideError.bind(this);\n    this.submitNewListofDocs = this.submitNewListofDocs.bind(this);\n  }\n  componentWillMount () {\n    this.props.requestUserPolicyDocument();\n  }\n  componentWillReceiveProps (props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    this.setState({\n      docs: props.policyDocuments.data\n    });\n    let {isSuccess, isError, message} = props.policyDocuments;\n    if (isSuccess && message !== '') {\n      notify('Success!', message, 'success');\n    } else if (isError) {\n      notify('Error!', message, 'error');\n    }\n  }\n  hideError (e) {\n    e.preventDefault();\n    this.setState({\n      errClass: 'hidden',\n      errMsg:   ''\n    });\n  }\n  submitNewListofDocs (newList) {\n    this.props.requestSubmitDocs(newList);\n  }\n  submitDocs (docs) {\n    this.props.requestSubmitDocs(docs);\n  }\n  render () {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Upload Policy Documents'} showLoading={this.props.policyDocuments.isLoading} />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"row\">\n              <Message className={this.state.errClass} message={this.state.errMsg} onClick={this.hideError} />\n            </div>\n\n              <div className=\"col-sm-6 col-xs-12 col-md-6 m-t-md m-b-md\" id=\"submitDocs\">\n                <FormUploadPolicyDocument submitDocs={this.submitDocs} docs={this.state.docs} {...this.props} />\n              </div>\n              <br />\n              <div className=\"col-sm-6 col-xs-12 col-md-6\" id=\"listDocs\">\n                <ListAllPolicyDocument policyDocuments={this.state.docs} submitNewListofDocs={this.submitNewListofDocs} />\n              </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps (state) {\n  return {\n    loggedUser:      state.logged_user.userLogin,\n    policyDocuments: state.policyDocuments.policyDocument\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => { return bindActionCreators(actions, dispatch); };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UploadPolicyDocumentContainer));\n"]},"metadata":{},"sourceType":"module"}