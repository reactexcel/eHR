{"ast":null,"code":"import { createAction } from \"redux-actions\";\nimport * as _ from \"lodash\";\nimport queue from \"async/queue\";\nimport { fireAjax } from \"../../../services/index\";\nimport { show_loading, hide_loading } from \"../../../redux/generic/actions/frontend\";\nimport * as constants from \"../../../redux/constants\";\nimport { func } from \"prop-types\";\n\nvar moment = require(\"moment\");\n\nexport function success_user_profile(data, username) {\n  return {\n    type: constants.ACTION_SUCCESS_USER_PROFILE,\n    payload: data,\n    username: username\n  };\n}\nexport function empty_user_profile(data) {\n  return createAction(constants.ACTION_EMPTY_USER_PROFILE)(data);\n}\nexport function error_user_profile(data) {\n  return createAction(constants.ACTION_ERROR_USER_PROFILE)(data);\n}\n\nfunction async_getUserProfileDetails(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_profile_detail_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserProfileDetails(userid, username) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getUserProfileDetails(userid).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_user_profile(json.data, username));\n        } else {\n          dispatch(empty_user_profile(json.data.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_user_profile(\"error occurs!!!\"));\n      });\n    });\n  };\n} // -------update profile details\n\nexport function success_update_user_profile_details(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_USER_PROFILE_DETAILS)(data);\n}\nexport function error_update_user_profile_details(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_USER_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateUserProfileDetails(n_user_id, n_name, n_jobtitle, n_team, n_dateofjoining, n_work_email, n_other_email, n_gender, n_dob, n_marital_status, n_address1, n_address2, n_emergency_ph1, n_emergency_ph2, n_blood_group, n_medical_condition, n_training_completion_date, n_termination_date, n_holding_comments, n_training_month, n_send_slack_msg, n_slack_msg) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    marital_status: n_marital_status,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    team: n_team,\n    dateofjoining: n_dateofjoining,\n    work_email: n_work_email,\n    other_email: n_other_email,\n    gender: n_gender,\n    dob: n_dob,\n    permanent_address: n_address2,\n    current_address: n_address1,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    training_completion_date: n_training_completion_date,\n    termination_date: n_termination_date,\n    training_month: n_training_month,\n    holding_comments: n_holding_comments,\n    send_slack_msg: n_send_slack_msg,\n    slack_msg: n_slack_msg\n  });\n}\n\nexport function updateUserProfileDetails(new_profile_details) {\n  return function (dispatch, getState) {\n    var n_user_id = \"\";\n    var n_name = \"\";\n    var n_jobtitle = \"\";\n    var n_team = \"\";\n    var n_dateofjoining = \"\";\n    var n_work_email = \"\";\n    var n_other_email = \"\";\n    var n_gender = \"\";\n    var n_dob = \"\";\n    var n_marital_status = \"\";\n    var n_address1 = \"\";\n    var n_address2 = \"\";\n    var n_emergency_ph1 = \"\";\n    var n_emergency_ph2 = \"\";\n    var n_blood_group = \"\";\n    var n_medical_condition = \"\";\n    var n_send_slack_msg = new_profile_details.send_slack_msg;\n    var n_slack_msg = new_profile_details.slack_msg;\n    var n_training_completion_date = \"\";\n    var n_termination_date = \"\";\n    var n_holding_comments = \"\";\n    var n_training_month = \"\";\n\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n\n    if (typeof new_profile_details.name !== \"undefined\") {\n      n_name = new_profile_details.name;\n    }\n\n    if (typeof new_profile_details.jobtitle !== \"undefined\") {\n      n_jobtitle = new_profile_details.jobtitle;\n    }\n\n    if (typeof new_profile_details.team !== \"undefined\") {\n      n_team = new_profile_details.team;\n    }\n\n    if (typeof new_profile_details.dateofjoining !== \"undefined\" && new_profile_details.dateofjoining != null) {\n      n_dateofjoining = new_profile_details.dateofjoining;\n    }\n\n    if (typeof new_profile_details.training_month !== \"undefined\" && new_profile_details.training_month != null) {\n      n_training_month = new_profile_details.training_month;\n    }\n\n    if (typeof new_profile_details.work_email !== \"undefined\") {\n      n_work_email = new_profile_details.work_email;\n    }\n\n    if (typeof new_profile_details.other_email !== \"undefined\") {\n      n_other_email = new_profile_details.other_email;\n    }\n\n    if (typeof new_profile_details.gender !== \"undefined\") {\n      n_gender = new_profile_details.gender;\n    }\n\n    if (typeof new_profile_details.dob !== \"undefined\" && new_profile_details.dob != null) {\n      var mydate = new Date(new_profile_details.dob);\n\n      if (mydate) {\n        n_dob = moment(mydate).format(\"YYYY-MM-DD\");\n      }\n    }\n\n    if (typeof new_profile_details.marital_status !== \"undefined\") {\n      n_marital_status = new_profile_details.marital_status;\n    }\n\n    if (typeof new_profile_details.address1 !== \"undefined\") {\n      n_address1 = new_profile_details.address1;\n    }\n\n    if (typeof new_profile_details.address2 !== \"undefined\") {\n      n_address2 = new_profile_details.address2;\n    }\n\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n\n    if (typeof new_profile_details.training_completion_date !== \"undefined\" && new_profile_details.training_completion_date != null) {\n      n_training_completion_date = new_profile_details.training_completion_date;\n    }\n\n    if (typeof new_profile_details.termination_date !== \"undefined\" && new_profile_details.termination_date != null) {\n      n_termination_date = new_profile_details.termination_date;\n    }\n\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n\n    if (n_name.trim() === \"\") {\n      return Promise.reject(\"Name is empty\");\n    }\n\n    if (n_jobtitle.trim() === \"\") {\n      return Promise.reject(\"Jobtitle is empty\");\n    }\n\n    if (n_dateofjoining.trim() === \"\") {\n      return Promise.reject(\"Joining date is empty\");\n    }\n\n    if (n_work_email.trim() === \"\") {\n      return Promise.reject(\"Work email is empty\");\n    }\n\n    if (n_other_email.trim() === \"\") {\n      return Promise.reject(\"Personal email is empty\");\n    }\n\n    if (n_gender.trim() === \"\") {\n      return Promise.reject(\"Gender is empty\");\n    }\n\n    if (n_dob.trim() === \"\") {\n      return Promise.reject(\"Date of birth is empty\");\n    }\n\n    if (n_marital_status.trim() === \"\") {\n      return Promise.reject(\"Marital status not selected\");\n    }\n\n    if (n_address1.trim() === \"\") {\n      return Promise.reject(\"Current address is empty\");\n    }\n\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n\n    if (n_training_month.trim() === \"\") {\n      return Promise.reject(\"Training month is Empty\");\n    } // if (n_training_completion_date.trim() === \"\") {\n    //   return Promise.reject('Training Completion Date  is empty')\n    // }\n    // if (n_termination_date.trim() === \"\") {\n    //   return Promise.reject('Termination date empty')\n    // }\n    // if (n_holding_comments.trim() === \"\") {\n    //   return Promise.reject('Holding amount comment is empty')\n    // }\n\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_updateUserProfileDetails(n_user_id, n_name, n_jobtitle, n_team, n_dateofjoining, n_work_email, n_other_email, n_gender, n_dob, n_marital_status, n_address1, n_address2, n_emergency_ph1, n_emergency_ph2, n_blood_group, n_medical_condition, n_training_completion_date, n_termination_date, n_holding_comments, n_training_month, n_send_slack_msg, n_slack_msg).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(getUserProfileDetails(n_user_id));\n          dispatch(success_update_user_profile_details(json.data.message));\n        } else {\n          dispatch(error_update_user_profile_details(json.data.message));\n          reject(json.data);\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_update_user_profile_details(\"error occurs!!!\"));\n      });\n    });\n  };\n} // -------add New employee\n\nexport function success_add_new_employee(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_EMPLOYEE)(data);\n}\nexport function error_add_new_employee(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_EMPLOYEE)(data);\n}\n\nfunction async_addNewEmployee(n_dateofjoining, n_name, n_jobtitle, n_gender, n_dob, n_username, n_training_month, n_workemail) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"add_new_employee\",\n    dateofjoining: n_dateofjoining,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    gender: n_gender,\n    dob: n_dob,\n    username: n_username,\n    training_month: n_training_month,\n    workemail: n_workemail\n  });\n}\n\nexport function addNewEmployee(new_employee_details) {\n  return function (dispatch, getState) {\n    var n_dateofjoining = \"\";\n    var n_name = \"\";\n    var n_jobtitle = \"\";\n    var n_gender = \"\";\n    var n_dob = \"\";\n    var n_username = \"\";\n    var n_training_month = \"\";\n    var n_workemail = \"\";\n\n    if (typeof new_employee_details.dateofjoining === \"undefined\" || new_employee_details.dateofjoining == \"\") {\n      return Promise.reject(\"Date of Joining is empty\");\n    } else {\n      n_dateofjoining = new_employee_details.dateofjoining;\n    }\n\n    if (typeof new_employee_details.name === \"undefined\" || new_employee_details.name == \"\") {\n      return Promise.reject(\"Name is empty\");\n    } else {\n      n_name = new_employee_details.name;\n    }\n\n    if (typeof new_employee_details.jobtitle === \"undefined\" || new_employee_details.jobtitle == \"\") {\n      return Promise.reject(\"Job Title is empty\");\n    } else {\n      n_jobtitle = new_employee_details.jobtitle;\n    }\n\n    if (typeof new_employee_details.gender === \"undefined\" || new_employee_details.gender == \"\") {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (typeof new_employee_details.dob === \"undefined\" || new_employee_details.dob == \"\") {\n      return Promise.reject(\"Date of birth is empty\");\n    } else {\n      n_dob = new_employee_details.dob;\n    }\n\n    if (typeof new_employee_details.gender === \"undefined\" || new_employee_details.gender == \"\") {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (typeof new_employee_details.username === \"undefined\" || new_employee_details.username == \"\") {\n      return Promise.reject(\"Username is empty\");\n    } else {\n      n_username = new_employee_details.username;\n    }\n\n    if (typeof new_employee_details.training_month === \"undefined\" || new_employee_details.training_month == \"\") {\n      return Promise.reject(\"training month is empty\");\n    } else {\n      n_training_month = new_employee_details.training_month;\n    }\n\n    if (typeof new_employee_details.workemail === \"undefined\" || new_employee_details.workemail == \"\") {\n      return Promise.reject(\"Work email is empty\");\n    } else {\n      n_workemail = new_employee_details.workemail;\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_addNewEmployee(n_dateofjoining, n_name, n_jobtitle, n_gender, n_dob, n_username, n_training_month, n_workemail).then(function (json) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (json.error == 0) {\n          dispatch(success_add_new_employee(json.data));\n          resolve(json.data);\n        } else {\n          dispatch(error_add_new_employee(json.data.message));\n          reject(json.data.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_add_new_employee(\"error occurs!!!\"));\n        reject(\"error occurs!!!\");\n      });\n    });\n  };\n} // ---------get user document\n\nexport function success_user_document(data) {\n  return createAction(constants.ACTION_SUCCESS_USER_DOCUMENT)(data);\n}\nexport function error_user_document(data) {\n  return createAction(constants.ACTION_ERROR_USER_DOCUMENT)(data);\n}\n\nfunction async_getUserDocument(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_document_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserDocument(userid) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      async_getUserDocument(userid).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          dispatch(success_user_document(json.data)); // resolve('disabled')\n        } else {\n          dispatch(error_user_document(json.data.message)); // reject('response with Error')\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(error_user_document(\"error occurs!!!\")); // reject('error occurs!!')\n      });\n    });\n  };\n} // ------Delete user document\n\nfunction async_deleteDocument(doc_id) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"delete_user_document\",\n    id: doc_id\n  });\n}\n\nexport function deleteDocument(doc_id) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      async_deleteDocument(doc_id).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          resolve(json.data.message);\n        } else {\n          reject(json.data.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        reject(\"error occurs!!\");\n      });\n    });\n  };\n} // --------changeEmployeeStatus Enable/Disable user\n\nfunction async_changeEmployeeStatus(userid, status) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"change_employee_status\",\n    user_id: userid,\n    status: status\n  });\n}\n\nexport function changeEmployeeStatus(userid, status) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      async_changeEmployeeStatus(userid, status).then(function (json) {\n        if (json.error === 0) {\n          resolve(\"User disabled\");\n        } else {\n          reject(json.data.message);\n        }\n      }, function (error) {\n        reject(\"error occurs!!\");\n      });\n    });\n  };\n}\n\nfunction successGetStep(data) {\n  return createAction(constants.ACTION_SUCCESS_GET_STEPS)(data);\n}\n\nfunction errorGetStep(data) {\n  return createAction(constants.ACTION_ERROR_GET_STEPS)(data);\n}\n\nvar callApiSteps = queue(function (userid, dispatch, callback) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  }).then(function (json) {\n    if (json.error == 0) {\n      dispatch(successGetStep(json.data));\n    } else {\n      // reject(json.data.message);\n      dispatch(errorGetStep());\n    }\n  }); // callback(json);\n}, 1);\n\nfunction asyncGetSteps(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  });\n}\n\nexport function getSteps(userid) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      asyncGetSteps(userid).then(function (json) {\n        if (json.error == 0) {\n          resolve(json.message);\n          dispatch(successGetStep(json.data));\n        } else {\n          reject(json.data.message);\n          dispatch(errorGetStep(json.data.message));\n        }\n      }, function (error) {\n        reject(\"error occurs!!\");\n      });\n    });\n  };\n}\n\nfunction successEmployeeStep(data) {\n  return createAction(constants.ACTION_SUCCESS_EMPLOYEE_STEPS)(data);\n}\n\nfunction errorEmployeeStep(data) {\n  return createAction(constants.ACTION_ERROR_EMPLOYEE_STEPS)(data);\n}\n\nfunction asyncChangeSteps(userid, stepid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_employee_life_cycle\",\n    userid: userid,\n    stepid: stepid\n  });\n}\n\nexport function changeSteps(userid, stepid) {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      asyncChangeSteps(userid, stepid).then(function (json) {\n        if (json.error == 0) {\n          resolve(json.data.message); // dispatch(getSteps(userid));\n          // dispatch(successEmployeeStep(json.data));\n        } else {\n          reject(json.data.message);\n          dispatch(errorEmployeeStep(json.data.message));\n        }\n      }, function (error) {\n        reject(\"error occurs!!\");\n      });\n    });\n  };\n}\nexport function successAddNewUserDetails(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_USER_DETAILS)(data);\n}\nexport function errorAddNewUserDetails(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_USER_DETAILS)(data);\n}\n\nfunction async_addNewUserDetails(n_user_id, n_address2, n_emergency_ph1, n_emergency_ph2, n_blood_group, n_medical_condition, n_holding_comments, n_signature) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    permanent_address: n_address2,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    holding_comments: n_holding_comments,\n    signature: n_signature\n  });\n}\n\nexport function addNewUserDetails(new_profile_details) {\n  return function (dispatch, getState) {\n    var n_user_id = \"\";\n    var n_address2 = \"\";\n    var n_emergency_ph1 = \"\";\n    var n_emergency_ph2 = \"\";\n    var n_blood_group = \"\";\n    var n_medical_condition = \"\";\n    var n_holding_comments = \"\";\n    var n_signature = \"\";\n\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n\n    if (typeof new_profile_details.signature !== \"undefined\") {\n      n_signature = new_profile_details.signature;\n    }\n\n    if (typeof new_profile_details.permanent_address !== \"undefined\") {\n      n_address2 = new_profile_details.permanent_address;\n    }\n\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n\n    if (n_signature.trim() === \"\") {\n      return Promise.reject(\"signature is empty\");\n    }\n\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_addNewUserDetails(n_user_id, n_address2, n_emergency_ph1, n_emergency_ph2, n_blood_group, n_medical_condition, n_holding_comments, n_signature).then(function (res) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (res.error == 0) {\n          resolve(res.data);\n          dispatch(successAddNewUserDetails(res.data));\n        } else {\n          dispatch(errorAddNewUserDetails(res.data));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        dispatch(errorAddNewUserDetails(\"error occurs!!!\"));\n      });\n    });\n  };\n}\nexport function successGetAllEmployeeDetails(data) {\n  return createAction(constants.SUCCESS_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\nexport function errorGetAllEmployeeDetails(data) {\n  return createAction(constants.ERROR_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\n\nfunction async_getAllEmployeeDetails() {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_enabled_users_brief_details\"\n  });\n}\n\nexport function getAllEmployeeDetails() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading()); // show loading icon\n\n      async_getAllEmployeeDetails().then(function (res) {\n        if (res.error == 0) {\n          resolve(res.data);\n          dispatch(successGetAllEmployeeDetails(res.data));\n\n          if (res.data.length) {\n            dispatch(getEmployeesSalaryDetails(res.data));\n          }\n        } else {\n          dispatch(errorGetAllEmployeeDetails(res.data));\n        }\n\n        dispatch(hide_loading()); // hide loading icon\n      }, function (error) {\n        console.log('error', error);\n        dispatch(hide_loading()); // hide loading icon\n      });\n    });\n  };\n}\n\nfunction async_get_user_salary_details(userid) {\n  return fireAjax('POST', '', {\n    action: 'get_user_salary_info_by_id',\n    user_id: userid\n  });\n}\n\nexport function getEmployeesSalaryDetails(users) {\n  var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      var userid = users[i].user_Id;\n      dispatch(show_loading()); // show loading icon\n\n      async_get_user_salary_details(userid).then(function (json) {\n        if (typeof json.data !== 'undefined' && typeof json.data.salary_details !== 'undefined' && json.data.salary_details.length > 0) {\n          var data = json.data;\n\n          var orderedSalary = _.orderBy(json.data.salary_details, ['date'], ['desc']);\n\n          users[i].current_salary = orderedSalary[0].test && orderedSalary[0].test.total_salary;\n          dispatch(successGetAllEmployeeDetails(users));\n        }\n\n        dispatch(hide_loading()); // hide loading icon\n\n        if (users.length > ++i) {\n          dispatch(getEmployeesSalaryDetails(users, i));\n        }\n      }, function (error) {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (users.length > ++i) {\n          dispatch(getEmployeesSalaryDetails(users, i));\n        }\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/manageUsers/actions/manageUsers.js"],"names":["createAction","_","queue","fireAjax","show_loading","hide_loading","constants","func","moment","require","success_user_profile","data","username","type","ACTION_SUCCESS_USER_PROFILE","payload","empty_user_profile","ACTION_EMPTY_USER_PROFILE","error_user_profile","ACTION_ERROR_USER_PROFILE","async_getUserProfileDetails","userid","action","user_id","getUserProfileDetails","dispatch","getState","Promise","resolve","reject","then","json","error","message","success_update_user_profile_details","ACTION_SUCCESS_UPDATE_USER_PROFILE_DETAILS","error_update_user_profile_details","ACTION_ERROR_UPDATE_USER_PROFILE_DETAILS","async_updateUserProfileDetails","n_user_id","n_name","n_jobtitle","n_team","n_dateofjoining","n_work_email","n_other_email","n_gender","n_dob","n_marital_status","n_address1","n_address2","n_emergency_ph1","n_emergency_ph2","n_blood_group","n_medical_condition","n_training_completion_date","n_termination_date","n_holding_comments","n_training_month","n_send_slack_msg","n_slack_msg","marital_status","name","jobtitle","team","dateofjoining","work_email","other_email","gender","dob","permanent_address","current_address","emergency_ph1","emergency_ph2","blood_group","medical_condition","training_completion_date","termination_date","training_month","holding_comments","send_slack_msg","slack_msg","updateUserProfileDetails","new_profile_details","mydate","Date","format","address1","address2","trim","success_add_new_employee","ACTION_SUCCESS_ADD_NEW_EMPLOYEE","error_add_new_employee","ACTION_ERROR_ADD_NEW_EMPLOYEE","async_addNewEmployee","n_username","n_workemail","workemail","addNewEmployee","new_employee_details","success_user_document","ACTION_SUCCESS_USER_DOCUMENT","error_user_document","ACTION_ERROR_USER_DOCUMENT","async_getUserDocument","getUserDocument","async_deleteDocument","doc_id","id","deleteDocument","async_changeEmployeeStatus","status","changeEmployeeStatus","successGetStep","ACTION_SUCCESS_GET_STEPS","errorGetStep","ACTION_ERROR_GET_STEPS","callApiSteps","callback","asyncGetSteps","getSteps","successEmployeeStep","ACTION_SUCCESS_EMPLOYEE_STEPS","errorEmployeeStep","ACTION_ERROR_EMPLOYEE_STEPS","asyncChangeSteps","stepid","changeSteps","successAddNewUserDetails","ACTION_SUCCESS_ADD_NEW_USER_DETAILS","errorAddNewUserDetails","ACTION_ERROR_ADD_NEW_USER_DETAILS","async_addNewUserDetails","n_signature","signature","addNewUserDetails","res","successGetAllEmployeeDetails","SUCCESS_GET_ALL_EMPLOYEE_DETAILS","errorGetAllEmployeeDetails","ERROR_GET_ALL_EMPLOYEE_DETAILS","async_getAllEmployeeDetails","getAllEmployeeDetails","length","getEmployeesSalaryDetails","console","log","async_get_user_salary_details","users","i","user_Id","salary_details","orderedSalary","orderBy","current_salary","test","total_salary"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,yCAA3C;AACA,OAAO,KAAKC,SAAZ,MAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,YAArB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,QAApC,EAA8C;AACnD,SAAO;AACLC,IAAAA,IAAI,EAAEP,SAAS,CAACQ,2BADX;AAELC,IAAAA,OAAO,EAAEJ,IAFJ;AAGLC,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD;AACD,OAAO,SAASI,kBAAT,CAA4BL,IAA5B,EAAkC;AACvC,SAAOX,YAAY,CAACM,SAAS,CAACW,yBAAX,CAAZ,CAAkDN,IAAlD,CAAP;AACD;AACD,OAAO,SAASO,kBAAT,CAA4BP,IAA5B,EAAkC;AACvC,SAAOX,YAAY,CAACM,SAAS,CAACa,yBAAX,CAAZ,CAAkDR,IAAlD,CAAP;AACD;;AAED,SAASS,2BAAT,CAAqCC,MAArC,EAA6C;AAC3C,SAAOlB,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,+BADkB;AAE1BC,IAAAA,OAAO,EAAEF;AAFiB,GAAb,CAAf;AAID;;AAED,OAAO,SAASG,qBAAT,CAA+BH,MAA/B,EAAuCT,QAAvC,EAAiD;AACtD,SAAO,UAASa,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1BgB,MAAAA,2BAA2B,CAACC,MAAD,CAA3B,CAAoCS,IAApC,CACE,UAAAC,IAAI,EAAI;AACNN,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADM,CACoB;;AAC1B,YAAI0B,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBP,UAAAA,QAAQ,CAACf,oBAAoB,CAACqB,IAAI,CAACpB,IAAN,EAAYC,QAAZ,CAArB,CAAR;AACD,SAFD,MAEO;AACLa,UAAAA,QAAQ,CAACT,kBAAkB,CAACe,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAnB,CAAR;AACD;AACF,OARH,EASE,UAAAD,KAAK,EAAI;AACPP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADO,CACmB;;AAC1BoB,QAAAA,QAAQ,CAACP,kBAAkB,CAAC,iBAAD,CAAnB,CAAR;AACD,OAZH;AAcD,KAhBM,CAAP;AAiBD,GAlBD;AAmBD,C,CAED;;AAEA,OAAO,SAASgB,mCAAT,CAA6CvB,IAA7C,EAAmD;AACxD,SAAOX,YAAY,CAACM,SAAS,CAAC6B,0CAAX,CAAZ,CACLxB,IADK,CAAP;AAGD;AACD,OAAO,SAASyB,iCAAT,CAA2CzB,IAA3C,EAAiD;AACtD,SAAOX,YAAY,CAACM,SAAS,CAAC+B,wCAAX,CAAZ,CAAiE1B,IAAjE,CAAP;AACD;;AAED,SAAS2B,8BAAT,CACEC,SADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,eALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,QARF,EASEC,KATF,EAUEC,gBAVF,EAWEC,UAXF,EAYEC,UAZF,EAaEC,eAbF,EAcEC,eAdF,EAeEC,aAfF,EAgBEC,mBAhBF,EAiBEC,0BAjBF,EAkBEC,kBAlBF,EAmBEC,kBAnBF,EAoBEC,gBApBF,EAqBEC,gBArBF,EAsBEC,WAtBF,EAuBE;AACA,SAAOzD,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,kCADkB;AAE1BC,IAAAA,OAAO,EAAEgB,SAFiB;AAG1BsB,IAAAA,cAAc,EAAEb,gBAHU;AAI1Bc,IAAAA,IAAI,EAAEtB,MAJoB;AAK1BuB,IAAAA,QAAQ,EAAEtB,UALgB;AAM1BuB,IAAAA,IAAI,EAAEtB,MANoB;AAO1BuB,IAAAA,aAAa,EAAEtB,eAPW;AAQ1BuB,IAAAA,UAAU,EAAEtB,YARc;AAS1BuB,IAAAA,WAAW,EAAEtB,aATa;AAU1BuB,IAAAA,MAAM,EAAEtB,QAVkB;AAW1BuB,IAAAA,GAAG,EAAEtB,KAXqB;AAY1BuB,IAAAA,iBAAiB,EAAEpB,UAZO;AAa1BqB,IAAAA,eAAe,EAAEtB,UAbS;AAc1BuB,IAAAA,aAAa,EAAErB,eAdW;AAe1BsB,IAAAA,aAAa,EAAErB,eAfW;AAgB1BsB,IAAAA,WAAW,EAAErB,aAhBa;AAiB1BsB,IAAAA,iBAAiB,EAAErB,mBAjBO;AAkB1BsB,IAAAA,wBAAwB,EAAErB,0BAlBA;AAmB1BsB,IAAAA,gBAAgB,EAAErB,kBAnBQ;AAoB1BsB,IAAAA,cAAc,EAAEpB,gBApBU;AAqB1BqB,IAAAA,gBAAgB,EAAEtB,kBArBQ;AAsB1BuB,IAAAA,cAAc,EAAErB,gBAtBU;AAuB1BsB,IAAAA,SAAS,EAAErB;AAvBe,GAAb,CAAf;AAyBD;;AAED,OAAO,SAASsB,wBAAT,CAAkCC,mBAAlC,EAAuD;AAC5D,SAAO,UAAS1D,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,QAAIa,SAAS,GAAG,EAAhB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,gBAAgB,GAAG,EAAvB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,mBAAmB,GAAG,EAA1B;AACA,QAAIK,gBAAgB,GAAGwB,mBAAmB,CAACH,cAA3C;AACA,QAAIpB,WAAW,GAAGuB,mBAAmB,CAACF,SAAtC;AACA,QAAI1B,0BAA0B,GAAG,EAAjC;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,gBAAgB,GAAG,EAAvB;;AAEA,QAAI,OAAOyB,mBAAmB,CAAC5D,OAA3B,KAAuC,WAA3C,EAAwD;AACtDgB,MAAAA,SAAS,GAAG4C,mBAAmB,CAAC5D,OAAhC;AACD;;AACD,QAAI,OAAO4D,mBAAmB,CAACrB,IAA3B,KAAoC,WAAxC,EAAqD;AACnDtB,MAAAA,MAAM,GAAG2C,mBAAmB,CAACrB,IAA7B;AACD;;AACD,QAAI,OAAOqB,mBAAmB,CAACpB,QAA3B,KAAwC,WAA5C,EAAyD;AACvDtB,MAAAA,UAAU,GAAG0C,mBAAmB,CAACpB,QAAjC;AACD;;AACD,QAAI,OAAOoB,mBAAmB,CAACnB,IAA3B,KAAoC,WAAxC,EAAqD;AACnDtB,MAAAA,MAAM,GAAGyC,mBAAmB,CAACnB,IAA7B;AACD;;AACD,QACE,OAAOmB,mBAAmB,CAAClB,aAA3B,KAA6C,WAA7C,IACAkB,mBAAmB,CAAClB,aAApB,IAAqC,IAFvC,EAGE;AACAtB,MAAAA,eAAe,GAAGwC,mBAAmB,CAAClB,aAAtC;AACD;;AAED,QACE,OAAOkB,mBAAmB,CAACL,cAA3B,KAA8C,WAA9C,IACAK,mBAAmB,CAACL,cAApB,IAAsC,IAFxC,EAGE;AACApB,MAAAA,gBAAgB,GAAGyB,mBAAmB,CAACL,cAAvC;AACD;;AAED,QAAI,OAAOK,mBAAmB,CAACjB,UAA3B,KAA0C,WAA9C,EAA2D;AACzDtB,MAAAA,YAAY,GAAGuC,mBAAmB,CAACjB,UAAnC;AACD;;AACD,QAAI,OAAOiB,mBAAmB,CAAChB,WAA3B,KAA2C,WAA/C,EAA4D;AAC1DtB,MAAAA,aAAa,GAAGsC,mBAAmB,CAAChB,WAApC;AACD;;AACD,QAAI,OAAOgB,mBAAmB,CAACf,MAA3B,KAAsC,WAA1C,EAAuD;AACrDtB,MAAAA,QAAQ,GAAGqC,mBAAmB,CAACf,MAA/B;AACD;;AACD,QACE,OAAOe,mBAAmB,CAACd,GAA3B,KAAmC,WAAnC,IACAc,mBAAmB,CAACd,GAApB,IAA2B,IAF7B,EAGE;AACA,UAAIe,MAAM,GAAG,IAAIC,IAAJ,CAASF,mBAAmB,CAACd,GAA7B,CAAb;;AACA,UAAIe,MAAJ,EAAY;AACVrC,QAAAA,KAAK,GAAGvC,MAAM,CAAC4E,MAAD,CAAN,CAAeE,MAAf,CAAsB,YAAtB,CAAR;AACD;AACF;;AAED,QAAI,OAAOH,mBAAmB,CAACtB,cAA3B,KAA8C,WAAlD,EAA+D;AAC7Db,MAAAA,gBAAgB,GAAGmC,mBAAmB,CAACtB,cAAvC;AACD;;AAED,QAAI,OAAOsB,mBAAmB,CAACI,QAA3B,KAAwC,WAA5C,EAAyD;AACvDtC,MAAAA,UAAU,GAAGkC,mBAAmB,CAACI,QAAjC;AACD;;AACD,QAAI,OAAOJ,mBAAmB,CAACK,QAA3B,KAAwC,WAA5C,EAAyD;AACvDtC,MAAAA,UAAU,GAAGiC,mBAAmB,CAACK,QAAjC;AACD;;AACD,QAAI,OAAOL,mBAAmB,CAACX,aAA3B,KAA6C,WAAjD,EAA8D;AAC5DrB,MAAAA,eAAe,GAAGgC,mBAAmB,CAACX,aAAtC;AACD;;AACD,QAAI,OAAOW,mBAAmB,CAACV,aAA3B,KAA6C,WAAjD,EAA8D;AAC5DrB,MAAAA,eAAe,GAAG+B,mBAAmB,CAACV,aAAtC;AACD;;AACD,QAAI,OAAOU,mBAAmB,CAACT,WAA3B,KAA2C,WAA/C,EAA4D;AAC1DrB,MAAAA,aAAa,GAAG8B,mBAAmB,CAACT,WAApC;AACD;;AACD,QAAI,OAAOS,mBAAmB,CAACR,iBAA3B,KAAiD,WAArD,EAAkE;AAChErB,MAAAA,mBAAmB,GAAG6B,mBAAmB,CAACR,iBAA1C;AACD;;AACD,QACE,OAAOQ,mBAAmB,CAACP,wBAA3B,KAAwD,WAAxD,IACAO,mBAAmB,CAACP,wBAApB,IAAgD,IAFlD,EAGE;AACArB,MAAAA,0BAA0B,GAAG4B,mBAAmB,CAACP,wBAAjD;AACD;;AACD,QACE,OAAOO,mBAAmB,CAACN,gBAA3B,KAAgD,WAAhD,IACAM,mBAAmB,CAACN,gBAApB,IAAwC,IAF1C,EAGE;AACArB,MAAAA,kBAAkB,GAAG2B,mBAAmB,CAACN,gBAAzC;AACD;;AACD,QAAI,OAAOM,mBAAmB,CAACJ,gBAA3B,KAAgD,WAApD,EAAiE;AAC/DtB,MAAAA,kBAAkB,GAAG0B,mBAAmB,CAACJ,gBAAzC;AACD;;AAED,QAAIxC,SAAS,CAACkD,IAAV,OAAqB,EAAzB,EAA6B;AAC3B,aAAO9D,OAAO,CAACE,MAAR,CAAe,kBAAf,CAAP;AACD;;AACD,QAAIW,MAAM,CAACiD,IAAP,OAAkB,EAAtB,EAA0B;AACxB,aAAO9D,OAAO,CAACE,MAAR,CAAe,eAAf,CAAP;AACD;;AACD,QAAIY,UAAU,CAACgD,IAAX,OAAsB,EAA1B,EAA8B;AAC5B,aAAO9D,OAAO,CAACE,MAAR,CAAe,mBAAf,CAAP;AACD;;AACD,QAAIc,eAAe,CAAC8C,IAAhB,OAA2B,EAA/B,EAAmC;AACjC,aAAO9D,OAAO,CAACE,MAAR,CAAe,uBAAf,CAAP;AACD;;AACD,QAAIe,YAAY,CAAC6C,IAAb,OAAwB,EAA5B,EAAgC;AAC9B,aAAO9D,OAAO,CAACE,MAAR,CAAe,qBAAf,CAAP;AACD;;AACD,QAAIgB,aAAa,CAAC4C,IAAd,OAAyB,EAA7B,EAAiC;AAC/B,aAAO9D,OAAO,CAACE,MAAR,CAAe,yBAAf,CAAP;AACD;;AACD,QAAIiB,QAAQ,CAAC2C,IAAT,OAAoB,EAAxB,EAA4B;AAC1B,aAAO9D,OAAO,CAACE,MAAR,CAAe,iBAAf,CAAP;AACD;;AACD,QAAIkB,KAAK,CAAC0C,IAAN,OAAiB,EAArB,EAAyB;AACvB,aAAO9D,OAAO,CAACE,MAAR,CAAe,wBAAf,CAAP;AACD;;AACD,QAAImB,gBAAgB,CAACyC,IAAjB,OAA4B,EAAhC,EAAoC;AAClC,aAAO9D,OAAO,CAACE,MAAR,CAAe,6BAAf,CAAP;AACD;;AACD,QAAIoB,UAAU,CAACwC,IAAX,OAAsB,EAA1B,EAA8B;AAC5B,aAAO9D,OAAO,CAACE,MAAR,CAAe,0BAAf,CAAP;AACD;;AACD,QAAIqB,UAAU,CAACuC,IAAX,OAAsB,EAA1B,EAA8B;AAC5B,aAAO9D,OAAO,CAACE,MAAR,CAAe,4BAAf,CAAP;AACD;;AACD,QAAIsB,eAAe,CAACsC,IAAhB,OAA2B,EAA/B,EAAmC;AACjC,aAAO9D,OAAO,CAACE,MAAR,CAAe,+BAAf,CAAP;AACD;;AACD,QAAIuB,eAAe,CAACqC,IAAhB,OAA2B,EAA/B,EAAmC;AACjC,aAAO9D,OAAO,CAACE,MAAR,CAAe,+BAAf,CAAP;AACD;;AACD,QAAIwB,aAAa,CAACoC,IAAd,OAAyB,EAA7B,EAAiC;AAC/B,aAAO9D,OAAO,CAACE,MAAR,CAAe,0BAAf,CAAP;AACD;;AACD,QAAIyB,mBAAmB,CAACmC,IAApB,OAA+B,EAAnC,EAAuC;AACrC,aAAO9D,OAAO,CAACE,MAAR,CAAe,iCAAf,CAAP;AACD;;AAED,QAAI6B,gBAAgB,CAAC+B,IAAjB,OAA4B,EAAhC,EAAoC;AAClC,aAAO9D,OAAO,CAACE,MAAR,CAAe,yBAAf,CAAP;AACD,KA3JiC,CA4JlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1BkC,MAAAA,8BAA8B,CAC5BC,SAD4B,EAE5BC,MAF4B,EAG5BC,UAH4B,EAI5BC,MAJ4B,EAK5BC,eAL4B,EAM5BC,YAN4B,EAO5BC,aAP4B,EAQ5BC,QAR4B,EAS5BC,KAT4B,EAU5BC,gBAV4B,EAW5BC,UAX4B,EAY5BC,UAZ4B,EAa5BC,eAb4B,EAc5BC,eAd4B,EAe5BC,aAf4B,EAgB5BC,mBAhB4B,EAiB5BC,0BAjB4B,EAkB5BC,kBAlB4B,EAmB5BC,kBAnB4B,EAoB5BC,gBApB4B,EAqB5BC,gBArB4B,EAsB5BC,WAtB4B,CAA9B,CAuBE9B,IAvBF,CAwBE,UAAAC,IAAI,EAAI;AACNN,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADM,CACoB;;AAC1B,YAAI0B,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBP,UAAAA,QAAQ,CAACD,qBAAqB,CAACe,SAAD,CAAtB,CAAR;AACAd,UAAAA,QAAQ,CAACS,mCAAmC,CAACH,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAApC,CAAR;AACD,SAHD,MAGO;AACLR,UAAAA,QAAQ,CAACW,iCAAiC,CAACL,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAlC,CAAR;AACAJ,UAAAA,MAAM,CAACE,IAAI,CAACpB,IAAN,CAAN;AACD;AACF,OAjCH,EAkCE,UAAAqB,KAAK,EAAI;AACPP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADO,CACmB;;AAC1BoB,QAAAA,QAAQ,CAACW,iCAAiC,CAAC,iBAAD,CAAlC,CAAR;AACD,OArCH;AAuCD,KAzCM,CAAP;AA0CD,GA/MD;AAgND,C,CAED;;AAEA,OAAO,SAASsD,wBAAT,CAAkC/E,IAAlC,EAAwC;AAC7C,SAAOX,YAAY,CAACM,SAAS,CAACqF,+BAAX,CAAZ,CAAwDhF,IAAxD,CAAP;AACD;AAED,OAAO,SAASiF,sBAAT,CAAgCjF,IAAhC,EAAsC;AAC3C,SAAOX,YAAY,CAACM,SAAS,CAACuF,6BAAX,CAAZ,CAAsDlF,IAAtD,CAAP;AACD;;AAED,SAASmF,oBAAT,CACEnD,eADF,EAEEH,MAFF,EAGEC,UAHF,EAIEK,QAJF,EAKEC,KALF,EAMEgD,UANF,EAOErC,gBAPF,EAQEsC,WARF,EASE;AACA,SAAO7F,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,kBADkB;AAE1B2C,IAAAA,aAAa,EAAEtB,eAFW;AAG1BmB,IAAAA,IAAI,EAAEtB,MAHoB;AAI1BuB,IAAAA,QAAQ,EAAEtB,UAJgB;AAK1B2B,IAAAA,MAAM,EAAEtB,QALkB;AAM1BuB,IAAAA,GAAG,EAAEtB,KANqB;AAO1BnC,IAAAA,QAAQ,EAAEmF,UAPgB;AAQ1BjB,IAAAA,cAAc,EAAEpB,gBARU;AAS1BuC,IAAAA,SAAS,EAAED;AATe,GAAb,CAAf;AAWD;;AAED,OAAO,SAASE,cAAT,CAAwBC,oBAAxB,EAA8C;AACnD,SAAO,UAAS1E,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,QAAIiB,eAAe,GAAG,EAAtB;AACA,QAAIH,MAAM,GAAG,EAAb;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIK,QAAQ,GAAG,EAAf;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIgD,UAAU,GAAG,EAAjB;AACA,QAAIrC,gBAAgB,GAAG,EAAvB;AACA,QAAIsC,WAAW,GAAG,EAAlB;;AAEA,QACE,OAAOG,oBAAoB,CAAClC,aAA5B,KAA8C,WAA9C,IACAkC,oBAAoB,CAAClC,aAArB,IAAsC,EAFxC,EAGE;AACA,aAAOtC,OAAO,CAACE,MAAR,CAAe,0BAAf,CAAP;AACD,KALD,MAKO;AACLc,MAAAA,eAAe,GAAGwD,oBAAoB,CAAClC,aAAvC;AACD;;AAED,QACE,OAAOkC,oBAAoB,CAACrC,IAA5B,KAAqC,WAArC,IACAqC,oBAAoB,CAACrC,IAArB,IAA6B,EAF/B,EAGE;AACA,aAAOnC,OAAO,CAACE,MAAR,CAAe,eAAf,CAAP;AACD,KALD,MAKO;AACLW,MAAAA,MAAM,GAAG2D,oBAAoB,CAACrC,IAA9B;AACD;;AAED,QACE,OAAOqC,oBAAoB,CAACpC,QAA5B,KAAyC,WAAzC,IACAoC,oBAAoB,CAACpC,QAArB,IAAiC,EAFnC,EAGE;AACA,aAAOpC,OAAO,CAACE,MAAR,CAAe,oBAAf,CAAP;AACD,KALD,MAKO;AACLY,MAAAA,UAAU,GAAG0D,oBAAoB,CAACpC,QAAlC;AACD;;AAED,QACE,OAAOoC,oBAAoB,CAAC/B,MAA5B,KAAuC,WAAvC,IACA+B,oBAAoB,CAAC/B,MAArB,IAA+B,EAFjC,EAGE;AACA,aAAOzC,OAAO,CAACE,MAAR,CAAe,iBAAf,CAAP;AACD,KALD,MAKO;AACLiB,MAAAA,QAAQ,GAAGqD,oBAAoB,CAAC/B,MAAhC;AACD;;AAED,QACE,OAAO+B,oBAAoB,CAAC9B,GAA5B,KAAoC,WAApC,IACA8B,oBAAoB,CAAC9B,GAArB,IAA4B,EAF9B,EAGE;AACA,aAAO1C,OAAO,CAACE,MAAR,CAAe,wBAAf,CAAP;AACD,KALD,MAKO;AACLkB,MAAAA,KAAK,GAAGoD,oBAAoB,CAAC9B,GAA7B;AACD;;AAED,QACE,OAAO8B,oBAAoB,CAAC/B,MAA5B,KAAuC,WAAvC,IACA+B,oBAAoB,CAAC/B,MAArB,IAA+B,EAFjC,EAGE;AACA,aAAOzC,OAAO,CAACE,MAAR,CAAe,iBAAf,CAAP;AACD,KALD,MAKO;AACLiB,MAAAA,QAAQ,GAAGqD,oBAAoB,CAAC/B,MAAhC;AACD;;AAED,QACE,OAAO+B,oBAAoB,CAACvF,QAA5B,KAAyC,WAAzC,IACAuF,oBAAoB,CAACvF,QAArB,IAAiC,EAFnC,EAGE;AACA,aAAOe,OAAO,CAACE,MAAR,CAAe,mBAAf,CAAP;AACD,KALD,MAKO;AACLkE,MAAAA,UAAU,GAAGI,oBAAoB,CAACvF,QAAlC;AACD;;AAED,QACE,OAAOuF,oBAAoB,CAACrB,cAA5B,KAA+C,WAA/C,IACAqB,oBAAoB,CAACrB,cAArB,IAAuC,EAFzC,EAGE;AACA,aAAOnD,OAAO,CAACE,MAAR,CAAe,yBAAf,CAAP;AACD,KALD,MAKO;AACL6B,MAAAA,gBAAgB,GAAGyC,oBAAoB,CAACrB,cAAxC;AACD;;AAED,QACE,OAAOqB,oBAAoB,CAACF,SAA5B,KAA0C,WAA1C,IACAE,oBAAoB,CAACF,SAArB,IAAkC,EAFpC,EAGE;AACA,aAAOtE,OAAO,CAACE,MAAR,CAAe,qBAAf,CAAP;AACD,KALD,MAKO;AACLmE,MAAAA,WAAW,GAAGG,oBAAoB,CAACF,SAAnC;AACD;;AAED,WAAO,IAAItE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1B0F,MAAAA,oBAAoB,CAClBnD,eADkB,EAElBH,MAFkB,EAGlBC,UAHkB,EAIlBK,QAJkB,EAKlBC,KALkB,EAMlBgD,UANkB,EAOlBrC,gBAPkB,EAQlBsC,WARkB,CAApB,CASElE,IATF,CAUE,UAAAC,IAAI,EAAI;AACNN,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADM,CACoB;;AAC1B,YAAI0B,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBP,UAAAA,QAAQ,CAACiE,wBAAwB,CAAC3D,IAAI,CAACpB,IAAN,CAAzB,CAAR;AACAiB,UAAAA,OAAO,CAACG,IAAI,CAACpB,IAAN,CAAP;AACD,SAHD,MAGO;AACLc,UAAAA,QAAQ,CAACmE,sBAAsB,CAAC7D,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAvB,CAAR;AACAJ,UAAAA,MAAM,CAACE,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAN;AACD;AACF,OAnBH,EAoBE,UAAAD,KAAK,EAAI;AACPP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADO,CACmB;;AAC1BoB,QAAAA,QAAQ,CAACmE,sBAAsB,CAAC,iBAAD,CAAvB,CAAR;AACA/D,QAAAA,MAAM,CAAC,iBAAD,CAAN;AACD,OAxBH;AA0BD,KA5BM,CAAP;AA6BD,GAxHD;AAyHD,C,CACD;;AAEA,OAAO,SAASuE,qBAAT,CAA+BzF,IAA/B,EAAqC;AAC1C,SAAOX,YAAY,CAACM,SAAS,CAAC+F,4BAAX,CAAZ,CAAqD1F,IAArD,CAAP;AACD;AACD,OAAO,SAAS2F,mBAAT,CAA6B3F,IAA7B,EAAmC;AACxC,SAAOX,YAAY,CAACM,SAAS,CAACiG,0BAAX,CAAZ,CAAmD5F,IAAnD,CAAP;AACD;;AAED,SAAS6F,qBAAT,CAA+BnF,MAA/B,EAAuC;AACrC,SAAOlB,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,yBADkB;AAE1BC,IAAAA,OAAO,EAAEF;AAFiB,GAAb,CAAf;AAID;;AAED,OAAO,SAASoF,eAAT,CAAyBpF,MAAzB,EAAiC;AACtC,SAAO,UAASI,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR;AACAoG,MAAAA,qBAAqB,CAACnF,MAAD,CAArB,CAA8BS,IAA9B,CACE,UAAAC,IAAI,EAAI;AACNN,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR;;AACA,YAAI0B,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBP,UAAAA,QAAQ,CAAC2E,qBAAqB,CAACrE,IAAI,CAACpB,IAAN,CAAtB,CAAR,CADmB,CAEnB;AACD,SAHD,MAGO;AACLc,UAAAA,QAAQ,CAAC6E,mBAAmB,CAACvE,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAApB,CAAR,CADK,CAEL;AACD;AACF,OAVH,EAWE,UAAAD,KAAK,EAAI;AACPP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADO,CACmB;;AAC1BoB,QAAAA,QAAQ,CAAC6E,mBAAmB,CAAC,iBAAD,CAApB,CAAR,CAFO,CAGP;AACD,OAfH;AAiBD,KAnBM,CAAP;AAoBD,GArBD;AAsBD,C,CAED;;AACA,SAASI,oBAAT,CAA8BC,MAA9B,EAAsC;AACpC,SAAOxG,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,sBADkB;AAE1BsF,IAAAA,EAAE,EAAED;AAFsB,GAAb,CAAf;AAID;;AAED,OAAO,SAASE,cAAT,CAAwBF,MAAxB,EAAgC;AACrC,SAAO,UAASlF,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR;AACAsG,MAAAA,oBAAoB,CAACC,MAAD,CAApB,CAA6B7E,IAA7B,CACE,UAAAC,IAAI,EAAI;AACNN,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR;;AACA,YAAI0B,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBJ,UAAAA,OAAO,CAACG,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAP;AACD,SAFD,MAEO;AACLJ,UAAAA,MAAM,CAACE,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAN;AACD;AACF,OARH,EASE,UAAAD,KAAK,EAAI;AACPP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADO,CACmB;;AAC1BwB,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACD,OAZH;AAcD,KAhBM,CAAP;AAiBD,GAlBD;AAmBD,C,CAED;;AAEA,SAASiF,0BAAT,CAAoCzF,MAApC,EAA4C0F,MAA5C,EAAoD;AAClD,SAAO5G,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,wBADkB;AAE1BC,IAAAA,OAAO,EAAEF,MAFiB;AAG1B0F,IAAAA,MAAM,EAAEA;AAHkB,GAAb,CAAf;AAKD;;AAED,OAAO,SAASC,oBAAT,CAA8B3F,MAA9B,EAAsC0F,MAAtC,EAA8C;AACnD,SAAO,UAAStF,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCiF,MAAAA,0BAA0B,CAACzF,MAAD,EAAS0F,MAAT,CAA1B,CAA2CjF,IAA3C,CACE,UAAAC,IAAI,EAAI;AACN,YAAIA,IAAI,CAACC,KAAL,KAAe,CAAnB,EAAsB;AACpBJ,UAAAA,OAAO,CAAC,eAAD,CAAP;AACD,SAFD,MAEO;AACLC,UAAAA,MAAM,CAACE,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAN;AACD;AACF,OAPH,EAQE,UAAAD,KAAK,EAAI;AACPH,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACD,OAVH;AAYD,KAbM,CAAP;AAcD,GAfD;AAgBD;;AAED,SAASoF,cAAT,CAAwBtG,IAAxB,EAA8B;AAC5B,SAAOX,YAAY,CAACM,SAAS,CAAC4G,wBAAX,CAAZ,CAAiDvG,IAAjD,CAAP;AACD;;AACD,SAASwG,YAAT,CAAsBxG,IAAtB,EAA4B;AAC1B,SAAOX,YAAY,CAACM,SAAS,CAAC8G,sBAAX,CAAZ,CAA+CzG,IAA/C,CAAP;AACD;;AAED,IAAI0G,YAAY,GAAGnH,KAAK,CAAC,UAASmB,MAAT,EAAiBI,QAAjB,EAA2B6F,QAA3B,EAAqC;AAC5D,SAAOnH,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,yBADkB;AAE1BD,IAAAA,MAAM,EAAEA;AAFkB,GAAb,CAAR,CAGJS,IAHI,CAGC,UAAAC,IAAI,EAAI;AACd,QAAIA,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBP,MAAAA,QAAQ,CAACwF,cAAc,CAAClF,IAAI,CAACpB,IAAN,CAAf,CAAR;AACD,KAFD,MAEO;AACL;AACAc,MAAAA,QAAQ,CAAC0F,YAAY,EAAb,CAAR;AACD;AACF,GAVM,CAAP,CAD4D,CAY5D;AACD,CAbuB,EAarB,CAbqB,CAAxB;;AAeA,SAASI,aAAT,CAAuBlG,MAAvB,EAA+B;AAC7B,SAAOlB,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,yBADkB;AAE1BD,IAAAA,MAAM,EAAEA;AAFkB,GAAb,CAAf;AAID;;AAED,OAAO,SAASmG,QAAT,CAAkBnG,MAAlB,EAA0B;AAC/B,SAAO,UAASI,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC0F,MAAAA,aAAa,CAAClG,MAAD,CAAb,CAAsBS,IAAtB,CACE,UAAAC,IAAI,EAAI;AACN,YAAIA,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBJ,UAAAA,OAAO,CAACG,IAAI,CAACE,OAAN,CAAP;AACAR,UAAAA,QAAQ,CAACwF,cAAc,CAAClF,IAAI,CAACpB,IAAN,CAAf,CAAR;AACD,SAHD,MAGO;AACLkB,UAAAA,MAAM,CAACE,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAN;AACAR,UAAAA,QAAQ,CAAC0F,YAAY,CAACpF,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAb,CAAR;AACD;AACF,OATH,EAUE,UAAAD,KAAK,EAAI;AACPH,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACD,OAZH;AAcD,KAfM,CAAP;AAgBD,GAjBD;AAkBD;;AAED,SAAS4F,mBAAT,CAA6B9G,IAA7B,EAAmC;AACjC,SAAOX,YAAY,CAACM,SAAS,CAACoH,6BAAX,CAAZ,CAAsD/G,IAAtD,CAAP;AACD;;AACD,SAASgH,iBAAT,CAA2BhH,IAA3B,EAAiC;AAC/B,SAAOX,YAAY,CAACM,SAAS,CAACsH,2BAAX,CAAZ,CAAoDjH,IAApD,CAAP;AACD;;AAED,SAASkH,gBAAT,CAA0BxG,MAA1B,EAAkCyG,MAAlC,EAA0C;AACxC,SAAO3H,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,4BADkB;AAE1BD,IAAAA,MAAM,EAAEA,MAFkB;AAG1ByG,IAAAA,MAAM,EAAEA;AAHkB,GAAb,CAAf;AAKD;;AAED,OAAO,SAASC,WAAT,CAAqB1G,MAArB,EAA6ByG,MAA7B,EAAqC;AAC1C,SAAO,UAASrG,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCgG,MAAAA,gBAAgB,CAACxG,MAAD,EAASyG,MAAT,CAAhB,CAAiChG,IAAjC,CACE,UAAAC,IAAI,EAAI;AACN,YAAIA,IAAI,CAACC,KAAL,IAAc,CAAlB,EAAqB;AACnBJ,UAAAA,OAAO,CAACG,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAP,CADmB,CAEnB;AACA;AACD,SAJD,MAIO;AACLJ,UAAAA,MAAM,CAACE,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAN;AACAR,UAAAA,QAAQ,CAACkG,iBAAiB,CAAC5F,IAAI,CAACpB,IAAL,CAAUsB,OAAX,CAAlB,CAAR;AACD;AACF,OAVH,EAWE,UAAAD,KAAK,EAAI;AACPH,QAAAA,MAAM,CAAC,gBAAD,CAAN;AACD,OAbH;AAeD,KAhBM,CAAP;AAiBD,GAlBD;AAmBD;AAED,OAAO,SAASmG,wBAAT,CAAkCrH,IAAlC,EAAwC;AAC7C,SAAOX,YAAY,CAACM,SAAS,CAAC2H,mCAAX,CAAZ,CAA4DtH,IAA5D,CAAP;AACD;AACD,OAAO,SAASuH,sBAAT,CAAgCvH,IAAhC,EAAsC;AAC3C,SAAOX,YAAY,CAACM,SAAS,CAAC6H,iCAAX,CAAZ,CAA0DxH,IAA1D,CAAP;AACD;;AAED,SAASyH,uBAAT,CACE7F,SADF,EAEEW,UAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,aALF,EAMEC,mBANF,EAOEG,kBAPF,EAQE4E,WARF,EASE;AACA,SAAOlI,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE,kCADkB;AAE1BC,IAAAA,OAAO,EAAEgB,SAFiB;AAG1B+B,IAAAA,iBAAiB,EAAEpB,UAHO;AAI1BsB,IAAAA,aAAa,EAAErB,eAJW;AAK1BsB,IAAAA,aAAa,EAAErB,eALW;AAM1BsB,IAAAA,WAAW,EAAErB,aANa;AAO1BsB,IAAAA,iBAAiB,EAAErB,mBAPO;AAQ1ByB,IAAAA,gBAAgB,EAAEtB,kBARQ;AAS1B6E,IAAAA,SAAS,EAAED;AATe,GAAb,CAAf;AAWD;;AAED,OAAO,SAASE,iBAAT,CAA2BpD,mBAA3B,EAAgD;AACrD,SAAO,UAAS1D,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,QAAIa,SAAS,GAAG,EAAhB;AACA,QAAIW,UAAU,GAAG,EAAjB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,mBAAmB,GAAG,EAA1B;AACA,QAAIG,kBAAkB,GAAG,EAAzB;AACA,QAAI4E,WAAW,GAAG,EAAlB;;AACA,QAAI,OAAOlD,mBAAmB,CAAC5D,OAA3B,KAAuC,WAA3C,EAAwD;AACtDgB,MAAAA,SAAS,GAAG4C,mBAAmB,CAAC5D,OAAhC;AACD;;AACD,QAAI,OAAO4D,mBAAmB,CAACmD,SAA3B,KAAyC,WAA7C,EAA0D;AACxDD,MAAAA,WAAW,GAAGlD,mBAAmB,CAACmD,SAAlC;AACD;;AACD,QAAI,OAAOnD,mBAAmB,CAACb,iBAA3B,KAAiD,WAArD,EAAkE;AAChEpB,MAAAA,UAAU,GAAGiC,mBAAmB,CAACb,iBAAjC;AACD;;AACD,QAAI,OAAOa,mBAAmB,CAACX,aAA3B,KAA6C,WAAjD,EAA8D;AAC5DrB,MAAAA,eAAe,GAAGgC,mBAAmB,CAACX,aAAtC;AACD;;AACD,QAAI,OAAOW,mBAAmB,CAACV,aAA3B,KAA6C,WAAjD,EAA8D;AAC5DrB,MAAAA,eAAe,GAAG+B,mBAAmB,CAACV,aAAtC;AACD;;AACD,QAAI,OAAOU,mBAAmB,CAACT,WAA3B,KAA2C,WAA/C,EAA4D;AAC1DrB,MAAAA,aAAa,GAAG8B,mBAAmB,CAACT,WAApC;AACD;;AACD,QAAI,OAAOS,mBAAmB,CAACR,iBAA3B,KAAiD,WAArD,EAAkE;AAChErB,MAAAA,mBAAmB,GAAG6B,mBAAmB,CAACR,iBAA1C;AACD;;AACD,QAAI,OAAOQ,mBAAmB,CAACJ,gBAA3B,KAAgD,WAApD,EAAiE;AAC/DtB,MAAAA,kBAAkB,GAAG0B,mBAAmB,CAACJ,gBAAzC;AACD;;AAED,QAAIxC,SAAS,CAACkD,IAAV,OAAqB,EAAzB,EAA6B;AAC3B,aAAO9D,OAAO,CAACE,MAAR,CAAe,kBAAf,CAAP;AACD;;AACD,QAAIwG,WAAW,CAAC5C,IAAZ,OAAuB,EAA3B,EAA+B;AAC7B,aAAO9D,OAAO,CAACE,MAAR,CAAe,oBAAf,CAAP;AACD;;AACD,QAAIqB,UAAU,CAACuC,IAAX,OAAsB,EAA1B,EAA8B;AAC5B,aAAO9D,OAAO,CAACE,MAAR,CAAe,4BAAf,CAAP;AACD;;AACD,QAAIsB,eAAe,CAACsC,IAAhB,OAA2B,EAA/B,EAAmC;AACjC,aAAO9D,OAAO,CAACE,MAAR,CAAe,+BAAf,CAAP;AACD;;AACD,QAAIuB,eAAe,CAACqC,IAAhB,OAA2B,EAA/B,EAAmC;AACjC,aAAO9D,OAAO,CAACE,MAAR,CAAe,+BAAf,CAAP;AACD;;AACD,QAAIwB,aAAa,CAACoC,IAAd,OAAyB,EAA7B,EAAiC;AAC/B,aAAO9D,OAAO,CAACE,MAAR,CAAe,0BAAf,CAAP;AACD;;AACD,QAAIyB,mBAAmB,CAACmC,IAApB,OAA+B,EAAnC,EAAuC;AACrC,aAAO9D,OAAO,CAACE,MAAR,CAAe,iCAAf,CAAP;AACD;;AACD,WAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1BgI,MAAAA,uBAAuB,CACrB7F,SADqB,EAErBW,UAFqB,EAGrBC,eAHqB,EAIrBC,eAJqB,EAKrBC,aALqB,EAMrBC,mBANqB,EAOrBG,kBAPqB,EAQrB4E,WARqB,CAAvB,CASEvG,IATF,CAUE,UAAA0G,GAAG,EAAI;AACL/G,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADK,CACqB;;AAC1B,YAAImI,GAAG,CAACxG,KAAJ,IAAa,CAAjB,EAAoB;AAClBJ,UAAAA,OAAO,CAAC4G,GAAG,CAAC7H,IAAL,CAAP;AACAc,UAAAA,QAAQ,CAACuG,wBAAwB,CAACQ,GAAG,CAAC7H,IAAL,CAAzB,CAAR;AACD,SAHD,MAGO;AACLc,UAAAA,QAAQ,CAACyG,sBAAsB,CAACM,GAAG,CAAC7H,IAAL,CAAvB,CAAR;AACD;AACF,OAlBH,EAmBE,UAAAqB,KAAK,EAAI;AACPP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADO,CACmB;;AAC1BoB,QAAAA,QAAQ,CAACyG,sBAAsB,CAAC,iBAAD,CAAvB,CAAR;AACD,OAtBH;AAwBD,KA1BM,CAAP;AA2BD,GAlFD;AAmFD;AAED,OAAO,SAASO,4BAAT,CAAsC9H,IAAtC,EAA4C;AACjD,SAAOX,YAAY,CAACM,SAAS,CAACoI,gCAAX,CAAZ,CAAyD/H,IAAzD,CAAP;AACD;AACD,OAAO,SAASgI,0BAAT,CAAoChI,IAApC,EAA0C;AAC/C,SAAOX,YAAY,CAACM,SAAS,CAACsI,8BAAX,CAAZ,CAAuDjI,IAAvD,CAAP;AACD;;AAED,SAASkI,2BAAT,GAAsC;AACpC,SAAO1I,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAE;AADkB,GAAb,CAAf;AAGD;;AAED,OAAO,SAASwH,qBAAT,GAAiC;AACtC,SAAO,UAASrH,QAAT,EAAmBC,QAAnB,EAA6B;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR,CADsC,CACZ;;AAC1ByI,MAAAA,2BAA2B,GAAG/G,IAA9B,CACE,UAAA0G,GAAG,EAAI;AACL,YAAIA,GAAG,CAACxG,KAAJ,IAAa,CAAjB,EAAoB;AAClBJ,UAAAA,OAAO,CAAC4G,GAAG,CAAC7H,IAAL,CAAP;AACAc,UAAAA,QAAQ,CAACgH,4BAA4B,CAACD,GAAG,CAAC7H,IAAL,CAA7B,CAAR;;AACA,cAAG6H,GAAG,CAAC7H,IAAJ,CAASoI,MAAZ,EAAmB;AACjBtH,YAAAA,QAAQ,CAACuH,yBAAyB,CAACR,GAAG,CAAC7H,IAAL,CAA1B,CAAR;AACD;AACF,SAND,MAMO;AACLc,UAAAA,QAAQ,CAACkH,0BAA0B,CAACH,GAAG,CAAC7H,IAAL,CAA3B,CAAR;AACD;;AACDc,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CAVK,CAUqB;AAC3B,OAZH,EAaE,UAAA2B,KAAK,EAAI;AACPiH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBlH,KAArB;AACAP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CAFO,CAEmB;AAC3B,OAhBH;AAkBD,KApBM,CAAP;AAqBD,GAtBD;AAuBD;;AAED,SAAS8I,6BAAT,CAAwC9H,MAAxC,EAAgD;AAC9C,SAAOlB,QAAQ,CAAC,MAAD,EAAS,EAAT,EAAa;AAC1BmB,IAAAA,MAAM,EAAG,4BADiB;AAE1BC,IAAAA,OAAO,EAAEF;AAFiB,GAAb,CAAf;AAID;;AAED,OAAO,SAAS2H,yBAAT,CAAoCI,KAApC,EAAgD;AAAA,MAALC,CAAK,uEAAH,CAAG;AACrD,SAAO,UAAU5H,QAAV,EAAoBC,QAApB,EAA8B;AACnC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,UAAIR,MAAM,GAAG+H,KAAK,CAACC,CAAD,CAAL,CAASC,OAAtB;AACA7H,MAAAA,QAAQ,CAACrB,YAAY,EAAb,CAAR,CAFoC,CAEV;;AAC1B+I,MAAAA,6BAA6B,CAAC9H,MAAD,CAA7B,CAAsCS,IAAtC,CACE,UAACC,IAAD,EAAU;AACR,YAAI,OAAOA,IAAI,CAACpB,IAAZ,KAAqB,WAArB,IAAoC,OAAOoB,IAAI,CAACpB,IAAL,CAAU4I,cAAjB,KAAoC,WAAxE,IAAuFxH,IAAI,CAACpB,IAAL,CAAU4I,cAAV,CAAyBR,MAAzB,GAAkC,CAA7H,EAAgI;AAC9H,cAAIpI,IAAI,GAAGoB,IAAI,CAACpB,IAAhB;;AACA,cAAI6I,aAAa,GAAGvJ,CAAC,CAACwJ,OAAF,CAAU1H,IAAI,CAACpB,IAAL,CAAU4I,cAApB,EAAmC,CAAC,MAAD,CAAnC,EAA4C,CAAC,MAAD,CAA5C,CAApB;;AACAH,UAAAA,KAAK,CAACC,CAAD,CAAL,CAASK,cAAT,GAA0BF,aAAa,CAAC,CAAD,CAAb,CAAiBG,IAAjB,IAAyBH,aAAa,CAAC,CAAD,CAAb,CAAiBG,IAAjB,CAAsBC,YAAzE;AACAnI,UAAAA,QAAQ,CAACgH,4BAA4B,CAACW,KAAD,CAA7B,CAAR;AACD;;AACD3H,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CAPQ,CAOkB;;AAC1B,YAAG+I,KAAK,CAACL,MAAN,GAAe,EAAEM,CAApB,EAAsB;AACpB5H,UAAAA,QAAQ,CAACuH,yBAAyB,CAACI,KAAD,EAAQC,CAAR,CAA1B,CAAR;AACD;AACF,OAZH,EAaE,UAACrH,KAAD,EAAW;AACTP,QAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR,CADS,CACiB;;AAC1B,YAAG+I,KAAK,CAACL,MAAN,GAAe,EAAEM,CAApB,EAAsB;AACpB5H,UAAAA,QAAQ,CAACuH,yBAAyB,CAACI,KAAD,EAAQC,CAAR,CAA1B,CAAR;AACD;AACF,OAlBH;AAoBH,KAvBM,CAAP;AAwBD,GAzBD;AA0BD","sourcesContent":["import { createAction } from \"redux-actions\";\nimport * as _ from \"lodash\";\nimport queue from \"async/queue\";\n\nimport { fireAjax } from \"../../../services/index\";\nimport { show_loading, hide_loading } from \"../../../redux/generic/actions/frontend\";\nimport * as constants from \"../../../redux/constants\";\nimport { func } from \"prop-types\";\nvar moment = require(\"moment\");\n\nexport function success_user_profile(data, username) {\n  return {\n    type: constants.ACTION_SUCCESS_USER_PROFILE,\n    payload: data,\n    username: username\n  };\n}\nexport function empty_user_profile(data) {\n  return createAction(constants.ACTION_EMPTY_USER_PROFILE)(data);\n}\nexport function error_user_profile(data) {\n  return createAction(constants.ACTION_ERROR_USER_PROFILE)(data);\n}\n\nfunction async_getUserProfileDetails(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_profile_detail_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserProfileDetails(userid, username) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getUserProfileDetails(userid).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(success_user_profile(json.data, username));\n          } else {\n            dispatch(empty_user_profile(json.data.message));\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_user_profile(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\n// -------update profile details\n\nexport function success_update_user_profile_details(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_USER_PROFILE_DETAILS)(\n    data\n  );\n}\nexport function error_update_user_profile_details(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_USER_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateUserProfileDetails(\n  n_user_id,\n  n_name,\n  n_jobtitle,\n  n_team,\n  n_dateofjoining,\n  n_work_email,\n  n_other_email,\n  n_gender,\n  n_dob,\n  n_marital_status,\n  n_address1,\n  n_address2,\n  n_emergency_ph1,\n  n_emergency_ph2,\n  n_blood_group,\n  n_medical_condition,\n  n_training_completion_date,\n  n_termination_date,\n  n_holding_comments,\n  n_training_month,\n  n_send_slack_msg,\n  n_slack_msg\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    marital_status: n_marital_status,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    team: n_team,\n    dateofjoining: n_dateofjoining,\n    work_email: n_work_email,\n    other_email: n_other_email,\n    gender: n_gender,\n    dob: n_dob,\n    permanent_address: n_address2,\n    current_address: n_address1,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    training_completion_date: n_training_completion_date,\n    termination_date: n_termination_date,\n    training_month: n_training_month,\n    holding_comments: n_holding_comments,\n    send_slack_msg: n_send_slack_msg,\n    slack_msg: n_slack_msg\n  });\n}\n\nexport function updateUserProfileDetails(new_profile_details) {\n  return function(dispatch, getState) {\n    let n_user_id = \"\";\n    let n_name = \"\";\n    let n_jobtitle = \"\";\n    let n_team = \"\";\n    let n_dateofjoining = \"\";\n    let n_work_email = \"\";\n    let n_other_email = \"\";\n    let n_gender = \"\";\n    let n_dob = \"\";\n    let n_marital_status = \"\";\n    let n_address1 = \"\";\n    let n_address2 = \"\";\n    let n_emergency_ph1 = \"\";\n    let n_emergency_ph2 = \"\";\n    let n_blood_group = \"\";\n    let n_medical_condition = \"\";\n    let n_send_slack_msg = new_profile_details.send_slack_msg;\n    let n_slack_msg = new_profile_details.slack_msg;\n    let n_training_completion_date = \"\";\n    let n_termination_date = \"\";\n    let n_holding_comments = \"\";\n    let n_training_month = \"\";\n\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n    if (typeof new_profile_details.name !== \"undefined\") {\n      n_name = new_profile_details.name;\n    }\n    if (typeof new_profile_details.jobtitle !== \"undefined\") {\n      n_jobtitle = new_profile_details.jobtitle;\n    }\n    if (typeof new_profile_details.team !== \"undefined\") {\n      n_team = new_profile_details.team;\n    }\n    if (\n      typeof new_profile_details.dateofjoining !== \"undefined\" &&\n      new_profile_details.dateofjoining != null\n    ) {\n      n_dateofjoining = new_profile_details.dateofjoining;\n    }\n\n    if (\n      typeof new_profile_details.training_month !== \"undefined\" &&\n      new_profile_details.training_month != null\n    ) {\n      n_training_month = new_profile_details.training_month;\n    }\n\n    if (typeof new_profile_details.work_email !== \"undefined\") {\n      n_work_email = new_profile_details.work_email;\n    }\n    if (typeof new_profile_details.other_email !== \"undefined\") {\n      n_other_email = new_profile_details.other_email;\n    }\n    if (typeof new_profile_details.gender !== \"undefined\") {\n      n_gender = new_profile_details.gender;\n    }\n    if (\n      typeof new_profile_details.dob !== \"undefined\" &&\n      new_profile_details.dob != null\n    ) {\n      var mydate = new Date(new_profile_details.dob);\n      if (mydate) {\n        n_dob = moment(mydate).format(\"YYYY-MM-DD\");\n      }\n    }\n\n    if (typeof new_profile_details.marital_status !== \"undefined\") {\n      n_marital_status = new_profile_details.marital_status;\n    }\n\n    if (typeof new_profile_details.address1 !== \"undefined\") {\n      n_address1 = new_profile_details.address1;\n    }\n    if (typeof new_profile_details.address2 !== \"undefined\") {\n      n_address2 = new_profile_details.address2;\n    }\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n    if (\n      typeof new_profile_details.training_completion_date !== \"undefined\" &&\n      new_profile_details.training_completion_date != null\n    ) {\n      n_training_completion_date = new_profile_details.training_completion_date;\n    }\n    if (\n      typeof new_profile_details.termination_date !== \"undefined\" &&\n      new_profile_details.termination_date != null\n    ) {\n      n_termination_date = new_profile_details.termination_date;\n    }\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n    if (n_name.trim() === \"\") {\n      return Promise.reject(\"Name is empty\");\n    }\n    if (n_jobtitle.trim() === \"\") {\n      return Promise.reject(\"Jobtitle is empty\");\n    }\n    if (n_dateofjoining.trim() === \"\") {\n      return Promise.reject(\"Joining date is empty\");\n    }\n    if (n_work_email.trim() === \"\") {\n      return Promise.reject(\"Work email is empty\");\n    }\n    if (n_other_email.trim() === \"\") {\n      return Promise.reject(\"Personal email is empty\");\n    }\n    if (n_gender.trim() === \"\") {\n      return Promise.reject(\"Gender is empty\");\n    }\n    if (n_dob.trim() === \"\") {\n      return Promise.reject(\"Date of birth is empty\");\n    }\n    if (n_marital_status.trim() === \"\") {\n      return Promise.reject(\"Marital status not selected\");\n    }\n    if (n_address1.trim() === \"\") {\n      return Promise.reject(\"Current address is empty\");\n    }\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n\n    if (n_training_month.trim() === \"\") {\n      return Promise.reject(\"Training month is Empty\");\n    }\n    // if (n_training_completion_date.trim() === \"\") {\n    //   return Promise.reject('Training Completion Date  is empty')\n    // }\n    // if (n_termination_date.trim() === \"\") {\n    //   return Promise.reject('Termination date empty')\n    // }\n    // if (n_holding_comments.trim() === \"\") {\n    //   return Promise.reject('Holding amount comment is empty')\n    // }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateUserProfileDetails(\n        n_user_id,\n        n_name,\n        n_jobtitle,\n        n_team,\n        n_dateofjoining,\n        n_work_email,\n        n_other_email,\n        n_gender,\n        n_dob,\n        n_marital_status,\n        n_address1,\n        n_address2,\n        n_emergency_ph1,\n        n_emergency_ph2,\n        n_blood_group,\n        n_medical_condition,\n        n_training_completion_date,\n        n_termination_date,\n        n_holding_comments,\n        n_training_month,\n        n_send_slack_msg,\n        n_slack_msg\n      ).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(getUserProfileDetails(n_user_id));\n            dispatch(success_update_user_profile_details(json.data.message));\n          } else {\n            dispatch(error_update_user_profile_details(json.data.message));\n            reject(json.data)\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_update_user_profile_details(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\n// -------add New employee\n\nexport function success_add_new_employee(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_EMPLOYEE)(data);\n}\n\nexport function error_add_new_employee(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_EMPLOYEE)(data);\n}\n\nfunction async_addNewEmployee(\n  n_dateofjoining,\n  n_name,\n  n_jobtitle,\n  n_gender,\n  n_dob,\n  n_username,\n  n_training_month,\n  n_workemail\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"add_new_employee\",\n    dateofjoining: n_dateofjoining,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    gender: n_gender,\n    dob: n_dob,\n    username: n_username,\n    training_month: n_training_month,\n    workemail: n_workemail\n  });\n}\n\nexport function addNewEmployee(new_employee_details) {\n  return function(dispatch, getState) {\n    let n_dateofjoining = \"\";\n    let n_name = \"\";\n    let n_jobtitle = \"\";\n    let n_gender = \"\";\n    let n_dob = \"\";\n    let n_username = \"\";\n    let n_training_month = \"\";\n    let n_workemail = \"\";\n\n    if (\n      typeof new_employee_details.dateofjoining === \"undefined\" ||\n      new_employee_details.dateofjoining == \"\"\n    ) {\n      return Promise.reject(\"Date of Joining is empty\");\n    } else {\n      n_dateofjoining = new_employee_details.dateofjoining;\n    }\n\n    if (\n      typeof new_employee_details.name === \"undefined\" ||\n      new_employee_details.name == \"\"\n    ) {\n      return Promise.reject(\"Name is empty\");\n    } else {\n      n_name = new_employee_details.name;\n    }\n\n    if (\n      typeof new_employee_details.jobtitle === \"undefined\" ||\n      new_employee_details.jobtitle == \"\"\n    ) {\n      return Promise.reject(\"Job Title is empty\");\n    } else {\n      n_jobtitle = new_employee_details.jobtitle;\n    }\n\n    if (\n      typeof new_employee_details.gender === \"undefined\" ||\n      new_employee_details.gender == \"\"\n    ) {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (\n      typeof new_employee_details.dob === \"undefined\" ||\n      new_employee_details.dob == \"\"\n    ) {\n      return Promise.reject(\"Date of birth is empty\");\n    } else {\n      n_dob = new_employee_details.dob;\n    }\n\n    if (\n      typeof new_employee_details.gender === \"undefined\" ||\n      new_employee_details.gender == \"\"\n    ) {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (\n      typeof new_employee_details.username === \"undefined\" ||\n      new_employee_details.username == \"\"\n    ) {\n      return Promise.reject(\"Username is empty\");\n    } else {\n      n_username = new_employee_details.username;\n    }\n\n    if (\n      typeof new_employee_details.training_month === \"undefined\" ||\n      new_employee_details.training_month == \"\"\n    ) {\n      return Promise.reject(\"training month is empty\");\n    } else {\n      n_training_month = new_employee_details.training_month;\n    }\n\n    if (\n      typeof new_employee_details.workemail === \"undefined\" ||\n      new_employee_details.workemail == \"\"\n    ) {\n      return Promise.reject(\"Work email is empty\");\n    } else {\n      n_workemail = new_employee_details.workemail;\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_addNewEmployee(\n        n_dateofjoining,\n        n_name,\n        n_jobtitle,\n        n_gender,\n        n_dob,\n        n_username,\n        n_training_month,\n        n_workemail\n      ).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(success_add_new_employee(json.data));\n            resolve(json.data);\n          } else {\n            dispatch(error_add_new_employee(json.data.message));\n            reject(json.data.message);\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_add_new_employee(\"error occurs!!!\"));\n          reject(\"error occurs!!!\");\n        }\n      );\n    });\n  };\n}\n// ---------get user document\n\nexport function success_user_document(data) {\n  return createAction(constants.ACTION_SUCCESS_USER_DOCUMENT)(data);\n}\nexport function error_user_document(data) {\n  return createAction(constants.ACTION_ERROR_USER_DOCUMENT)(data);\n}\n\nfunction async_getUserDocument(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_document_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserDocument(userid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_getUserDocument(userid).then(\n        json => {\n          dispatch(hide_loading());\n          if (json.error == 0) {\n            dispatch(success_user_document(json.data));\n            // resolve('disabled')\n          } else {\n            dispatch(error_user_document(json.data.message));\n            // reject('response with Error')\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_user_document(\"error occurs!!!\"));\n          // reject('error occurs!!')\n        }\n      );\n    });\n  };\n}\n\n// ------Delete user document\nfunction async_deleteDocument(doc_id) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"delete_user_document\",\n    id: doc_id\n  });\n}\n\nexport function deleteDocument(doc_id) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_deleteDocument(doc_id).then(\n        json => {\n          dispatch(hide_loading());\n          if (json.error == 0) {\n            resolve(json.data.message);\n          } else {\n            reject(json.data.message);\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\n// --------changeEmployeeStatus Enable/Disable user\n\nfunction async_changeEmployeeStatus(userid, status) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"change_employee_status\",\n    user_id: userid,\n    status: status\n  });\n}\n\nexport function changeEmployeeStatus(userid, status) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      async_changeEmployeeStatus(userid, status).then(\n        json => {\n          if (json.error === 0) {\n            resolve(\"User disabled\");\n          } else {\n            reject(json.data.message);\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nfunction successGetStep(data) {\n  return createAction(constants.ACTION_SUCCESS_GET_STEPS)(data);\n}\nfunction errorGetStep(data) {\n  return createAction(constants.ACTION_ERROR_GET_STEPS)(data);\n}\n\nvar callApiSteps = queue(function(userid, dispatch, callback) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  }).then(json => {\n    if (json.error == 0) {\n      dispatch(successGetStep(json.data));\n    } else {\n      // reject(json.data.message);\n      dispatch(errorGetStep());\n    }\n  });\n  // callback(json);\n}, 1);\n\nfunction asyncGetSteps(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  });\n}\n\nexport function getSteps(userid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      asyncGetSteps(userid).then(\n        json => {\n          if (json.error == 0) {\n            resolve(json.message);\n            dispatch(successGetStep(json.data));\n          } else {\n            reject(json.data.message);\n            dispatch(errorGetStep(json.data.message));\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nfunction successEmployeeStep(data) {\n  return createAction(constants.ACTION_SUCCESS_EMPLOYEE_STEPS)(data);\n}\nfunction errorEmployeeStep(data) {\n  return createAction(constants.ACTION_ERROR_EMPLOYEE_STEPS)(data);\n}\n\nfunction asyncChangeSteps(userid, stepid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_employee_life_cycle\",\n    userid: userid,\n    stepid: stepid\n  });\n}\n\nexport function changeSteps(userid, stepid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      asyncChangeSteps(userid, stepid).then(\n        json => {\n          if (json.error == 0) {\n            resolve(json.data.message);\n            // dispatch(getSteps(userid));\n            // dispatch(successEmployeeStep(json.data));\n          } else {\n            reject(json.data.message);\n            dispatch(errorEmployeeStep(json.data.message));\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nexport function successAddNewUserDetails(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_USER_DETAILS)(data);\n}\nexport function errorAddNewUserDetails(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_USER_DETAILS)(data);\n}\n\nfunction async_addNewUserDetails(\n  n_user_id,\n  n_address2,\n  n_emergency_ph1,\n  n_emergency_ph2,\n  n_blood_group,\n  n_medical_condition,\n  n_holding_comments,\n  n_signature\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    permanent_address: n_address2,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    holding_comments: n_holding_comments,\n    signature: n_signature\n  });\n}\n\nexport function addNewUserDetails(new_profile_details) {\n  return function(dispatch, getState) {\n    let n_user_id = \"\";\n    let n_address2 = \"\";\n    let n_emergency_ph1 = \"\";\n    let n_emergency_ph2 = \"\";\n    let n_blood_group = \"\";\n    let n_medical_condition = \"\";\n    let n_holding_comments = \"\";\n    let n_signature = \"\";\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n    if (typeof new_profile_details.signature !== \"undefined\") {\n      n_signature = new_profile_details.signature;\n    }\n    if (typeof new_profile_details.permanent_address !== \"undefined\") {\n      n_address2 = new_profile_details.permanent_address;\n    }\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n    if (n_signature.trim() === \"\") {\n      return Promise.reject(\"signature is empty\");\n    }\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_addNewUserDetails(\n        n_user_id,\n        n_address2,\n        n_emergency_ph1,\n        n_emergency_ph2,\n        n_blood_group,\n        n_medical_condition,\n        n_holding_comments,\n        n_signature\n      ).then(\n        res => {\n          dispatch(hide_loading()); // hide loading icon\n          if (res.error == 0) {\n            resolve(res.data);\n            dispatch(successAddNewUserDetails(res.data));\n          } else {\n            dispatch(errorAddNewUserDetails(res.data));\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(errorAddNewUserDetails(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\nexport function successGetAllEmployeeDetails(data) {\n  return createAction(constants.SUCCESS_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\nexport function errorGetAllEmployeeDetails(data) {\n  return createAction(constants.ERROR_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\n\nfunction async_getAllEmployeeDetails(){\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_enabled_users_brief_details\"\n  })\n}\n \nexport function getAllEmployeeDetails() {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getAllEmployeeDetails().then(\n        res => {\n          if (res.error == 0) {\n            resolve(res.data);\n            dispatch(successGetAllEmployeeDetails(res.data));\n            if(res.data.length){\n              dispatch(getEmployeesSalaryDetails(res.data));\n            }\n          } else {\n            dispatch(errorGetAllEmployeeDetails(res.data));\n          }\n          dispatch(hide_loading()); // hide loading icon\n        },\n        error => {\n          console.log('error', error);\n          dispatch(hide_loading()); // hide loading icon\n        }\n      )\n    })\n  }\n}\n\nfunction async_get_user_salary_details (userid) {\n  return fireAjax('POST', '', {\n    action:  'get_user_salary_info_by_id',\n    user_id: userid\n  });\n}\n\nexport function getEmployeesSalaryDetails (users, i=0) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n        let userid = users[i].user_Id;\n        dispatch(show_loading()); // show loading icon\n        async_get_user_salary_details(userid).then(\n          (json) => {\n            if (typeof json.data !== 'undefined' && typeof json.data.salary_details !== 'undefined' && json.data.salary_details.length > 0) {\n              let data = json.data;\n              let orderedSalary = _.orderBy(json.data.salary_details,['date'],['desc']);\n              users[i].current_salary = orderedSalary[0].test && orderedSalary[0].test.total_salary;\n              dispatch(successGetAllEmployeeDetails(users));\n            }\n            dispatch(hide_loading()); // hide loading icon\n            if(users.length > ++i){\n              dispatch(getEmployeesSalaryDetails(users, i));\n            }\n          },\n          (error) => {\n            dispatch(hide_loading()); // hide loading icon\n            if(users.length > ++i){\n              dispatch(getEmployeesSalaryDetails(users, i));\n            }\n          }\n        );\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}