{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport { fireAjax } from '../../../services/index';\nimport { show_loading, hide_loading } from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\nexport function successAddNewRole(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_ROLE)(data);\n}\nexport function errorAddNewRole(data) {\n  return createAction(constants.ACTION_ERROR_ADD_ROLE)(data);\n}\n\nfunction asyncAddNewRole(baseRoleId, name, description) {\n  return fireAjax('POST', '', {\n    'action': 'add_roles',\n    'base_role_id': baseRoleId,\n    'name': name,\n    'description': description\n  });\n}\n\nexport function addNewRole(new_role) {\n  return function (dispatch, getState) {\n    var baseRoleId = new_role.baseRoleId;\n    var name = '';\n    var description = '';\n\n    if (typeof new_role.name === 'undefined' || new_role.name == '') {\n      return Promise.reject('Name is empty');\n    } else {\n      name = new_role.name;\n    }\n\n    if (typeof new_role.description === 'undefined' || new_role.description == '') {\n      return Promise.reject('Description is empty');\n    } else {\n      description = new_role.description;\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      asyncAddNewRole(baseRoleId, name, description).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          dispatch(successAddNewRole(json.message));\n          dispatch(getRolesList());\n        } else {\n          dispatch(errorAddNewRole(json.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(errorAddNewRole('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\nexport function successRolesList(data) {\n  return createAction(constants.ACTION_SUCCESS_LIST_ROLES)(data);\n}\nexport function emptyRolesList(data) {\n  return createAction(constants.ACTION_EMPTY_LIST_ROLES)(data);\n}\nexport function errorRolesList(data) {\n  return createAction(constants.ACTION_ERROR_LIST_ROLES)(data);\n}\n\nfunction asyncGetRolesList() {\n  return fireAjax('POST', '', {\n    'action': 'list_all_roles'\n  });\n}\n\nexport function getRolesList() {\n  return function (dispatch, getState) {\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      asyncGetRolesList().then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          dispatch(successRolesList(json.data));\n        } else {\n          dispatch(emptyRolesList([]));\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(errorRolesList([]));\n      });\n    });\n  };\n}\nexport function successUpdateRoles(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_ROLES)(data);\n}\nexport function errorUpdateRoles(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_ROLES)(data);\n}\n\nfunction asyncUpdateRoles(notificationId, rolesId, actionId, pageId) {\n  return fireAjax('POST', '', {\n    'action': 'update_role',\n    'role_id': rolesId,\n    'page_id': pageId,\n    'action_id': actionId,\n    'notification_id': notificationId\n  });\n}\n\nexport function updateRoles(roleUpdateDetails) {\n  return function (dispatch, getState) {\n    var rolesId = '';\n    var actionId = '';\n    var pageId = '';\n    var notificationId = '';\n\n    if (typeof roleUpdateDetails.notificationId !== 'undefined') {\n      notificationId = roleUpdateDetails.notificationId;\n    }\n\n    if (typeof roleUpdateDetails.rolesId !== 'undefined') {\n      rolesId = roleUpdateDetails.rolesId;\n    }\n\n    if (typeof roleUpdateDetails.actionId !== 'undefined') {\n      actionId = roleUpdateDetails.actionId;\n    }\n\n    if (typeof roleUpdateDetails.pageId !== 'undefined') {\n      pageId = roleUpdateDetails.pageId;\n    }\n\n    if (rolesId.trim() === '') {\n      return Promise.reject('User id is empty');\n    }\n\n    return new Promise(function () {\n      dispatch(show_loading());\n      asyncUpdateRoles(notificationId, rolesId, actionId, pageId).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          dispatch(getRolesList());\n          dispatch(successUpdateRoles(json.message));\n        } else {\n          dispatch(errorUpdateRoles(json.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(errorUpdateRoles('error occurs!!!'));\n      });\n    });\n  };\n}\nexport function successUpdateUserRole(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_USER_ROLES)(data);\n}\nexport function errorUpdateUserRole(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_USER_ROLES)(data);\n}\n\nfunction asyncUpdateUserRole(userId, roleId) {\n  return fireAjax('POST', '', {\n    'action': 'assign_user_role',\n    'user_id': userId,\n    'role_id': roleId\n  });\n}\n\nexport function updateUserRole(userRoleUpdateDetails) {\n  return function (dispatch, getState) {\n    var roleId = '';\n    var userId = '';\n\n    if (typeof userRoleUpdateDetails.roleId !== 'undefined') {\n      roleId = userRoleUpdateDetails.roleId;\n    }\n\n    if (typeof userRoleUpdateDetails.userId !== 'undefined') {\n      userId = userRoleUpdateDetails.userId;\n    }\n\n    if (roleId.trim() === '') {\n      return null;\n    }\n\n    if (userId.trim() === '') {\n      return Promise.reject('User id is empty');\n    }\n\n    return new Promise(function () {\n      dispatch(show_loading());\n      asyncUpdateUserRole(userId, roleId).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          dispatch(successUpdateUserRole(json.message));\n        } else {\n          dispatch(errorUpdateUserRole(json.message));\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        dispatch(errorUpdateUserRole('error occurs!!!'));\n      });\n    });\n  };\n}\n\nfunction asyncDeleteRole(id) {\n  return fireAjax('POST', '', {\n    'action': 'delete_role',\n    'role_id': id\n  });\n}\n\nexport function deleteRole(id) {\n  return function (dispatch, getState) {\n    if (typeof id === 'undefined' || id == '') {\n      return Promise.reject('Delete Id is empty');\n    }\n\n    return new Promise(function (resolve, reject) {\n      dispatch(show_loading());\n      asyncDeleteRole(id).then(function (json) {\n        dispatch(hide_loading());\n\n        if (json.error == 0) {\n          resolve(json.message);\n          dispatch(getRolesList());\n        } else {\n          reject(json.message);\n        }\n      }, function (error) {\n        dispatch(hide_loading());\n        reject('error occurs!!!');\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/manageRoles/actions/manageRoles.jsx"],"names":["createAction","fireAjax","show_loading","hide_loading","constants","successAddNewRole","data","ACTION_SUCCESS_ADD_ROLE","errorAddNewRole","ACTION_ERROR_ADD_ROLE","asyncAddNewRole","baseRoleId","name","description","addNewRole","new_role","dispatch","getState","Promise","reject","resolve","then","json","error","message","getRolesList","successRolesList","ACTION_SUCCESS_LIST_ROLES","emptyRolesList","ACTION_EMPTY_LIST_ROLES","errorRolesList","ACTION_ERROR_LIST_ROLES","asyncGetRolesList","successUpdateRoles","ACTION_SUCCESS_UPDATE_ROLES","errorUpdateRoles","ACTION_ERROR_UPDATE_ROLES","asyncUpdateRoles","notificationId","rolesId","actionId","pageId","updateRoles","roleUpdateDetails","trim","successUpdateUserRole","ACTION_SUCCESS_UPDATE_USER_ROLES","errorUpdateUserRole","ACTION_ERROR_UPDATE_USER_ROLES","asyncUpdateUserRole","userId","roleId","updateUserRole","userRoleUpdateDetails","asyncDeleteRole","id","deleteRole"],"mappings":"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","sourcesContent":["import {createAction} from 'redux-actions';\nimport {fireAjax} from '../../../services/index';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\n\nexport function successAddNewRole (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_ROLE)(data);\n}\n\nexport function errorAddNewRole (data) {\n  return createAction(constants.ACTION_ERROR_ADD_ROLE)(data);\n}\n\nfunction asyncAddNewRole (baseRoleId, name, description) {\n  return fireAjax('POST', '', {\n    'action':       'add_roles',\n    'base_role_id': baseRoleId,\n    'name':         name,\n    'description':  description\n  });\n}\n\nexport function addNewRole (new_role) {\n  return function (dispatch, getState) {\n    let baseRoleId = new_role.baseRoleId;\n    let name = '';\n    let description = '';\n\n    if (typeof new_role.name === 'undefined' || new_role.name == '') {\n      return Promise.reject('Name is empty');\n    } else {\n      name = new_role.name;\n    }\n\n    if (typeof new_role.description === 'undefined' || new_role.description == '') {\n      return Promise.reject('Description is empty');\n    } else {\n      description = new_role.description;\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      asyncAddNewRole(baseRoleId, name, description).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(successAddNewRole(json.message));\n          dispatch(getRolesList());\n        } else {\n          dispatch(errorAddNewRole(json.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorAddNewRole('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\nexport function successRolesList (data) {\n  return createAction(constants.ACTION_SUCCESS_LIST_ROLES)(data);\n}\n\nexport function emptyRolesList (data) {\n  return createAction(constants.ACTION_EMPTY_LIST_ROLES)(data);\n}\n\nexport function errorRolesList (data) {\n  return createAction(constants.ACTION_ERROR_LIST_ROLES)(data);\n}\n\nfunction asyncGetRolesList () {\n  return fireAjax('POST', '', {\n    'action': 'list_all_roles'\n  });\n}\n\nexport function getRolesList () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      asyncGetRolesList().then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(successRolesList(json.data));\n        } else {\n          dispatch(emptyRolesList([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorRolesList([]));\n      }\n\t\t\t);\n    });\n  };\n}\n\nexport function successUpdateRoles (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_ROLES)(data);\n}\nexport function errorUpdateRoles (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_ROLES)(data);\n}\n\nfunction asyncUpdateRoles (notificationId, rolesId, actionId, pageId) {\n  return fireAjax('POST', '', {\n    'action':          'update_role',\n    'role_id':         rolesId,\n    'page_id':         pageId,\n    'action_id':       actionId,\n    'notification_id': notificationId\n  });\n}\n\nexport function updateRoles (roleUpdateDetails) {\n  return function (dispatch, getState) {\n    let rolesId = '';\n    let actionId = '';\n    let pageId = '';\n    let notificationId = '';\n\n    if (typeof roleUpdateDetails.notificationId !== 'undefined') { notificationId = roleUpdateDetails.notificationId; }\n    if (typeof roleUpdateDetails.rolesId !== 'undefined') { rolesId = roleUpdateDetails.rolesId; }\n    if (typeof roleUpdateDetails.actionId !== 'undefined') { actionId = roleUpdateDetails.actionId; }\n    if (typeof roleUpdateDetails.pageId !== 'undefined') { pageId = roleUpdateDetails.pageId; }\n\n    if (rolesId.trim() === '') { return Promise.reject('User id is empty'); }\n\n    return new Promise(() => {\n      dispatch(show_loading());\n      asyncUpdateRoles(notificationId, rolesId, actionId, pageId).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(getRolesList());\n          dispatch(successUpdateRoles(json.message));\n        } else {\n          dispatch(errorUpdateRoles(json.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorUpdateRoles('error occurs!!!'));\n      });\n    });\n  };\n}\n\nexport function successUpdateUserRole (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_USER_ROLES)(data);\n}\nexport function errorUpdateUserRole (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_USER_ROLES)(data);\n}\n\nfunction asyncUpdateUserRole (userId, roleId) {\n  return fireAjax('POST', '', {\n    'action':  'assign_user_role',\n    'user_id': userId,\n    'role_id': roleId\n  });\n}\n\nexport function updateUserRole (userRoleUpdateDetails) {\n  return function (dispatch, getState) {\n    let roleId = '';\n    let userId = '';\n\n    if (typeof userRoleUpdateDetails.roleId !== 'undefined') { roleId = userRoleUpdateDetails.roleId; }\n    if (typeof userRoleUpdateDetails.userId !== 'undefined') { userId = userRoleUpdateDetails.userId; }\n\n    if (roleId.trim() === '') { return null; }\n    if (userId.trim() === '') { return Promise.reject('User id is empty'); }\n\n    return new Promise(() => {\n      dispatch(show_loading());\n      asyncUpdateUserRole(userId, roleId).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(successUpdateUserRole(json.message));\n        } else {\n          dispatch(errorUpdateUserRole(json.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorUpdateUserRole('error occurs!!!'));\n      });\n    });\n  };\n}\n\nfunction asyncDeleteRole (id) {\n  return fireAjax('POST', '', {\n    'action':  'delete_role',\n    'role_id': id\n  });\n}\n\nexport function deleteRole (id) {\n  return function (dispatch, getState) {\n    if (typeof id === 'undefined' || id == '') { return Promise.reject('Delete Id is empty'); }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      asyncDeleteRole(id).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          resolve(json.message);\n          dispatch(getRolesList());\n        } else {\n          reject(json.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}