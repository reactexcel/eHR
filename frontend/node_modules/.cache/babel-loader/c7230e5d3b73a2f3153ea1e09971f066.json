{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/workingHours/containers/manageWorkingHours.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { notify } from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport { isNotUserValid } from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport WorkingHoursSummary from '../../../components/workingHours/WorkingHoursSummary';\nimport * as actions from '../../../redux/actions';\nimport * as actionsWorkingHoursSummary from '../../../redux/workingHours/actions/workingHoursSummary';\n\nvar ManageWorkingHours =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManageWorkingHours, _React$Component);\n\n  function ManageWorkingHours(props) {\n    var _this;\n\n    _classCallCheck(this, ManageWorkingHours);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManageWorkingHours).call(this, props));\n\n    _this.props.onIsAlreadyLogin();\n\n    _this.state = {\n      'defaultUserDisplay': '',\n      'daysummary_userid': '',\n      'daysummary_date': ''\n    };\n    _this.onWorkingHoursChange = _this.onWorkingHoursChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManageWorkingHours, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var d = new Date();\n      var year = d.getFullYear();\n      var month = d.getMonth() + 1;\n      this.props.onWorkingHoursSummary(year, month);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status) {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n\n      if (props.workingHoursSummary.status_message !== '') {\n        notify(props.workingHoursSummary.status_message);\n      }\n    }\n  }, {\n    key: \"onWorkingHoursChange\",\n    value: function onWorkingHoursChange(date, hours) {\n      if (hours !== '') {\n        this.props.onUpdateDayWorkingHours(date, hours).then(function (data) {}, function (error) {\n          notify(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: 'Manage Working Hours',\n        showLoading: this.props.frontend.show_loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(WorkingHoursSummary, {\n        workingHoursSummary: this.props.workingHoursSummary,\n        onWorkingHoursChange: this.onWorkingHoursChange,\n        onWorkingHoursSummary: this.props.onWorkingHoursSummary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return ManageWorkingHours;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    userDaySummary: state.userDaySummary.toJS(),\n    workingHoursSummary: state.workingHoursSummary.toJS()\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onWorkingHoursSummary: function onWorkingHoursSummary(year, month) {\n      return dispatch(actionsWorkingHoursSummary.get_working_hours_summary(year, month));\n    },\n    onUpdateDayWorkingHours: function onUpdateDayWorkingHours(date, time) {\n      return dispatch(actionsWorkingHoursSummary.update_day_working_hours(date, time));\n    }\n  };\n};\n\nvar VisibleManageWorkingHours = connect(mapStateToProps, mapDispatchToProps)(ManageWorkingHours);\nvar RouterVisibleManageWorkingHours = withRouter(VisibleManageWorkingHours);\nexport default RouterVisibleManageWorkingHours;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/workingHours/containers/manageWorkingHours.jsx"],"names":["React","connect","withRouter","notify","Menu","isNotUserValid","Header","WorkingHoursSummary","actions","actionsWorkingHoursSummary","ManageWorkingHours","props","onIsAlreadyLogin","state","onWorkingHoursChange","bind","d","Date","year","getFullYear","month","getMonth","onWorkingHoursSummary","isNotValid","location","pathname","loggedUser","status","history","push","redirectTo","workingHoursSummary","status_message","date","hours","onUpdateDayWorkingHours","then","data","error","frontend","show_loading","Component","mapStateToProps","toJS","logged_user","userLogin","userDaySummary","mapDispatchToProps","dispatch","isAlreadyLogin","get_working_hours_summary","time","update_day_working_hours","VisibleManageWorkingHours","RouterVisibleManageWorkingHours"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport WorkingHoursSummary from '../../../components/workingHours/WorkingHoursSummary';\nimport * as actions from '../../../redux/actions';\nimport * as actionsWorkingHoursSummary from '../../../redux/workingHours/actions/workingHoursSummary';\n\nclass ManageWorkingHours extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      'defaultUserDisplay': '',\n      'daysummary_userid':  '',\n      'daysummary_date':    ''\n    };\n    this.onWorkingHoursChange = this.onWorkingHoursChange.bind(this);\n  }\n  componentWillMount () {\n    let d = new Date();\n    let year = d.getFullYear();\n    let month = d.getMonth() + 1;\n    this.props.onWorkingHoursSummary(year, month);\n  }\n  componentWillReceiveProps (props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    if (props.workingHoursSummary.status_message !== '') {\n      notify(props.workingHoursSummary.status_message);\n    }\n  }\n  onWorkingHoursChange (date, hours) {\n    if (hours !== '') {\n      this.props.onUpdateDayWorkingHours(date, hours).then((data) => {}, (error) => {\n        notify(error);\n      });\n    }\n  }\n  render () {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\" >\n          <Header pageTitle={'Manage Working Hours'} showLoading={this.props.frontend.show_loading} />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <WorkingHoursSummary workingHoursSummary={this.props.workingHoursSummary} onWorkingHoursChange={this.onWorkingHoursChange} onWorkingHoursSummary={this.props.onWorkingHoursSummary} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:            state.frontend.toJS(),\n    loggedUser:          state.logged_user.userLogin,\n    userDaySummary:      state.userDaySummary.toJS(),\n    workingHoursSummary: state.workingHoursSummary.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onWorkingHoursSummary: (year, month) => {\n      return dispatch(actionsWorkingHoursSummary.get_working_hours_summary(year, month));\n    },\n    onUpdateDayWorkingHours: (date, time) => {\n      return dispatch(actionsWorkingHoursSummary.update_day_working_hours(date, time));\n    }\n  };\n};\n\nconst VisibleManageWorkingHours = connect(mapStateToProps, mapDispatchToProps)(ManageWorkingHours);\n\nconst RouterVisibleManageWorkingHours = withRouter(VisibleManageWorkingHours);\n\nexport default RouterVisibleManageWorkingHours;\n"]},"metadata":{},"sourceType":"module"}