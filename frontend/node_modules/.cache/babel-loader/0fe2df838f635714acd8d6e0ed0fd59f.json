{"ast":null,"code":"import Immutable from 'immutable';\nvar initialState = {\n  status_message: '',\n  year: '',\n  monthName: '',\n  nextMonth: {},\n  previousMonth: {},\n  displayData: [],\n  userInfo: []\n};\nexport function manageUserPendingHours() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.fromJS(initialState);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ACTION_SUCCESS_USER_PENDING_HOURS') {\n    return state.set('displayData', action.payload).set('userInfo', action.payload.user_list).set('year', action.payload.year).set('monthName', action.payload.monthName).set('nextMonth', action.payload.nextMonth).set('previousMonth', action.payload.previousMonth).set('status_message', '');\n  } else if (action.type === 'ACTION_EMPTY_USER_PENDING_HOURS') {\n    return state.set('status_message', action.payload);\n  } else if (action.type === 'ACTION_ERROR_USER_PENDING_HOURS') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_ADD_USER_PENDING_HOURS') {\n    return state.set('status_message', action.payload);\n  } else {\n    return state.set('status_message', '');\n  }\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/workingHours/reducers/manageUserPendingHour.js"],"names":["Immutable","initialState","status_message","year","monthName","nextMonth","previousMonth","displayData","userInfo","manageUserPendingHours","state","fromJS","action","type","set","payload","user_list"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,IAAI,EAAY,EAFC;AAGjBC,EAAAA,SAAS,EAAO,EAHC;AAIjBC,EAAAA,SAAS,EAAO,EAJC;AAKjBC,EAAAA,aAAa,EAAG,EALC;AAMjBC,EAAAA,WAAW,EAAK,EANC;AAOjBC,EAAAA,QAAQ,EAAQ;AAPC,CAAnB;AAUA,OAAO,SAASC,sBAAT,GAAiF;AAAA,MAAhDC,KAAgD,uEAAxCV,SAAS,CAACW,MAAV,CAAiBV,YAAjB,CAAwC;AAAA,MAARW,MAAQ;;AACtF,MAAIA,MAAM,CAACC,IAAP,KAAgB,mCAApB,EAAyD;AACvD,WAAOH,KAAK,CAACI,GAAN,CAAU,aAAV,EAAyBF,MAAM,CAACG,OAAhC,EACND,GADM,CACF,UADE,EACUF,MAAM,CAACG,OAAP,CAAeC,SADzB,EAENF,GAFM,CAEF,MAFE,EAEMF,MAAM,CAACG,OAAP,CAAeZ,IAFrB,EAGNW,GAHM,CAGF,WAHE,EAGWF,MAAM,CAACG,OAAP,CAAeX,SAH1B,EAINU,GAJM,CAIF,WAJE,EAIWF,MAAM,CAACG,OAAP,CAAeV,SAJ1B,EAKNS,GALM,CAKF,eALE,EAKeF,MAAM,CAACG,OAAP,CAAeT,aAL9B,EAMNQ,GANM,CAMF,gBANE,EAMgB,EANhB,CAAP;AAOD,GARD,MAQO,IAAIF,MAAM,CAACC,IAAP,KAAgB,iCAApB,EAAuD;AAC5D,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BF,MAAM,CAACG,OAAnC,CAAP;AACD,GAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,iCAApB,EAAuD;AAC5D,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4B,EAA5B,CAAP;AACD,GAFM,MAEA,IAAIF,MAAM,CAACC,IAAP,KAAgB,qCAApB,EAA2D;AAChE,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BF,MAAM,CAACG,OAAnC,CAAP;AACD,GAFM,MAEA;AACL,WAAOL,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4B,EAA5B,CAAP;AACD;AACF","sourcesContent":["import Immutable from 'immutable';\n\nlet initialState = {\n  status_message: '',\n  year:           '',\n  monthName:      '',\n  nextMonth:      {},\n  previousMonth:  {},\n  displayData:    [],\n  userInfo:       []\n};\n\nexport function manageUserPendingHours (state = Immutable.fromJS(initialState), action) {\n  if (action.type === 'ACTION_SUCCESS_USER_PENDING_HOURS') {\n    return state.set('displayData', action.payload)\n    .set('userInfo', action.payload.user_list)\n    .set('year', action.payload.year)\n    .set('monthName', action.payload.monthName)\n    .set('nextMonth', action.payload.nextMonth)\n    .set('previousMonth', action.payload.previousMonth)\n    .set('status_message', '');\n  } else if (action.type === 'ACTION_EMPTY_USER_PENDING_HOURS') {\n    return state.set('status_message', action.payload);\n  } else if (action.type === 'ACTION_ERROR_USER_PENDING_HOURS') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_ADD_USER_PENDING_HOURS') {\n    return state.set('status_message', action.payload);\n  } else {\n    return state.set('status_message', '');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}