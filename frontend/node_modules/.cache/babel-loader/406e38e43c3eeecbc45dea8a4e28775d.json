{"ast":null,"code":"import Immutable from 'immutable';\nvar initialState = {\n  status_message: '',\n  displayData: [],\n  userInfo: {}\n};\nexport function manageUserWorkingHours() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.fromJS(initialState);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ACTION_SUCCESS_USER_WORKING_HOURS') {\n    return state.set('displayData', action.payload.list).set('userInfo', action.payload.userInfo).set('status_message', action.payload.message);\n  } else if (action.type === 'ACTION_EMPTY_USER_WORKING_HOURS') {\n    return state.set('displayData', action.payload.list).set('userInfo', action.payload.userInfo).set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_USER_WORKING_HOURS') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_ADD_USER_WORKING_HOURS') {\n    return state.set('status_message', action.payload);\n  } else {\n    return state.set('status_message', '');\n  }\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/workingHours/reducers/manageUserWorkingHours.js"],"names":["Immutable","initialState","status_message","displayData","userInfo","manageUserWorkingHours","state","fromJS","action","type","set","payload","list","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,WAAW,EAAK,EAFC;AAGjBC,EAAAA,QAAQ,EAAQ;AAHC,CAAnB;AAMA,OAAO,SAASC,sBAAT,GAAiF;AAAA,MAAhDC,KAAgD,uEAAxCN,SAAS,CAACO,MAAV,CAAiBN,YAAjB,CAAwC;AAAA,MAARO,MAAQ;;AACtF,MAAIA,MAAM,CAACC,IAAP,KAAgB,mCAApB,EAAyD;AACvD,WAAOH,KAAK,CAACI,GAAN,CAAU,aAAV,EAAyBF,MAAM,CAACG,OAAP,CAAeC,IAAxC,EACFF,GADE,CACE,UADF,EACcF,MAAM,CAACG,OAAP,CAAeP,QAD7B,EAEFM,GAFE,CAEE,gBAFF,EAEoBF,MAAM,CAACG,OAAP,CAAeE,OAFnC,CAAP;AAGD,GAJD,MAIO,IAAIL,MAAM,CAACC,IAAP,KAAgB,iCAApB,EAAuD;AAC5D,WAAOH,KAAK,CAACI,GAAN,CAAU,aAAV,EAAyBF,MAAM,CAACG,OAAP,CAAeC,IAAxC,EACFF,GADE,CACE,UADF,EACcF,MAAM,CAACG,OAAP,CAAeP,QAD7B,EAEFM,GAFE,CAEE,gBAFF,EAEoB,EAFpB,CAAP;AAGD,GAJM,MAIA,IAAIF,MAAM,CAACC,IAAP,KAAgB,iCAApB,EAAuD;AAC5D,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4B,EAA5B,CAAP;AACD,GAFM,MAEA,IAAIF,MAAM,CAACC,IAAP,KAAgB,qCAApB,EAA2D;AAChE,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BF,MAAM,CAACG,OAAnC,CAAP;AACD,GAFM,MAEA;AACL,WAAOL,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4B,EAA5B,CAAP;AACD;AACF","sourcesContent":["import Immutable from 'immutable';\n\nlet initialState = {\n  status_message: '',\n  displayData:    [],\n  userInfo:       {}\n};\n\nexport function manageUserWorkingHours (state = Immutable.fromJS(initialState), action) {\n  if (action.type === 'ACTION_SUCCESS_USER_WORKING_HOURS') {\n    return state.set('displayData', action.payload.list)\n        .set('userInfo', action.payload.userInfo)\n        .set('status_message', action.payload.message);\n  } else if (action.type === 'ACTION_EMPTY_USER_WORKING_HOURS') {\n    return state.set('displayData', action.payload.list)\n        .set('userInfo', action.payload.userInfo)\n        .set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_USER_WORKING_HOURS') {\n    return state.set('status_message', '');\n  } else if (action.type === 'ACTION_ERROR_ADD_USER_WORKING_HOURS') {\n    return state.set('status_message', action.payload);\n  } else {\n    return state.set('status_message', '');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}