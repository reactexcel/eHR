{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/auth/containers/login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { notify } from '../../../services/notify';\nimport { isNotUserValid } from '../../../services/generic';\nimport GetLogo from '../../../components/auth/login/GetLogo';\nimport Navbar from '../../../components/auth/login/Navbar';\nimport LoginForm from '../../../modules/auth/components/login/LoginForm';\nimport LoginFormFooter from '../../../components/auth/login/LoginFormFooter';\nimport LoadingIcon from '../../../components/generic/LoadingIcon';\nimport { isAlreadyLogin, userLoginRequest } from '../../../redux/actions';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.props.isAlreadyLogin();\n\n    _this.doGuestLogin = _this.doGuestLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.doLogin = _this.doLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n\n      if (isNotValid.status && isNotValid.redirectTo !== '/logout') {\n        this.props.history.push(isNotValid.redirectTo);\n      }\n\n      if (props.loggedUser.isError) {\n        notify('Error !', props.loggedUser.message, 'error');\n      }\n    }\n  }, {\n    key: \"doLogin\",\n    value: function doLogin(username, password) {\n      this.props.userLoginRequest({\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: \"doGuestLogin\",\n    value: function doGuestLogin(evt) {\n      this.doLogin('global_guest', 'global_guest');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center-block w-xxl w-auto-xs p-y-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(GetLogo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"p-a-md box-color r box-shadow-z1 text-color auth-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(LoadingIcon, {\n        loading: this.props.loggedUser.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"m-y text-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Sign in with your username\"), React.createElement(LoginForm, Object.assign({\n        onLogin: this.doLogin\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(LoginFormFooter, {\n        doGuestLogin: this.doGuestLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    loggedUser: state.logged_user.userLogin\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    isAlreadyLogin: isAlreadyLogin,\n    userLoginRequest: userLoginRequest\n  }, dispatch);\n};\n\nvar VisibleLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\nvar RouterVisibleLogin = withRouter(VisibleLogin);\nexport default RouterVisibleLogin;","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/auth/containers/login.jsx"],"names":["React","connect","withRouter","bindActionCreators","notify","isNotUserValid","GetLogo","Navbar","LoginForm","LoginFormFooter","LoadingIcon","isAlreadyLogin","userLoginRequest","Login","props","doGuestLogin","bind","doLogin","isNotValid","location","pathname","loggedUser","status","redirectTo","history","push","isError","message","username","password","evt","isLoading","Component","mapStateToProps","state","logged_user","userLogin","mapDispatchToProps","dispatch","VisibleLogin","RouterVisibleLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {bindActionCreators} from 'redux';\nimport {notify} from '../../../services/notify';\nimport {isNotUserValid} from '../../../services/generic';\nimport GetLogo from '../../../components/auth/login/GetLogo';\nimport Navbar from '../../../components/auth/login/Navbar';\nimport LoginForm from '../../../modules/auth/components/login/LoginForm';\nimport LoginFormFooter from '../../../components/auth/login/LoginFormFooter';\nimport LoadingIcon from '../../../components/generic/LoadingIcon';\nimport { isAlreadyLogin, userLoginRequest } from '../../../redux/actions';\n\nclass Login extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n    this.doGuestLogin = this.doGuestLogin.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n  }\n  componentWillReceiveProps (props) { \n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status && isNotValid.redirectTo !== '/logout') {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    if (props.loggedUser.isError) {\n      notify('Error !', props.loggedUser.message, 'error');\n    }\n  }\n  doLogin (username, password) {\n    this.props.userLoginRequest({username, password});\n  }\n  doGuestLogin (evt) {\n    this.doLogin('global_guest', 'global_guest');\n  }\n  render () {\n    return (\n      <div>\n        <div className=\"center-block w-xxl w-auto-xs p-y-md\">\n          <GetLogo />\n          <Navbar />\n          <div className=\"p-a-md box-color r box-shadow-z1 text-color auth-form\">\n            <LoadingIcon loading={this.props.loggedUser.isLoading} />\n            <div className=\"m-y text-sm\">Sign in with your username</div>\n            <LoginForm onLogin={this.doLogin} {...this.props} />\n            <LoginFormFooter doGuestLogin={this.doGuestLogin} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    loggedUser: state.logged_user.userLogin\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    isAlreadyLogin,\n    userLoginRequest\n  }, dispatch);\n};\n\nconst VisibleLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\n\nconst RouterVisibleLogin = withRouter(VisibleLogin);\n\nexport default RouterVisibleLogin;\n"]},"metadata":{},"sourceType":"module"}