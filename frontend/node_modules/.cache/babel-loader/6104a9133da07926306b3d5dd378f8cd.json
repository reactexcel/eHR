{"ast":null,"code":"import Immutable from 'immutable';\nvar initialState = {\n  'status_message': '',\n  'count_working_days': '',\n  'count_holidays': '',\n  'count_weekends': '',\n  'days_between_leaves': [],\n  'start_date': '',\n  'end_date': ''\n};\nexport function applyLeave() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Immutable.fromJS(initialState);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ACTION_LEAVE_SUCCESS') {\n    return state.set('status_message', action.payload).set('count_working_days', '').set('count_holidays', '').set('count_weekends', '').set('days_between_leaves', '').set('end_date', '');\n  } else if (action.type === 'ACTION_LEAVE_FAIL') {\n    return state.set('status_message', action.payload).set('count_working_days', '').set('count_holidays', '').set('count_weekends', '').set('days_between_leaves', '').set('end_date', '');\n  } else if (action.type === 'ACTION_LEAVE_ERROR') {\n    return state.set('status_message', action.payload).set('count_working_days', '').set('count_holidays', '').set('count_weekends', '').set('days_between_leaves', '').set('end_date', '');\n  } else if (action.type === 'ACTION_DAYS_BETWEEN_LEAVES_SUCCESS') {\n    return state.set('count_working_days', action.payload.working_days).set('count_holidays', action.payload.holidays).set('count_weekends', action.payload.holidays).set('days_between_leaves', action.payload.days).set('start_date', action.payload.start_date).set('end_date', action.payload.end_date).set('status_message', '');\n  } else {\n    return state.set('status_message', '').set('count_working_days', '').set('count_holidays', '').set('count_weekends', '').set('days_between_leaves', '').set('end_date', '');\n  }\n}","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/redux/leave/reducers/applyLeave.js"],"names":["Immutable","initialState","applyLeave","state","fromJS","action","type","set","payload","working_days","holidays","days","start_date","end_date"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,IAAIC,YAAY,GAAG;AACjB,oBAAuB,EADN;AAEjB,wBAAuB,EAFN;AAGjB,oBAAuB,EAHN;AAIjB,oBAAuB,EAJN;AAKjB,yBAAuB,EALN;AAMjB,gBAAuB,EANN;AAOjB,cAAuB;AAPN,CAAnB;AAWA,OAAO,SAASC,UAAT,GAAqE;AAAA,MAAhDC,KAAgD,uEAAxCH,SAAS,CAACI,MAAV,CAAiBH,YAAjB,CAAwC;AAAA,MAARI,MAAQ;;AAC1E,MAAIA,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;AAC1C,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BF,MAAM,CAACG,OAAnC,EACFD,GADE,CACE,oBADF,EACwB,EADxB,EAEFA,GAFE,CAEE,gBAFF,EAEoB,EAFpB,EAGFA,GAHE,CAGE,gBAHF,EAGoB,EAHpB,EAIFA,GAJE,CAIE,qBAJF,EAIyB,EAJzB,EAKFA,GALE,CAKE,UALF,EAKc,EALd,CAAP;AAMD,GAPD,MAOO,IAAIF,MAAM,CAACC,IAAP,KAAgB,mBAApB,EAAyC;AAC9C,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BF,MAAM,CAACG,OAAnC,EACFD,GADE,CACE,oBADF,EACwB,EADxB,EAEFA,GAFE,CAEE,gBAFF,EAEoB,EAFpB,EAGFA,GAHE,CAGE,gBAHF,EAGoB,EAHpB,EAIFA,GAJE,CAIE,qBAJF,EAIyB,EAJzB,EAKFA,GALE,CAKE,UALF,EAKc,EALd,CAAP;AAMD,GAPM,MAOA,IAAIF,MAAM,CAACC,IAAP,KAAgB,oBAApB,EAA0C;AAC/C,WAAOH,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BF,MAAM,CAACG,OAAnC,EACFD,GADE,CACE,oBADF,EACwB,EADxB,EAEFA,GAFE,CAEE,gBAFF,EAEoB,EAFpB,EAGFA,GAHE,CAGE,gBAHF,EAGoB,EAHpB,EAIFA,GAJE,CAIE,qBAJF,EAIyB,EAJzB,EAKFA,GALE,CAKE,UALF,EAKc,EALd,CAAP;AAMD,GAPM,MAOA,IAAIF,MAAM,CAACC,IAAP,KAAgB,oCAApB,EAA0D;AAC/D,WAAOH,KAAK,CAACI,GAAN,CAAU,oBAAV,EAAgCF,MAAM,CAACG,OAAP,CAAeC,YAA/C,EACFF,GADE,CACE,gBADF,EACoBF,MAAM,CAACG,OAAP,CAAeE,QADnC,EAEFH,GAFE,CAEE,gBAFF,EAEoBF,MAAM,CAACG,OAAP,CAAeE,QAFnC,EAGFH,GAHE,CAGE,qBAHF,EAGyBF,MAAM,CAACG,OAAP,CAAeG,IAHxC,EAIFJ,GAJE,CAIE,YAJF,EAIgBF,MAAM,CAACG,OAAP,CAAeI,UAJ/B,EAKFL,GALE,CAKE,UALF,EAKcF,MAAM,CAACG,OAAP,CAAeK,QAL7B,EAMFN,GANE,CAME,gBANF,EAMoB,EANpB,CAAP;AAOD,GARM,MAQA;AACL,WAAOJ,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4B,EAA5B,EACFA,GADE,CACE,oBADF,EACwB,EADxB,EAEFA,GAFE,CAEE,gBAFF,EAEoB,EAFpB,EAGFA,GAHE,CAGE,gBAHF,EAGoB,EAHpB,EAIFA,GAJE,CAIE,qBAJF,EAIyB,EAJzB,EAKFA,GALE,CAKE,UALF,EAKc,EALd,CAAP;AAMD;AACF","sourcesContent":["import Immutable from 'immutable';\n\nlet initialState = {\n  'status_message':      '',\n  'count_working_days':  '',\n  'count_holidays':      '',\n  'count_weekends':      '',\n  'days_between_leaves': [],\n  'start_date':          '',\n  'end_date':            ''\n\n};\n\nexport function applyLeave (state = Immutable.fromJS(initialState), action) {\n  if (action.type === 'ACTION_LEAVE_SUCCESS') {\n    return state.set('status_message', action.payload)\n        .set('count_working_days', '')\n        .set('count_holidays', '')\n        .set('count_weekends', '')\n        .set('days_between_leaves', '')\n        .set('end_date', '');\n  } else if (action.type === 'ACTION_LEAVE_FAIL') {\n    return state.set('status_message', action.payload)\n        .set('count_working_days', '')\n        .set('count_holidays', '')\n        .set('count_weekends', '')\n        .set('days_between_leaves', '')\n        .set('end_date', '');\n  } else if (action.type === 'ACTION_LEAVE_ERROR') {\n    return state.set('status_message', action.payload)\n        .set('count_working_days', '')\n        .set('count_holidays', '')\n        .set('count_weekends', '')\n        .set('days_between_leaves', '')\n        .set('end_date', '');\n  } else if (action.type === 'ACTION_DAYS_BETWEEN_LEAVES_SUCCESS') {\n    return state.set('count_working_days', action.payload.working_days)\n        .set('count_holidays', action.payload.holidays)\n        .set('count_weekends', action.payload.holidays)\n        .set('days_between_leaves', action.payload.days)\n        .set('start_date', action.payload.start_date)\n        .set('end_date', action.payload.end_date)\n        .set('status_message', '');\n  } else {\n    return state.set('status_message', '')\n        .set('count_working_days', '')\n        .set('count_holidays', '')\n        .set('count_weekends', '')\n        .set('days_between_leaves', '')\n        .set('end_date', '');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}