{"ast":null,"code":"import _classCallCheck from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ReactReduxHR/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ReactReduxHR/frontend/src/modules/healthStats/container/Settings.jsx\";\nimport React, { Component } from \"react\";\nimport Menu from \"../../../components/generic/Menu\";\nimport Header from \"../../../components/generic/Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from '../../../redux/actions';\nimport AttendanceUploadSetting from \"../../../modules/healthStats/component/AttendanceUploadSetting\";\nimport PasswordResetSetting from \"../../../modules/healthStats/component/PasswordResetSetting\";\n\nvar ContainerHealthStats =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContainerHealthStats, _React$Component);\n\n  function ContainerHealthStats(props) {\n    _classCallCheck(this, ContainerHealthStats);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContainerHealthStats).call(this, props));\n  }\n\n  _createClass(ContainerHealthStats, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.onIsAlreadyLogin();\n      this.props.getAttendanceUploadSettings();\n      this.props.resetPasswordStatus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Menu, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"content\",\n        className: \"app-content box-shadow-z0 content-health-stats\",\n        role: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Header, {\n        pageTitle: \"Settings\",\n        showLoading: this.props.frontend.show_loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"app-body\",\n        id: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6 setting-section1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"setting1 bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(AttendanceUploadSetting, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-sm-6 setting-section2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"setting2 bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(PasswordResetSetting, {\n        resetPasswordData: this.props.requestResetPasswordSetting,\n        resetPasswordStatusData: this.props.resetPasswordStatusData,\n        clearData: this.props.clearData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return ContainerHealthStats;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    attendanceUploadSetting: state.settings.attendanceUploadSetting,\n    resetPasswordStatusData: state.settings.resetPasswordStatus\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIsAlreadyLogin: function onIsAlreadyLogin() {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    getAttendanceUploadSettings: function getAttendanceUploadSettings() {\n      return dispatch(actions.requestGetAttendanceUploadSetting());\n    },\n    requestAddAttendanceUploadSetting: function requestAddAttendanceUploadSetting(params) {\n      return dispatch(actions.requestAddAttendanceUploadSetting(params));\n    },\n    requestDeleteAttendanceUploadSetting: function requestDeleteAttendanceUploadSetting(params) {\n      return dispatch(actions.requestDeleteAttendanceUploadSetting(params));\n    },\n    requestResetPasswordSetting: function requestResetPasswordSetting(params) {\n      return dispatch(actions.requestResetPasswordSetting(params));\n    },\n    resetPasswordStatus: function resetPasswordStatus() {\n      return dispatch(actions.requestResetPasswordStatus());\n    },\n    clearData: function clearData() {\n      return dispatch(actions.requestClearResetPasswordData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerHealthStats);","map":{"version":3,"sources":["/var/www/html/ReactReduxHR/frontend/src/modules/healthStats/container/Settings.jsx"],"names":["React","Component","Menu","Header","connect","actions","AttendanceUploadSetting","PasswordResetSetting","ContainerHealthStats","props","onIsAlreadyLogin","getAttendanceUploadSettings","resetPasswordStatus","frontend","show_loading","requestResetPasswordSetting","resetPasswordStatusData","clearData","mapStateToProps","state","toJS","loggedUser","logged_user","userLogin","attendanceUploadSetting","settings","mapDispatchToProps","dispatch","isAlreadyLogin","requestGetAttendanceUploadSetting","requestAddAttendanceUploadSetting","params","requestDeleteAttendanceUploadSetting","requestResetPasswordStatus","requestClearResetPasswordData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Menu from \"../../../components/generic/Menu\";\nimport Header from \"../../../components/generic/Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from '../../../redux/actions';\nimport AttendanceUploadSetting from \"../../../modules/healthStats/component/AttendanceUploadSetting\";\nimport PasswordResetSetting from \"../../../modules/healthStats/component/PasswordResetSetting\";\n\nclass ContainerHealthStats extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentWillMount() {\n    this.props.onIsAlreadyLogin();\n    this.props.getAttendanceUploadSettings();\n    this.props.resetPasswordStatus();\n  }\n  render() {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div\n          id=\"content\"\n          className=\"app-content box-shadow-z0 content-health-stats\"\n          role=\"main\"\n        >\n          <Header\n            pageTitle={\"Settings\"}\n            showLoading={this.props.frontend.show_loading}\n          />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row m-10\">\n                <div className=\"col-sm-6 setting-section1\">\n                  <div className=\"setting1 bg-white\">\n                    <AttendanceUploadSetting {...this.props} />\n                  </div>\n                </div>\n                <div className=\"col-sm-6 setting-section2\">\n                  <div className=\"setting2 bg-white\">\n                    <PasswordResetSetting\n                      resetPasswordData={this.props.requestResetPasswordSetting}\n                      resetPasswordStatusData={\n                        this.props.resetPasswordStatusData\n                      }\n                      clearData={this.props.clearData}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    attendanceUploadSetting: state.settings.attendanceUploadSetting,\n    resetPasswordStatusData: state.settings.resetPasswordStatus\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onIsAlreadyLogin: () => dispatch(actions.isAlreadyLogin()),\n  getAttendanceUploadSettings: () =>\n    dispatch(actions.requestGetAttendanceUploadSetting()),\n  requestAddAttendanceUploadSetting: params =>\n    dispatch(actions.requestAddAttendanceUploadSetting(params)),\n  requestDeleteAttendanceUploadSetting: params =>\n    dispatch(actions.requestDeleteAttendanceUploadSetting(params)),\n  requestResetPasswordSetting: params =>\n    dispatch(actions.requestResetPasswordSetting(params)),\n  resetPasswordStatus: () => dispatch(actions.requestResetPasswordStatus()),\n  clearData: () => dispatch(actions.requestClearResetPasswordData()),\n\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContainerHealthStats);\n"]},"metadata":{},"sourceType":"module"}