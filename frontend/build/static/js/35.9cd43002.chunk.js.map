{"version":3,"sources":["components/generic/UserHorizontalView.jsx","modules/myProfile/components/FormProfileDetails.jsx","modules/myProfile/components/FormBankDetails.jsx","modules/myProfile/components/FormUpdatePassword.jsx","modules/myProfile/containers/myProfile.jsx","redux/salary/actions/viewSalary.js","redux/myProfile/actions/myProfile.js","components/salary/userSalary/PayslipHistory.jsx"],"names":["UserHorizontalView","_ref","joining","details","profileImage","name","jobtitle","dateofjoining","gender","dob","workEmail","contactNumber","inventory","react_default","a","createElement","className","src","defaultProps","FormProfileDetails","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user_id","marital_status","address1","address2","emr_con_1","emr_con_2","work_email","emp_email","blood_group","medical_con","_props$user_profile_d","user_profile_detail","current_address","permanent_address","emergency_ph1","emergency_ph2","other_email","medical_condition","setState","_this2","id","type","value","disabled","onChange","e","target","placeholder","buttons","onClick","callUpdateProfileDetails","label","React","Component","FormBankDetails","bank_account_no","bank_name","bank_address","ifsc","_","user_bank_detail","callUpdateBankDetails","FormUpdatePassword","new_password","callUpdatePassword","MyProfile","status_message","payslip_history","user_assign_machine","onIsAlreadyLogin","bind","assertThisInitialized","callUpdateUserDeviceDetails","onMyProfileDetails","onSalaryDetails","isNotValid","isNotUserValid","location","pathname","loggedUser","status","history","push","redirectTo","s_payslip_history","salary","length","myProfile","new_bank_details","onUpdateBankDetails","then","data","error","notify","new_device_details","onUpdateDeviceDetails","new_profile_details","onUpdateProfileDetails","trim","onUpdatePassword","_this$state$user_prof","mobile_ph","Menu","role","Header","assign","pageTitle","generic_UserHorizontalView","components_FormProfileDetails","components_FormBankDetails","components_FormUpdatePassword","withRouter","connect","frontend","toJS","logged_user","userLogin","dispatch","actions","actionsMyProfile","actionsSalary","__webpack_require__","d","__webpack_exports__","getSalaryDetails","fetchUserSalaryDetails","redux_actions__WEBPACK_IMPORTED_MODULE_0__","_services_index__WEBPACK_IMPORTED_MODULE_3__","_redux_generic_actions_frontend__WEBPACK_IMPORTED_MODULE_5__","_redux_constants__WEBPACK_IMPORTED_MODULE_6__","success_salary_details","createAction","constants","getState","Promise","resolve","reject","show_loading","fireAjax","action","json","hide_loading","salary_details","empty__user_salary_details","getMyProfileDetails","updateProfileDetails","updateBankDetails","updatePassword","getMyInventory","addInventoryAudit","_services_generic__WEBPACK_IMPORTED_MODULE_6__","_redux_actions__WEBPACK_IMPORTED_MODULE_7__","_redux_constants__WEBPACK_IMPORTED_MODULE_8__","reslove","empty_my_profile","message","error_update_profile_details","n_marital_status","n_dob","n_address1","n_address2","n_em_contact1","n_em_contact2","n_blood_group","n_medical_con","n_emp_email","async_updateProfileDetails","error_update_bank_details","n_bank_name","n_bank_address","n_bank_account_no","n_ifsc","includes","match","async_updateBankDetails","error_update_password","n_new_password","password","async_updatePassword","payload","msg","showInventoryPending","inventory_id","audit_message","async_addInventoryAudit","new_token","userId","getLoggedUser","tokenData","setLoggedUser","userDataUpdated","catch","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","_helper_helper__WEBPACK_IMPORTED_MODULE_2__","PayslipHistory","previousPayslips","map","key","dateFormatter","months","parseInt","month","year","total_leave_taken","leave_balance","allocated_leaves","paid_leaves","unpaid_leaves","final_leave_balance"],"mappings":"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","file":"static/js/35.9cd43002.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UserHorizontalView = ({profileImage, name, jobtitle, dateofjoining, gender, dob, workEmail, contactNumber, inventory}) => {\n  let joining, details;\n  if (!inventory) {\n    joining = <h5 className=\"text-muted\">Joining Date: <b>{dateofjoining}</b></h5>;\n    details = <div className=\"col-xs-6 profile-input text-muted\">\n      <h5>Gender: <b>{gender}</b></h5>\n      <h5>Date Of Birth: <b>{dob}</b></h5>\n      <h5>Work Email: <b>{workEmail}</b></h5>\n      <h5>Contact Number: <b>{contactNumber}</b></h5>\n    </div>;\n  }\n  return (\n    <div className=\"item\">\n      <div className=\"item-bg\">\n        <img src={profileImage} className=\"blur opacity-3\" />\n      </div>\n      <div className=\"row padding-responsive\">\n        <div className=\"col-xs-12 m-b\">\n          <span className=\"avatar w-96 pointer\">\n            <img src={profileImage} />\n            <i className=\"on b-white\"></i>\n          </span>\n        </div>\n        <div className=\"col-xs-6 profile-input\">\n          <h3 className=\"text-capitalize m-t-xs\">{name}</h3>\n          <h5 className=\"text-muted text-capitalize\"><b>{jobtitle}</b></h5>\n          {joining}\n        </div>\n        {details}\n      </div>\n    </div>\n  );\n};\n\nUserHorizontalView.propTypes = {\n  profileImage:  PropTypes.string,\n  name:          PropTypes.string,\n  jobtitle:      PropTypes.string,\n  dateofjoining: PropTypes.string,\n  dob:           PropTypes.string,\n  gender:        PropTypes.string,\n  workEmail:     PropTypes.string,\n  inventory:     PropTypes.bool\n};\nUserHorizontalView.defaultProps = {\n  profileImage:  null,\n  name:          null,\n  jobtitle:      null,\n  dateofjoining: null,\n  dob:           null,\n  gender:        null,\n  workEmail:     null,\n  inventory:     false\n};\nexport default UserHorizontalView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import {DateField} from 'react-date-picker';\n// import DateField from 'react-date-picker';\nimport {ButtonRaised} from '../../../components/generic/buttons/index';\n// import 'react-date-picker/index.css';\n\nclass FormProfileDetails extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      user_id:        '',\n      name:           '',\n      jobtitle:       '',\n      dateofjoining:  '',\n      dob:            '',\n      gender:         '',\n      marital_status: 'Single',\n      address1:       '',\n      address2:       '',\n      emr_con_1:      '',\n      emr_con_2:      '',\n      work_email:     '',\n      emp_email:      '',\n      blood_group:    '',\n      medical_con:    ''\n    };\n  }\n  componentWillReceiveProps (props) {\n    let {name, jobtitle, dateofjoining, dob, gender, marital_status, current_address, permanent_address, emergency_ph1, emergency_ph2, work_email, other_email, blood_group, medical_condition} = props.user_profile_detail;\n    this.setState({\n      name:           name || '',\n      jobtitle:       jobtitle || '',\n      dateofjoining:  dateofjoining || '',\n      dob:            dob || '',\n      gender:         gender || '',\n      marital_status: marital_status || 'Single',\n      address1:       current_address || '',\n      address2:       permanent_address || '',\n      emr_con_1:      emergency_ph1 || '',\n      emr_con_2:      emergency_ph2 || '',\n      work_email:     work_email || '',\n      emp_email:      other_email || '',\n      blood_group:    blood_group || '',\n      medical_con:    medical_condition || ''\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <h6 className=\"text-center\">Personal Details</h6>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-12 profile-input form-group\">\n            <label>User Name</label>\n            <input id=\"user_name\" type=\"text\" className=\"form-control\" value={this.state.name} disabled />\n          </div>\n        </div>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-6 col-sm-12 profile-input form-group\">\n            <label>Marital Status</label>\n            <select\n              className=\"form-control\"\n              onChange={(e) => this.setState({marital_status: e.target.value})}\n              value={this.state.marital_status}>\n              <option value=\"Single\">Single</option>\n              <option value=\"Married\">Married</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>            \n        </div>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-6 profile-input\">\n            <div className=\"form-group\">\n              <label>Current Address</label>\n              <textarea\n                placeholder=\"your current address...\"\n                className=\"form-control resize-y\"\n                onChange={(e) => this.setState({address1: e.target.value})}\n                value={this.state.address1}>\n              </textarea>\n            </div>\n          </div>\n          <div className=\"col-xs-6 profile-input\">\n            <div className=\"form-group\">\n              <label>Permanent Address</label>\n              <textarea\n                placeholder=\"your permanent address...\"\n                className=\"form-control resize-y\"\n                onChange={(e) => this.setState({address2: e.target.value})}\n                value={this.state.address2}>\n              </textarea>\n            </div>\n          </div>\n        </div>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-6 profile-input\">\n            <div className=\"form-group\">\n              <label>Emergency Contact 1</label>\n              <input\n                id=\"user_Contact\"\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => this.setState({emr_con_1: e.target.value})}\n                value={this.state.emr_con_1} />\n            </div>\n          </div>\n          <div className=\"col-xs-6 profile-input\">\n            <div className=\"form-group\">\n              <label>Emergency Contact 2</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => this.setState({emr_con_2: e.target.value})}\n                value={this.state.emr_con_2} />\n            </div>\n          </div>\n        </div>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-6 col-sm-12 profile-input form-group\">\n            <label>Personal Email Address</label>\n            <input type=\"email\"\n              className=\"form-control\"\n              onChange={(e) => this.setState({emp_email: e.target.value})}\n              value={this.state.emp_email} />\n          </div>\n          <div className=\"col-xs-6 col-sm-12 profile-input form-group\">\n            <label>Blood Group</label>\n            <select className=\"form-control\" onChange={(e) => this.setState({blood_group: e.target.value})} value={this.state.blood_group}>\n              <option value=\"\">--select your blood group--</option>\n              <option value=\"o+\">O+</option>\n              <option value=\"o-\">O-</option>\n              <option value=\"a+\">A+</option>\n              <option value=\"a-\">A-</option>\n              <option value=\"b+\">B+</option>\n              <option value=\"b-\">B-</option>\n              <option value=\"ab+\">AB+</option>\n              <option value=\"ab-\">AB-</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-12 profile-input form-group\">\n            <label>Any Medical Conditions</label>\n            <textarea\n              placeholder=\"your medical conditions...\"\n              className=\"form-control resize-y\"\n              onChange={(e) => this.setState({medical_con: e.target.value})}\n              value={this.state.medical_con}>\n            </textarea>\n          </div>\n        </div>\n        <div id =\"profile_update\" className=\"row no-gutter\">\n          <div className=\"col-xs-12 profile-input form-group\">\n            <ButtonRaised className=\"col-xs-12 indigo\" onClick={() => this.props.callUpdateProfileDetails(this.state)} label=\"Update Profile Details\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nFormProfileDetails.propTypes = {\n  name:           PropTypes.string,\n  jobtitle:       PropTypes.string,\n  dateofjoining:  PropTypes.string,\n  dob:            PropTypes.string,\n  gender:         PropTypes.string,\n  marital_status: PropTypes.string,\n  address1:       PropTypes.string,\n  address2:       PropTypes.string,\n  emr_con_1:      PropTypes.number,\n  emr_con_2:      PropTypes.number,\n  work_email:     PropTypes.string,\n  emp_email:      PropTypes.string,\n  blood_group:    PropTypes.string,\n  medical_con:    PropTypes.string\n};\nexport default FormProfileDetails;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport PropTypes from 'prop-types';\n// import 'react-date-picker/index.css';\nimport {ButtonRaised} from '../../../components/generic/buttons/index';\n\nclass FormBankDetails extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      user_id:         '',\n      bank_account_no: '',\n      bank_name:       '',\n      bank_address:    '',\n      ifsc:            ''\n    };\n  }\n  componentWillReceiveProps (props) {\n    if (!_.isEmpty(props.user_bank_detail)) {\n      this.setState({\n        bank_account_no: props.user_bank_detail.bank_account_no,\n        bank_name:       props.user_bank_detail.bank_name,\n        bank_address:    props.user_bank_detail.bank_address,\n        ifsc:            props.user_bank_detail.ifsc\n      });\n    }\n  }\n  render () {\n    return (\n      <div>\n        <h6 className=\"text-center\">Bank Details</h6>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-6 col-sm-12 profile-input form-group\">\n            <label>Bank Account Number</label>\n            <input type=\"text\"\n              className=\"form-control\"\n              onChange={(e) => this.setState({bank_account_no: e.target.value})}\n              value={this.state.bank_account_no} />\n          </div>\n          <div className=\"col-xs-6 col-sm-12 profile-input form-group\">\n            <label>Bank Name</label>\n            <input type=\"text\"\n              className=\"form-control\"\n              onChange={(e) => this.setState({bank_name: e.target.value})}\n              value={this.state.bank_name} />\n          </div>\n        </div>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-6 col-sm-12 profile-input form-group\">\n            <label>Bank Address</label>\n            <input type=\"text\"\n              className=\"form-control\"\n              onChange={(e) => this.setState({bank_address: e.target.value})}\n              value={this.state.bank_address} />\n          </div>\n          <div className=\"col-xs-6 col-sm-12 profile-input form-group\">\n            <label>IFSC Code</label>\n            <input type=\"text\"\n              className=\"form-control\"\n              onChange={(e) => this.setState({ifsc: e.target.value})}\n              value={this.state.ifsc} />\n          </div>\n        </div>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-12 profile-input form-group\">\n            <ButtonRaised className=\"col-xs-12 indigo\" onClick={() => this.props.callUpdateBankDetails(this.state)} label=\"Update Bank Details\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFormBankDetails.propTypes = {\n  bank_account_no: PropTypes.number,\n  bank_name:       PropTypes.string,\n  bank_address:    PropTypes.string,\n  ifsc:            PropTypes.string\n};\n\nexport default FormBankDetails;\n","import React from 'react';\n// import 'react-date-picker/index.css';\nimport {ButtonRaised} from '../../../components/generic/buttons/index';\n\nclass FormUpdatePassword extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      new_password: ''\n    };\n  }\n  componentWillReceiveProps (props) {\n    this.state = {\n      new_password: ''\n    };\n  }\n  render () {\n    return (\n      <div>\n        <h6 className=\"text-center\">Update Password</h6>\n        <div className=\"row no-gutter\">\n          <div className=\"col-xs-12 profile-input form-group\">\n            <label>Enter New Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              onChange={(e) => this.setState({new_password: e.target.value})}\n              value={this.state.new_password}\n            />\n          </div>\n          <div className=\"profile-input form-group\">\n            <ButtonRaised className=\"col-xs-12 indigo\" onClick={() => this.props.callUpdatePassword(this.state.new_password)} label=\"Update Password\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormUpdatePassword;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport UserHorizontalView from '../../../components/generic/UserHorizontalView';\nimport PayslipHistory from '../../../components/salary/userSalary/PayslipHistory';\nimport FormProfileDetails from '../../../modules/myProfile/components/FormProfileDetails';\nimport FormBankDetails from '../../../modules/myProfile/components/FormBankDetails';\nimport FormUpdatePassword from '../../../modules/myProfile/components/FormUpdatePassword';\nimport * as actions from '../../../redux/actions';\nimport * as actionsMyProfile from '../../../redux/myProfile/actions/myProfile';\nimport * as actionsSalary from '../../../redux/salary/actions/viewSalary';\n\nclass MyProfile extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      status_message:      '',\n      user_profile_detail: {},\n      user_bank_detail:    [],\n      payslip_history:     [],\n      user_assign_machine: []\n    };\n    this.props.onIsAlreadyLogin();\n    this.callUpdateBankDetails = this.callUpdateBankDetails.bind(this);\n    this.callUpdateProfileDetails = this.callUpdateProfileDetails.bind(this);\n    this.callUpdateUserDeviceDetails = this.callUpdateUserDeviceDetails.bind(this);\n    this.callUpdatePassword = this.callUpdatePassword.bind(this);\n  }\n  componentWillMount () {\n    this.props.onMyProfileDetails();\n    this.props.onSalaryDetails();\n  }\n  componentWillReceiveProps (props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    let s_payslip_history = [];\n\n    if (typeof props.salary.payslip_history !== 'undefined' && props.salary.payslip_history.length > 0) {\n      s_payslip_history = props.salary.payslip_history;\n    }\n    this.setState({user_profile_detail: props.myProfile.user_profile_detail, user_assign_machine: props.myProfile.user_assign_machine, user_bank_detail: props.myProfile.user_bank_detail, payslip_history: s_payslip_history});\n  }\n  callUpdateBankDetails (new_bank_details) {\n    this.props.onUpdateBankDetails(new_bank_details).then((data) => {}, (error) => {\n      notify(error);\n    });\n  }\n  callUpdateUserDeviceDetails (new_device_details) {\n    this.props.onUpdateDeviceDetails(new_device_details).then((data) => {}, (error) => {\n      notify(error);\n    });\n  }\n  callUpdateProfileDetails (new_profile_details) {\n    this.props.onUpdateProfileDetails(new_profile_details).then((data) => {}, (error) => {\n      notify(error);\n    });\n  }\n  callUpdatePassword (new_password) {\n    new_password = new_password.trim();\n    if (new_password === '') {\n      notify('Enter Password !!');\n    } else {\n      this.props.onUpdatePassword(new_password).then((data) => {\n        notify(data);\n        this.props.onMyProfileDetails();\n      }, (error) => {\n        notify(error);\n      });\n    }\n  }\n  render () {\n    let {name, jobtitle, dateofjoining, gender, dob, work_email, mobile_ph} = this.state.user_profile_detail;\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'My Profile'} {...this.props} />          \n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row no-gutter\">\n                <UserHorizontalView\n                  profileImage={this.props.loggedUser.data.profileImage}\n                  name={name}\n                  jobtitle={jobtitle}\n                  dateofjoining={dateofjoining}\n                  gender={gender}\n                  dob={dob}\n                  workEmail={work_email}\n                  contactNumber={mobile_ph}\n\n                />\n              </div>\n              <div className=\"row no-gutter\">\n                <div className=\"col-sm-6 p-a b-r m-b-md\">\n                  <FormProfileDetails user_profile_detail={this.state.user_profile_detail} callUpdateProfileDetails={this.callUpdateProfileDetails} />\n                </div>\n                <div className=\"col-sm-6 p-a m-b-md\">\n                  <FormBankDetails user_bank_detail={this.state.user_bank_detail} callUpdateBankDetails={this.callUpdateBankDetails} />\n                </div>\n                <div className=\"col-sm-6 p-a m-b-md\">\n                  <FormUpdatePassword callUpdatePassword={this.callUpdatePassword} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:   state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    myProfile:  state.myProfile.toJS(),\n    salary:     state.salary.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onMyProfileDetails: () => {\n      return dispatch(actionsMyProfile.getMyProfileDetails());\n    },\n    onUpdateBankDetails: (new_bank_details) => {\n      return dispatch(actionsMyProfile.updateBankDetails(new_bank_details));\n    },\n    onUpdateProfileDetails: (new_profile_details) => {\n      return dispatch(actionsMyProfile.updateProfileDetails(new_profile_details));\n    },\n    onUpdateDeviceDetails: (new_device_details) => {\n      // return dispatch(actionsMyProfile.updateUserDeviceDetails(new_device_details));\n    },\n    onUpdatePassword: (new_password) => {\n      return dispatch(actionsMyProfile.updatePassword(new_password));\n    },\n    onSalaryDetails: () => {\n      return dispatch(actionsSalary.getSalaryDetails());\n    }\n  };\n};\nMyProfile.propTypes = {\n  user_bank_detail:    PropTypes.array,\n  user_profile_detail: PropTypes.object,\n  payslip_history:     PropTypes.array,\n  user_assign_machine: PropTypes.array\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MyProfile));\n","import {createAction} from 'redux-actions';\nimport * as _ from 'lodash';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport 'whatwg-fetch';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\n\nexport function success_salary_details (data) {\n  return createAction(constants.ACTION_SUCCESS_SALARY_DETAILS)(data);\n}\n\nexport function empty_salary_details (data) {\n  return createAction(constants.ACTION_EMPTY_SALARY_DETAILS)(data);\n}\n\nfunction async_get_salary_details () {\n  return fireAjax('POST', '', {\n    'action': 'get_user_salary_info'\n  });\n}\n\nexport function getSalaryDetails () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_salary_details().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (typeof json.data !== 'undefined' && typeof json.data.salary_details !== 'undefined') {\n          // let data = json.data.salary_details.reverse()\n          // dispatch( success_salary_details( data ) )\n          resolve(json.data);\n          dispatch(success_salary_details(json.data));\n        } else {\n          dispatch(empty_salary_details([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(success_salary_details([]));\n      });\n    });\n  };\n}\n\nexport function success_user_salary_details (data) {\n  return createAction(constants.ACTION_SUCCESS_USER_SALARY_DETAILS)(data);\n}\n\nexport function empty__user_salary_details (data) {\n  return createAction(constants.ACTION_EMPTY_USER_SALARY_DETAILS)(data);\n}\n\nexport function error_user_salary_details (data) {\n  return createAction(constants.ACTION_ERROR_USER_SALARY_DETAILS)(data);\n}\n\nfunction async_fetch_users_salary_details () {\n  return fireAjax('POST', '', {\n    'action': 'get_all_users_detail'\n  });\n}\n\nexport function fetchUserSalaryDetails () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_fetch_users_salary_details().then((json) => {\n        dispatch(hide_loading());\n        if (typeof json.data !== 'undefined' && json.data.length > 0) {\n          dispatch(success_user_salary_details(json.data));\n          resolve();\n        } else {\n          dispatch(empty__user_salary_details([]));\n          resolve();\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        resolve();\n        dispatch(error_user_salary_details([]));\n      });\n    });\n  };\n}\n","import {createAction} from 'redux-actions';\nimport _ from 'lodash';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport {confirm} from '../../../services/notify';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport {setLoggedUser, getLoggedUser} from '../../../services/generic';\nimport {userDataUpdated, showInventoryPending} from '../../../redux/actions';\nimport * as constants from '../../../redux/constants';\n\nexport function success_my_profile (data) {\n  return createAction(constants.ACTION_SUCCESS_MY_PROFILE)(data);\n}\nexport function empty_my_profile (data) {\n  return createAction(constants.ACTION_EMPTY_MY_PROFILE)(data);\n}\nexport function error_my_profile (data) {\n  return createAction(constants.ACTION_ERROR_MY_PROFILE)(data);\n}\n\nfunction async_getMyProfileDetails () {\n  return fireAjax('POST', '', {'action': 'get_user_profile_detail'});\n}\n\nexport function getMyProfileDetails () {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getMyProfileDetails().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(success_my_profile(json.data));\n        } else {\n          dispatch(empty_my_profile(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_my_profile('error occurs!!!'));\n      });\n    });\n  };\n}\n// -------update profile details\n\nexport function success_update_profile_details (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PROFILE_DETAILS)(data);\n}\nexport function error_update_profile_details (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateProfileDetails (n_marital_status, n_dob, n_address1, n_address2, n_em_contact1, n_em_contact2, n_blood_group, n_medical_con, n_emp_email) {\n  return fireAjax('POST', '', {\n    'action':            'update_user_profile_detail',\n    'permanent_address': n_address2,\n    'current_address':   n_address1,\n    'emergency_ph1':     n_em_contact1,\n    'emergency_ph2':     n_em_contact2,\n    'blood_group':       n_blood_group,\n    'medical_condition': n_medical_con,\n    'dob':               n_dob,\n    'marital_status':    n_marital_status,\n    'other_email':       n_emp_email\n  });\n}\n\nexport function updateProfileDetails (new_profile_details) {\n  return function (dispatch, getState) {\n    let n_marital_status = '';\n    let n_dob = '';\n    let n_address1 = '';\n    let n_address2 = '';\n    let n_em_contact1 = '';\n    let n_em_contact2 = '';\n    let n_blood_group = '';\n    let n_medical_con = '';\n    let n_emp_email = '';\n\n    if (typeof new_profile_details.marital_status !== 'undefined') {\n      n_marital_status = new_profile_details.marital_status;\n    }\n    if (typeof new_profile_details.dob !== 'undefined') {\n      n_dob = new_profile_details.dob;\n    }\n    if (typeof new_profile_details.address1 !== 'undefined') {\n      n_address1 = new_profile_details.address1;\n    }\n    if (typeof new_profile_details.address2 !== 'undefined') {\n      n_address2 = new_profile_details.address2;\n    }\n    if (typeof new_profile_details.emr_con_1 !== 'undefined') {\n      n_em_contact1 = new_profile_details.emr_con_1;\n    }\n    if (typeof new_profile_details.emr_con_2 !== 'undefined') {\n      n_em_contact2 = new_profile_details.emr_con_2;\n    }\n    if (typeof new_profile_details.blood_group !== 'undefined') {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_con !== 'undefined') {\n      n_medical_con = new_profile_details.medical_con;\n    }\n\n    if (typeof new_profile_details.emp_email !== 'undefined') {\n      n_emp_email = new_profile_details.emp_email;\n    }\n\n    if (n_marital_status.trim() === '') {\n      return Promise.reject('Marital status is empty');\n    }\n    if (n_dob.trim() === '') {\n      return Promise.reject('Date of birth is empty');\n    }\n    if (n_address1.trim() === '') {\n      return Promise.reject('Current address is empty');\n    }\n    if (n_address2.trim() === '') {\n      return Promise.reject('Permanent address is empty');\n    }\n    if (n_em_contact1.trim() === '') {\n      return Promise.reject('Emmergency contact 1 is empty');\n    }\n    if (n_em_contact2.trim() === '') {\n      return Promise.reject('Emmergency contact 2 is empty');\n    }\n    if (n_blood_group.trim() === '') {\n      return Promise.reject('Blood group not selected');\n    }\n    if (n_medical_con.trim() === '') {\n      return Promise.reject('Any medical conditions is empty');\n    }\n\n    if (n_emp_email.trim() === '') {\n      return Promise.reject('Personal email is empty');\n    }\n\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateProfileDetails(\n        n_marital_status,\n        n_dob, n_address1,\n        n_address2,\n        n_em_contact1,\n         n_em_contact2,\n        n_blood_group,\n        n_medical_con,\n       n_emp_email\n      ).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_profile_details(json.data.message));\n        } else {\n          dispatch(error_update_profile_details(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_profile_details('error occurs!!!'));\n      });\n    });\n  };\n}\n\n// -------update bank details\n\nexport function success_update_bank_details (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_BANK_DETAILS)(data);\n}\nexport function error_update_bank_details (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_BANK_DETAILS)(data);\n}\n\nfunction async_updateBankDetails (n_bank_account_no, n_bank_name, n_bank_address, n_ifsc) {\n  return fireAjax('POST', '', {\n    'action':          'update_user_bank_detail',\n    'bank_account_no': n_bank_account_no,\n    'bank_name':       n_bank_name,\n    'bank_address':    n_bank_address,\n    'ifsc':            n_ifsc\n  });\n}\n\nexport function updateBankDetails (new_bank_details) {\n  return function (dispatch, getState) {\n    let n_bank_name = '';\n    let n_bank_address = '';\n    let n_bank_account_no = '';\n    let n_ifsc = '';\n\n    if (typeof new_bank_details.bank_account_no !== 'undefined') {\n      n_bank_account_no = new_bank_details.bank_account_no;\n    }\n    if (typeof new_bank_details.bank_name !== 'undefined') {\n      n_bank_name = new_bank_details.bank_name;\n    }\n    if (typeof new_bank_details.bank_address !== 'undefined') {\n      n_bank_address = new_bank_details.bank_address;\n    }\n    if (typeof new_bank_details.ifsc !== 'undefined') {\n      n_ifsc = new_bank_details.ifsc;\n    }\n    if (n_bank_account_no === '') {\n      return Promise.reject('Account number is empty');\n    }\n    if (n_bank_name === '') {\n      return Promise.reject('Bank name is empty');\n    }\n    if(!n_bank_name.includes(\"ICICI\")){\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    }\n    if (n_bank_address === '') {\n      return Promise.reject('Bank address is empty');\n    }\n    if (n_ifsc === '') {\n      return Promise.reject('IFSC is empty');\n    }\n    const ifscRegex = /(ICIC)0[A-Z0-9]{6}$/;\n    if(!n_ifsc.includes(\"ICIC\")){\n      return Promise.reject('We only accept ICICI bank account for now, if you don\\'t have ICICI bank account \\n Contact HR');\n    }\n   else if(!n_ifsc.match(ifscRegex)){\n      return Promise.reject('ICICI IFSC code you have entered is not valid. \\n Please enter valid ICICI IFSC code. ');\n    }\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateBankDetails(n_bank_account_no, n_bank_name, n_bank_address, n_ifsc).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch(getMyProfileDetails());\n          dispatch(success_update_bank_details(json.data.message));\n        } else {\n          dispatch(error_update_bank_details(json.data.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_bank_details('error occurs!!!'));\n      });\n    });\n  };\n}\n\n// -------update password\n\nexport function success_update_password (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_PASSWORD)(data);\n}\nexport function error_update_password (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_PASSWORD)(data);\n}\n\nfunction async_updatePassword (n_new_password) {\n  return fireAjax('POST', '', {\n    'action':   'update_new_password',\n    'password': n_new_password\n  });\n}\n\nexport function updatePassword (new_password) {\n  return function (dispatch, getState) {\n    let n_new_password = '';\n\n    if (typeof new_password !== 'undefined' && new_password != '') {\n      n_new_password = new_password;\n    }\n\n    if (n_new_password === '') {\n      return Promise.reject('New Password is empty!!');\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updatePassword(n_new_password).then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n\n        if (typeof json.error !== 'undefined' && json.error == 0) {\n          dispatch(success_update_password(json.data.message));\n          resolve(json.data.message);\n        } else {\n          dispatch(error_update_password(json.data.message));\n          reject(json.data.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_update_password('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\n// ------update document\nfunction async_updateDocument (document_type, document_link, declearation) {\n  let data = {\n    'action':        'insert_user_document',\n    'document_type': document_type,\n    'document_link': document_link,\n    'declearation':  declearation\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function updateDocument (documents_link) {\n  return function (dispatch, getState) {\n    let document_type = '';\n    let document_link = '';\n    let declearation = documents_link.declearation;\n\n    if (typeof documents_link.doc_type === 'undefined' || documents_link.doc_type == '') {\n      return Promise.reject('Select document type');\n    } else {\n      document_type = documents_link.doc_type;\n    }\n    if (typeof documents_link.doc_link === 'undefined' || documents_link.doc_link.length == 0) {\n      return Promise.reject('Enter document link');\n    } else {\n      document_link = documents_link.doc_link;\n    }\n    return new Promise((resolve, reject) => {\n      _.map(document_link, (link) => {\n        async_updateDocument(document_type, link, declearation).then((json) => {\n          if (json.error == 0) {\n            resolve('Document updated successfully');\n          } else {\n            reject('Response with error 1');\n          }\n        }, (error) => {\n          reject('error occurs!!!');\n        });\n      });\n    });\n  };\n}\n\nfunction async_getMyInventory () {\n  return fireAjax('POST', '', {'action': \"get_my_inventories\"});\n}\n\nexport function getMyInventory () {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getMyInventory().then((json) => {\n        dispatch(hide_loading()); // hide loading icon\n        if (json.error == 0) {\n          dispatch({type : \"ACTION_GET_MY_INVENTORY\",payload:json.data});\n        } \n      });\n    });\n  };\n}\n\nfunction async_addInventoryAudit (id, message) {\n  let data = {\n    'action': 'add_inventory_audit',\n    'inventory_id': id,\n    'audit_message': message\n  };\n  return fireAjax('POST', '', data);\n}\n\nexport function addInventoryAudit (id, msg) {\n  return function (dispatch, getState) { \n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      dispatch(showInventoryPending(false))\n      async_addInventoryAudit(id, msg).then((json) => {\n        if(json.data && json.data.new_token){\n          let {userId} = getLoggedUser();\n          let tokenData = setLoggedUser(json.data.new_token, userId);\n          dispatch(userDataUpdated(tokenData));\n        }\n        dispatch(hide_loading()); // hide loading icon\n        reslove(json)\n      }).catch(()=>{\n        dispatch(showInventoryPending(true));\n        reject()\n      })\n    });\n  };\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { dateFormatter } from \"../../../helper/helper\";\n\nconst PayslipHistory = ({ payslip_history }) => {\n  let previousPayslips = _.map(payslip_history, (d, key) => {\n    return (\n        <div className=\"row\" key={key}>\n          <div className=\"col-sm-1 w-15\">\n          <div className=\"col-sm-12 m-view\">Month</div>\n          <div className=\"col-sm-12\">\n            {dateFormatter().months[parseInt(d.month) - 1]} , {d.year}</div>\n          </div>\n          <div className=\"col-sm-1 w-15\">\n            <div className=\"col-sm-12 m-view\">Total Leave Taken</div>\n            <div className=\"col-sm-12\">{d.total_leave_taken}</div>\n          </div>\n          <div className=\"col-sm-2 w-13\">\n            <div className=\"col-sm-12 m-view\">Leave Balance</div>\n            <div className=\"col-sm-12\">{d.leave_balance}</div>\n          </div>\n          <div className=\"col-sm-2 w-15\">\n            <div className=\"col-sm-12 m-view\">Allocated Leaves</div>\n            <div className=\"col-sm-12\">{d.allocated_leaves}</div>\n          </div>\n          <div className=\"col-sm-2 w-13\">\n          <div className=\"col-sm-12 m-view\">Paid Leaves</div>\n            <div className=\"col-sm-12\">{d.paid_leaves}</div>\n          </div>\n          <div className=\"col-sm-2 w-13\">\n            <div className=\"col-sm-12 m-view\">Unpaid Leaves</div>\n            <div className=\"col-sm-12\">{d.unpaid_leaves}</div>\n          </div>\n          <div className=\"col-sm-2 w-15\">\n            <div className=\"col-sm-12 m-view\">Final Leave Balance</div>\n            <div className=\"col-sm-12\">{d.final_leave_balance}</div>\n          </div>\n          </div>\n        );\n});\n\nreturn (\n    <div className=\"row content-payslips\">\n            <b>\n              <div className=\"col-sm-1 l-view w-15\">Month</div>\n              <div className=\"col-sm-1 l-view w-15\">Total Leave Taken</div>\n              <div className=\"col-sm-2 l-view w-13\">Leave Balance</div>\n              <div className=\"col-sm-2 l-view w-15\">Allocated Leaves</div>\n              <div className=\"col-sm-2 l-view w-13\">Paid Leaves</div>\n              <div className=\"col-sm-2 l-view w-13\">Unpaid Leaves</div>\n              <div className=\"col-sm-2 l-view w-15\">Final Leave Balance</div>\n            </b>\n            <div className=\"payslip_row\">\n              {previousPayslips}\n            </div>\n          </div>\n);\n      };\n\nPayslipHistory.propTypes = {\n  payslip_history: PropTypes.array.isRequired\n};\n\nexport default PayslipHistory;\n"],"sourceRoot":""}