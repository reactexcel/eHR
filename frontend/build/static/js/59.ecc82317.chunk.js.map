{"version":3,"sources":["components/workingHours/ListWorkingHours.jsx","components/workingHours/ListUserWorkingHours.jsx","modules/workingHours/components/FormAddUserWorkingHours.jsx","redux/workingHours/actions/manageUserWorkingHours.js","modules/workingHours/containers/manageUserWorkingHours.jsx"],"names":["ListWorkingHour","_ref","row","react_default","a","createElement","className","working_hours","date","reason","ListUserWorkingHours","displayData","WorkingHoursList","_","map","key","ListWorkingHours","FormAddUserWorkingHours","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userid","handleDateChange","bind","assertThisInitialized","$","timepicker","minTime","maxTime","timeFormat","step","selectedDate","format","setState","_this2","lib","onInit","onChange","type","ref","onBlur","refs","workingtime","value","onClick","callAddUserWorkingHours","React","Component","get_managed_user_working_hours","dispatch","getState","Promise","resolve","reject","show_loading","fireAjax","action","async_get_managed_user_working_hours","then","json","data","hide_loading","error","createAction","constants","empty_user_working_hours","error_add_user_working_hours","add_user_working_hours","isEmpty","async_add_user_working_hours","message","ManageUserWorkingHours","onIsAlreadyLogin","defaultUserDisplay","daysummary_userid","daysummary_date","onUserClick","onShowDaySummary","onUsersList","isNotValid","isNotUserValid","location","pathname","loggedUser","status","history","push","redirectTo","usersList","users","length","defaultUserId","user_Id","onUserWorkingHoursData","onUserDaySummary","workingHours","onAddUserWorkingHours","notify","statusMessage","manageUserWorkingHours","status_message","selectedUserImage","selectedUserName","selectedUserJobtitle","userInfo","slack_profile","profile","image_192","name","jobtitle","err","Menu","id","role","Header","pageTitle","showLoading","frontend","userListHeader","UsersListHeader","selectedUserId","selected_user_id","UsersList","top","src","href","components_FormAddUserWorkingHours","assign","workingHours_ListUserWorkingHours","VisibleManageUserWorkingHours","connect","toJS","logged_user","userLogin","actions","actionsUsersList","actionsManageUserWorkingHours","RouterVisibleManageUserWorkingHours","withRouter"],"mappings":"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","file":"static/js/59.ecc82317.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListWorkingHour = ({row}) => {\n  return (\n    <div className=\"sl-item b-success\">\n      <div className=\"sl-icon\">\n        <i className=\"fa fa-check\"></i>\n      </div>\n      <div className=\"sl-content\">\n        <div> {row.working_hours} Hours</div>\n        <div> {row.date} </div>\n        <div className=\"sl-date text-muted\">\n          Reason : {row.reason}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nListWorkingHour.propTypes = {\n  row: PropTypes.shape({\n    working_hours: PropTypes.string.isRequired,\n    date:          PropTypes.string.isRequired,\n    reason:        PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default ListWorkingHour;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport ListWorkingHours from './ListWorkingHours';\n\nconst ListUserWorkingHours = ({displayData}) => {\n  let WorkingHoursList = _.map(displayData, (row, key) => {\n    return (\n      <ListWorkingHours key={key} row={row} />\n    );\n  });\n  return (\n    <div className=\"row box\">\n        <div className=\"box-body\">\n          <div className=\"streamline b-l m-l\">\n            {WorkingHoursList}\n          </div>\n        </div>\n    </div>\n  );\n};\n\nListUserWorkingHours.propTypes = {\n  displayData: PropTypes.array.isRequired\n};\n\nexport default ListUserWorkingHours;\n","import React from 'react';\nimport $ from 'jquery';\nimport {Calendar} from 'react-date-range';\n\nclass FormAddUserWorkingHours extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      userid:        '',\n      date:          '',\n      working_hours: '',\n      reason:        ''\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentDidMount () {\n    $('.timepickerInput').timepicker({'minTime': '5:00', 'maxTime': '12:00', 'timeFormat': 'h:i', 'step': 10});\n  }\n\n  handleDateChange (date) {\n    let selectedDate = date.format('YYYY-MM-DD');\n    this.setState({date: selectedDate});\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({userid: props.userid});\n  }\n\n  render () {\n    return (\n      <div className=\"row no-gutter\">\n        <div className=\"col-md-6 col-xs-12 b-r\">\n          <div className=\"p-a block text-center table-responsive\">\n            <h6 className=\"\">Select Date</h6>\n            <Calendar onInit={this.handleDateChange} onChange={this.handleDateChange} />\n          </div>\n        </div>\n        <div className=\"col-md-6 col-xs-12 b-r\">\n          <div className=\"p-a block text-center\">\n            <h6>Selected Date</h6>\n            {this.state.date}\n            <br /><br />\n            <h6>Select Time</h6>\n            <input type=\"text\"\n              className=\"timepickerInput\"\n              ref=\"workingtime\"\n              onBlur={() => this.setState({working_hours: this.refs.workingtime.value})}\n              value={this.state.working_hours}\n              />\n            <br /><br />\n            <h6>Enter Reason</h6>\n            <input type=\"text\"\n              className=\"md-input\"\n              ref=\"reason\"\n              onChange={() => this.setState({reason: this.refs.reason.value})}\n              value={this.state.reason}\n              />\n            <br /><br />\n            <button\n              className=\"md-btn md-raised indigo\"\n              onClick={() => this.props.callAddUserWorkingHours(\n                this.state.userid,\n                this.state.date,\n                this.state.working_hours,\n                this.state.reason)}>\n                Add\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormAddUserWorkingHours;\n","import {createAction} from 'redux-actions';\nimport _ from 'lodash';\nimport {fireAjax} from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\nexport function success_user_working_hours (data) {\n  return createAction(constants.ACTION_SUCCESS_USER_WORKING_HOURS)(data);\n}\n\nexport function empty_user_working_hours (data) {\n  return createAction(constants.ACTION_EMPTY_USER_WORKING_HOURS)(data);\n}\n\nexport function error_user_working_hours (data) {\n  return createAction(constants.ACTION_ERROR_USER_WORKING_HOURS)(data);\n}\n\nfunction async_get_managed_user_working_hours (userid) {\n  return fireAjax('POST', '', {\n    action: 'get_managed_user_working_hours',\n    userid: userid\n  });\n}\n\nexport function get_managed_user_working_hours (userid) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_get_managed_user_working_hours(userid).then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n  if (json.error === 0) {\n    dispatch(success_user_working_hours(json.data));\n  } else {\n    dispatch(empty_user_working_hours(json.data));\n  }\n}, (error) => {\n        dispatch(hide_loading()); // hide loading icon\n        dispatch(error_user_working_hours({}));\n      }\n\t\t\t);\n    });\n  };\n}\n\n// /-------------------\n\nexport function success_add_user_working_hours (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_USER_WORKING_HOURS)(data);\n}\nexport function error_add_user_working_hours (data) {\n  return createAction(constants.ACTION_ERROR_ADD_USER_WORKING_HOURS)(data);\n}\n\nfunction async_add_user_working_hours (userid, date, working_hours, reason) {\n  return fireAjax('POST', '', {\n    action:        'add_user_working_hours',\n    userid:        userid,\n    date:          date,\n    working_hours: working_hours,\n    reason:        reason\n  });\n}\n\nexport function add_user_working_hours (userid, date, working_hours, reason) {\n  return function (dispatch, getState) {\n    if (_.isEmpty(date)) {\n      return Promise.reject('date is empty');\n    }\n    if (_.isEmpty(working_hours)) {\n      return Promise.reject('Time is empty');\n    }\n    if (_.isEmpty(reason)) {\n      return Promise.reject('Reason is empty');\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_add_user_working_hours(userid, date, working_hours, reason).then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n\t\t\t        if (json.error == 0) {\n\t\t\t        \tdispatch(success_add_user_working_hours(json.data.message));\n\t\t\t            dispatch(get_managed_user_working_hours(userid));\n\t\t\t          } else {\n\t\t\t            dispatch(error_add_user_working_hours(json.data.message));\n\t\t\t          }\n},\n\t\t\t\t(error) => {\n  dispatch(hide_loading()); // hide loading icon\n  dispatch(error_add_user_working_hours('error occurs'));\n}\n\t\t\t);\n    });\n  };\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport Header from '../../../components/generic/Header';\nimport {isNotUserValid} from '../../../services/generic';\nimport UsersList from '../../../components/generic/UsersList';\nimport UsersListHeader from '../../../components/generic/UsersListHeader';\nimport ListUserWorkingHours from '../../../components/workingHours/ListUserWorkingHours';\nimport FormAddUserWorkingHours from '../../../modules/workingHours/components/FormAddUserWorkingHours';\nimport * as actions from '../../../redux/actions';\nimport * as actionsUsersList from '../../../redux/generic/actions/usersList';\nimport * as actionsManageUserWorkingHours from '../../../redux/workingHours/actions/manageUserWorkingHours';\n\nclass ManageUserWorkingHours extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      'defaultUserDisplay': '',\n      'daysummary_userid':  '',\n      'daysummary_date':    ''\n    };\n    this.onUserClick = this.onUserClick.bind(this);\n    this.onShowDaySummary = this.onShowDaySummary.bind(this);\n    this.callAddUserWorkingHours = this.callAddUserWorkingHours.bind(this);\n  }\n  componentWillMount () {\n    this.props.onUsersList();\n  }\n  componentWillReceiveProps (props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n\n    if (this.state.defaultUserDisplay === '') {\n      if (props.usersList.users.length > 0) {\n        let firstUser = props.usersList.users[0];\n        let defaultUserId = firstUser.user_Id;\n        this.onUserClick(defaultUserId);\n      }\n    }\n  }\n  onUserClick (userid) {\n    this.setState({'defaultUserDisplay': userid});\n    this.props.onUserWorkingHoursData(userid);\n  }\n  onShowDaySummary (userid, date) {\n    this.setState({daysummary_userid: userid, daysummary_date: date});\n    this.props.onUserDaySummary(userid, date);\n  }\n\n  callAddUserWorkingHours (userid, date, workingHours, reason) {\n    this.props.onAddUserWorkingHours(userid, date, workingHours, reason).then((data) => {}, (error) => {\n      notify(error);\n    });\n  }\n\n  render () {\n    let statusMessage = '';\n    if (this.props.manageUserWorkingHours.status_message !== '') {\n      statusMessage = <span className=\"label label-lg primary pos-rlt m-r-xs\">\n        <b className=\"arrow left b-primary\"></b>{this.props.manageUserWorkingHours.status_message}</span>;\n    }\n\n    let selectedUserImage = '';\n    let selectedUserName = '';\n    let selectedUserJobtitle = '';\n    let selectedUserId = '';\n    try {\n      selectedUserImage = this.props.manageUserWorkingHours.userInfo.slack_profile.profile.image_192;\n      selectedUserName = this.props.manageUserWorkingHours.userInfo.name;\n      selectedUserJobtitle = this.props.manageUserWorkingHours.userInfo.jobtitle;\n      selectedUserId = this.props.manageUserWorkingHours.userInfo.user_Id;\n    } catch (err) {}    \n    \n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Manage Employees Working Hours' + statusMessage} showLoading={this.props.frontend.show_loading} userListHeader />\n          <UsersListHeader\n            users={this.props.usersList.users}\n            selectedUserId={this.state.selected_user_id}\n            onUserClick={this.onUserClick}\n              />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-sm-3 hidden-xs\" id=\"fixedScroll\">\n                  <UsersList users={this.props.usersList.users}\n                    selectedUserId={this.state.defaultUserDisplay}\n                    onUserClick={this.onUserClick}\n                    top={10}\n                    />\n                </div>\n                <div className=\"col-md-9 col-xs-12 col-sm-9\">\n                  <div className=\"box\">\n                    <div className=\"item\">\n                      <div className=\"item-bg\">\n                        <img src={selectedUserImage} className=\"blur\" />\n                      </div>\n                      <div className=\"p-a-lg pos-rlt text-center\">\n                        <img src={selectedUserImage} className=\"img-circle w-56\" />\n                      </div>\n                    </div>\n                    <div className=\"p-a text-center\">\n                      <a href=\"\" className=\"text-md m-t block\">{selectedUserName}</a>\n                      <p>\n                        <small>{selectedUserJobtitle}</small>\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"row no-gutter b-t box \">\n\n                    <div className=\"col-md-9 col-xs-12 b-r box\">\n                      <div className=\"p-a block\">\n                        <h6 className=\"text-center\">Add New</h6>\n                        <hr />\n                        <FormAddUserWorkingHours {...this.props}\n                          userid={this.state.defaultUserDisplay}\n                          callAddUserWorkingHours={this.callAddUserWorkingHours}\n                          />\n                      </div>\n                    </div>\n                    <div className=\"col-md-3 col-xs-12  b-r box \">\n                      <div className=\"p-a block \">\n                        <h6 className=\"text-center\">Existing Working Hours</h6>\n                        <hr />\n                        <div className=\"hour-overflow \">\n                          <ListUserWorkingHours displayData={this.props.manageUserWorkingHours.displayData} />\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:               state.frontend.toJS(),\n    loggedUser:             state.logged_user.userLogin,\n    usersList:              state.usersList.toJS(),\n    manageUserWorkingHours: state.manageUserWorkingHours.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: () => {\n      return dispatch(actionsUsersList.get_users_list());\n    },\n    onUserWorkingHoursData: (userid) => {\n      return dispatch(actionsManageUserWorkingHours.get_managed_user_working_hours(userid));\n    },\n    onAddUserWorkingHours: (userid, date, workingHours, reason) => {\n      return dispatch(actionsManageUserWorkingHours.add_user_working_hours(userid, date, workingHours, reason));\n    }\n  };\n};\n\nconst VisibleManageUserWorkingHours = connect(mapStateToProps, mapDispatchToProps)(ManageUserWorkingHours);\n\nconst RouterVisibleManageUserWorkingHours = withRouter(VisibleManageUserWorkingHours);\n\nexport default RouterVisibleManageUserWorkingHours;\n"],"sourceRoot":""}