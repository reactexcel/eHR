{"version":3,"sources":["modules/attendance/components/attendanceRequest/attendanceApprove.jsx","modules/attendance/components/attendanceRequest/attendanceReq.jsx","modules/attendance/containers/manageAttendanceReq.jsx"],"names":["AttendanceApprove","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedId","approve_request","reject_request","message","show_status_message","_approve_attendance_req","bind","assertThisInitialized","setState","val","id","status","isSuccess","data","notify","shift","requestUserAttendanceStatus","_this2","forAdmin","react_default","a","createElement","className","ButtonRaised","onClick","label","React","Component","UserPendingAttendanceList","pendingAttendanceList","window","scrollTo","_this$props$attendanc","attendanceReqList","row","isLoading","map","i","AttandenceButtons","attendanceApprove","assign","attendanceStatus","key","user_id","timing","reason","_","isEmpty","colSpan","ManageAttendanceRequest","isAlreadyLogin","defaultUserDisplay","daysummary_date","status_message","active","firstArrow","requestUserDayAttendance","route","router","loggedUser","_props$attendanceReqL","isError","toDisplay","pendingUserList","secondArrow","attendance_hour_list","attendanceReq_UserPendingAttendanceList","attandanceList","Menu","role","Header","pageTitle","showLoading","LoadingIcon","loading","frontend","show_loading","style","marginTop","marginLeft","openPage","concat","href","data-toggle","data-target","aria-expanded","VisibleManageAttendanceRequest","connect","toJS","logged_user","userLogin","attendanceReq","attendanceApproval","dispatch","bindActionCreators","actions","RouterVisibleManageAttendanceRequest","withRouter"],"mappings":"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","file":"static/js/56.00740506.chunk.js","sourcesContent":["import React from 'react';\n// import 'react-date-picker/index.css';\nimport ButtonRaised from '../../../../components/generic/buttons/ButtonRaised';\nimport {notify} from '../../../../services/notify';\n\nclass AttendanceApprove extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      selectedId:            '',\n      approve_request:       '1',\n      reject_request:        '0',\n      message:               '',\n      'show_status_message': false\n    };\n    this._approve_attendance_req = this._approve_attendance_req.bind(this);\n  }\n  componentWillMount (props) {\n    this.setState({\n      selectedId: this.props.val.id\n    });\n  }\n  componentWillReceiveProps (props) {\n    if (this.props.status.isSuccess && !this.props.status.data) {\n      // this.setState({'message': 'Request Rejected Successfully.'});\n      notify('Success!', 'Request Rejected Successfully.', 'success');\n    } else if (this.props.status.isSuccess && this.props.status.data) {\n      // this.setState({'message': 'Request Accept Successfully.'});\n      notify('Success!', 'Request Approved Successfully.', 'success');\n    }\n    this.setState({\n      selectedId: props.val.id\n    });\n  }\n\n  _approve_attendance_req (shift) {\n    if (shift === 1) {\n      let attendance_status = '1';\n      this.props.requestUserAttendanceStatus({status: shift, id: this.state.selectedId});\n      this.setState({\n        selectedId: ''\n      });\n    } else if (shift === 0) {\n      let attendance_status = '';\n      this.props.requestUserAttendanceStatus({status: shift, id: this.state.selectedId});\n      this.setState({\n        selectedId: ''\n      });\n    }\n  }\n\n  render () {\n    let width = '63%';\n    if (this.props.forAdmin === true) {\n      width = '82%';\n    }\n    return (\n      <div>\n        <div className=\"float-left\">\n          <ButtonRaised\n            className=\"m-b-sm green\"\n            onClick={() => this._approve_attendance_req(1)} label=\"Approve Request\" />\n          <br />\n           <ButtonRaised\n             className=\"m-b-sm indigo\"\n             onClick={() => this._approve_attendance_req(0)} label=\"Reject Request\" />\n           <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AttendanceApprove;\n","import React from 'react';\n// import {isNotUserValid} from '../../../services/generic';\nimport _ from 'lodash';\n// import PropTypes from 'prop-types';\n// import 'react-date-picker/index.css';\n// import {CONFIG} from '../../../config/index';\n// import {notify} from '../../../services/notify';\nimport AttendanceApprove from './attendanceApprove';\n\nexport default class UserPendingAttendanceList extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      pendingAttendanceList: {}\n    };\n  }\n  componentWillReceiveProps (props) {\n    window.scrollTo(0, 0);\n  }\n\n  render () {\n    let {isLoading, data} = this.props.attendanceReqList;\n  // Map UserPendingDetails -->\n    let row = data.map((val, i) => {\n      let AttandenceButtons = <AttendanceApprove status={this.props.attendanceStatus} val={val}{...this.props} />;\n      return (\n        <tr key={i}>\n          <td className=\"p-r-xs\">{val.id}</td>\n          <td>{val.user_id}</td>\n          <td>{val.timing}</td>\n          <td></td>\n          <td>{val.reason}</td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>{AttandenceButtons}</td>\n        </tr>\n      );\n    });\n    if (_.isEmpty(row)) {\n      row = <tr>\n        <td colSpan=\"10\" className=\"text-center\">{'No Pending Attendance Request '}\n        </td>\n      </tr>;\n    }\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"box\">\n              <div className=\"box\">\n                <div className=\"box-divider m-a-0\"></div>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-striped\" >\n                    <thead className=\"success\">\n                      <tr>\n                         <th className=\"p-r-xs\">{'Sr.'}</th>\n                         <th>User Name</th>\n                         <th>Timing</th>\n                         <th></th>\n                         <th>Reason</th>\n                         <th></th>\n                         <th></th>\n                         <th></th>\n                         <th>Actions</th>\n                      </tr>\n                   </thead>\n                   <tbody>\n                     {row}\n                   </tbody>\n                </table>\n             </div>\n          </div>\n       </div>\n    </div>\n  </div>\n</div>\n\n    );\n  }\n  }\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport LoadingIcon from '../../../components/generic/LoadingIcon';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport * as actions from '../../../redux/actions';\nimport {bindActionCreators} from 'redux';\nimport UserPendingAttendanceList from '../components/attendanceRequest/attendanceReq';\n// import * as actionsManageUserAttendance from '../../../redux/attendance/actions/attendanceRequests';\n\nclass ManageAttendanceRequest extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n    this.state = {\n      'defaultUserDisplay':  '',\n      'daysummary_date':     '',\n      status_message:        '',\n      active:                'active',\n      firstArrow:            'show',\n      pendingAttendanceList: 'show'\n    };\n  }\n\n  componentWillMount () {\n    this.props.requestUserDayAttendance();\n  }\n  componentWillReceiveProps (props) {\n    // let isNotValid = isNotUserValid(this.props.route.path, props.loggedUser);\n    // if (isNotValid.status) {\n    //   this.props.history.push(isNotValid.redirectTo);\n    // }\n    let {route, router, loggedUser, attendanceReqList: {isError, message}} = props;\n    if (isError) {\n      notify('Error !', message, 'error');\n    }\n    if (message) {\n      notify('Error !', message, 'error');\n    }\n  }\n\n  openPage (toDisplay) {\n    if (toDisplay === 'attendence_hour_list') {\n      this.setState({\n        pendingAttendanceList: 'row',\n        firstArrow:            'show',\n        pendingUserList:       'hidden',\n        secondArrow:           'hidden'\n      });\n    } else if ((toDisplay === 'view_actions')) {\n      this.setState({\n        pendingAttendanceList: 'hidden',\n        firstArrow:            'hidden',\n        pendingUserList:       'row',\n        secondArrow:           'show'\n      });\n    }\n  }\n\n  render () {\n    let {status} = this.props.attendanceStatus;\n    let {isLoading, data} = this.props.attendanceReqList;\n    let attendance_hour_list = <UserPendingAttendanceList\n      attandanceList={data} {...this.props} />;\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Manage Employee Pending Attendance Requests'} showLoading={isLoading} />\n          <div className=\"app-footer\">\n            <div></div>\n          </div>\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <LoadingIcon loading={this.props.frontend.show_loading} />\n              </div>\n            </div>\n            {this.state.secondArrow === 'show' ? null\n              : <div className=\"row\" style={{marginTop: '2%', marginLeft: '4%'}}>\n                <div className=\"col-md-11 col-xs-offset-0\">\n                </div>\n              </div>\n            }\n            <div className=\"dker p-x\">\n              <div className=\"row\">\n                <div className=\"col-sm-6 pull-sm-6\">\n                  <div className=\"p-y-md clearfix nav-active-primary\">\n                    <ul className=\"nav nav-pills nav-sm\" style={{marginLeft: '4%'}}>\n                      <li\n                        onClick={() => { this.openPage('attendence_hour_list'); }}\n                        className={`nav-item ${this.state.active}`}>\n                        <a className=\"nav-link\"\n                          href=\"\"\n                          data-toggle=\"tab\"\n                          data-target=\"#tab_1\"\n                          aria-expanded=\"true\">Attendance Request List</a>\n                        <div className={this.state.firstArrow}>\n                          <span className=\"arrow bottom b-accent\"></span></div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"padding\">\n              <div className={this.state.pendingAttendanceList}>\n                {attendance_hour_list}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:          state.frontend.toJS(),\n    loggedUser:        state.logged_user.userLogin,\n    attendanceReqList: state.attendanceReq.attendanceReqList,\n    attendanceStatus:  state.attendanceReq.attendanceApproval\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actions, dispatch);\n};\n\nconst VisibleManageAttendanceRequest = connect(mapStateToProps, mapDispatchToProps)(ManageAttendanceRequest);\n\nconst RouterVisibleManageAttendanceRequest = withRouter(VisibleManageAttendanceRequest);\n\nexport default RouterVisibleManageAttendanceRequest;\n"],"sourceRoot":""}