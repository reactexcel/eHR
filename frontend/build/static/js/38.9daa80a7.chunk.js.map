{"version":3,"sources":["modules/attendance/components/empDaySummary.jsx","modules/attendance/containers/monthlyAttendance.jsx","components/generic/employeeMonthGrid/DaySection.jsx","components/generic/employeeMonthGrid/Day.jsx","redux/attendance/constants.js","components/generic/employeeMonthGrid/CalendarWeek.jsx","components/generic/employeeMonthGrid/CalendarStructure.jsx","components/generic/UserDetails.jsx","components/attendance/DayReference.jsx","components/attendance/TimeSummary.jsx","components/attendance/compensationSummary.jsx","components/attendance/MonthSummary.jsx","components/attendance/UserMonthlyAttendance.jsx"],"names":["moment","require","empDaySummary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","current_userid","current_date","form_entry_time","form_exit_time","form_reason","formInfo","inputAccess","buttonAccess","year","month","message","updateDaySummary","bind","assertThisInitialized","$","timepicker","minTime","maxTime","timeFormat","step","loggedUser","data","role","CONFIG","EMPLOYEE","setState","userid","date","userDaySummary","exit_time","entry_time","format","evt","preventDefault","_this$state","requestUpdateEmpDaySummary","entryTime","exitTime","reason","modal","_this2","react_default","a","createElement","id","className","data-backdrop","name","data-dismiss","type","onSubmit","disabled","ref","value","onBlur","refs","required","onChange","React","Component","MonthlyAttendance","isAlreadyLogin","defaultUserDisplay","daysummary_userid","daysummary_date","onUserClick","onShowDaySummary","monthToggle","userId","d","Date","getFullYear","getMonth","requestUserAttendance","isNotValid","isNotUserValid","location","pathname","status","history","push","redirectTo","isEqual","requestUserDaySummary","u","y","m","Menu","empDaySummary_empDaySummary","assign","Header","pageTitle","showLoading","frontend","show_loading","UserMonthlyAttendance","monthlyAttendance","styles","height100per","minHeight","withRouter","connect","toJS","logged_user","userLogin","dispatch","bindActionCreators","actions","DaySection","_ref","block","classname","dataToDisplay","time","title","officeTime","content","concat","timeInputBox","width","Day","dayData","forEmployeeHours","day","showDaySummary","onWorkingHoursChange","document","ready","officeWorkingHours","office_working_hours","main","_class","extraTimebg","datebg","workTimeData","total_time","extra_time_status","admin_alert","admin_alert_message","day_type","data-toggle","employeeMonthGrid_DaySection","style","e","full_date","target","day_text","dataToDi","splay","data-target","onClick","in_time","out_time","extra_time","CalendarWeek","setCalendarDay","calendarWidth","dayInRow","parseInt","dayWidth","css","window","on","dayHtml","employeeMonthGrid_Day","CalendarStructure","daysOfCalender","_","key","employeeMonthGrid_CalendarWeek","UserDetails","src","userProfileImage","userName","userjobtitle","DayReference","monthSummary","WORKING_DAY","NON_WORKING_DAY","LEAVE_DAY","HALF_DAY","TimeSummary","actual_working_hours","completed_working_hours","pending_working_hours","CompensationSummary","compensationSummary","compensationDataLength","compensation_break_up","length","firstHalf","secondHalf","map","index","text","time_to_be_compensate","MonthSummary","attendance_TimeSummary","seconds_to_be_compensate","attendance_compensationSummary","attendance_DayReference","_onChangeMonth","check","previousMonth","nextMonth","monthName","generic_UserDetails","attendance_MonthSummary","attendance"],"mappings":"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","file":"static/js/38.9daa80a7.chunk.js","sourcesContent":["import React from \"react\";\nimport $ from 'jquery';\nimport { CONFIG } from \"../../../config/index\";\nimport \"timepicker/jquery.timepicker.min.css\";\nimport \"timepicker/jquery.timepicker.min.js\";\nvar moment = require(\"moment\");\n\nexport default class empDaySummary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_userid: \"\",\n      current_date: \"\",\n      form_entry_time: \"\",\n      form_exit_time: \"\",\n      form_reason: \"\",\n      formInfo: \"\",\n      inputAccess: \"\",\n      buttonAccess: \"show\",\n      year: \"\",\n      month: \"\",\n      message: \"\"\n    };\n    this.updateDaySummary = this.updateDaySummary.bind(this);\n  }\n  componentDidMount() {\n    $(\".timepickerInput\").timepicker({\n      minTime: \"09:00 AM\",\n      maxTime: \"09:00 PM\",\n      timeFormat: \"h:i A\",\n      step: 5\n    });\n  }\n  componentWillReceiveProps(props) {\n    if (this.props.loggedUser.data.role === CONFIG.EMPLOYEE) {\n      this.setState({ formInfo: \"show\" });\n    } else {\n      this.setState({ formInfo: \"hidden\" });\n    }\n\n    let user_id = props.userid;\n    let date = props.date;\n    let year = props.year;\n    let month = props.month;\n    if (\n      this.props.loggedUser.data.role === CONFIG.EMPLOYEE &&\n      props.userDaySummary.userid !== \"\" &&\n      props.empDaySummary.exit_time !== \"\"\n    ) {\n      this.setState({ inputAccess: \"\", buttonAccess: \"\" });\n    } else {\n      this.setState({ inputAccess: \"\" });\n    }\n    this.setState({\n      year: props.year,\n      month: props.month,\n      current_userid: props.userDaySummary.userid,\n      form_entry_time: props.userDaySummary.entry_time,\n      form_exit_time: props.userDaySummary.exit_time,\n      current_date: moment(props.date).format(\"MM-DD-YYYY\")\n    });\n  }\n\n  updateDaySummary(evt) {\n    evt.preventDefault();\n    let {\n      current_userid,\n      current_date,\n      form_entry_time,\n      form_exit_time,\n      form_reason,\n      year,\n      month\n    } = this.state;\n    this.props.requestUpdateEmpDaySummary({\n      userid: current_userid,\n      date: current_date,\n      entryTime: form_entry_time,\n      exitTime: form_exit_time,\n      reason: form_reason,\n      year,\n      month\n    })\n    $(\"#modalUserDaySummary\").modal(\"hide\");\n   \n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"modalUserDaySummary\" className=\"modal\" data-backdrop=\"true\">\n          <div className=\"modal-dialog modal-lg\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <div className=\"row\">\n                  <div className=\"col-xs-11\">\n                    <h5 className=\"modal-title\">\n                      {this.props.userDaySummary.name} {\"Your Day Summary of \"}{\" \"}\n                      - {this.props.date}\n                    </h5>\n                  </div>\n                  <div className=\"col-xs-1\">\n                    <button className=\"btn btn-icon white\" data-dismiss=\"modal\">\n                      <i className=\"fa fa-remove\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"modal-body p-lg\">\n                <i>\n                  {\"*Entry / Exit time must be like - e.g 10:30 AM, 07:30 PM\"}\n                </i>\n                <br />\n                <i>\n                  {\n                    \"*Your Entry / Exit time, will be sent to the Admin for approval\"\n                  }\n                </i>\n                <i className={this.state.formInfo}>\n                  {\n                    \"20 min will be added/deducted from your entry/exit time as compensation in case you forgot to push in/out. If there is some other reason for your using this form contact HR\"\n                  }\n                </i>\n                <br />\n                <br />\n                <form\n                  role=\"form\"\n                  type=\"form\"\n                  name=\"empForm\"\n                  onSubmit={evt => {\n                    this.updateDaySummary(evt);\n                  }}\n                >\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 form-control-label\">\n                      {\"Entry Time\"}\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        name=\"entry_time\"\n                        className=\"timepickerInput form-control\"\n                        disabled={this.state.inputAccess}\n                        ref=\"entry_time\"\n                        value={this.state.form_entry_time}\n                        onBlur={() =>\n                          this.setState({\n                            form_entry_time: this.refs.entry_time.value\n                          })\n                        }\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 form-control-label\">\n                      {\"Exit Time\"}\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        name=\"exit_time\"\n                        className=\"timepickerInput form-control\"\n                        ref=\"exit_time\"\n                        disabled={this.state.inputAccess}\n                        value={this.state.form_exit_time}\n                        onBlur={() =>\n                          this.setState({\n                            form_exit_time: this.refs.exit_time.value\n                          })\n                        }\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 form-control-label\">\n                      {\"Reason\"}\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        name=\"reason\"\n                        className=\"form-control\"\n                        ref=\"reason\"\n                        disabled={this.state.inputAccess}\n                        value={this.state.form_reason}\n                        onChange={() =>\n                          this.setState({ form_reason: this.refs.reason.value })\n                        }\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group row m-t-md\">\n                    <div className=\"col-sm-10\">\n                      <div className={this.state.buttonAccess}>\n                        <button\n                          id=\"submit\"\n                          type=\"submit\"\n                          name=\"emButton\"\n                          className=\"md-btn md-raised m-b-sm w-xs blue\"\n                        >\n                          {\"Update\"}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport {notify} from '../../../services/notify';\nimport EmpDaySummary from '../../../modules/attendance/components/empDaySummary';\nimport UserMonthlyAttendance from '../../../components/attendance/UserMonthlyAttendance';\n// import * as actionsUserDaySummary from '../../../redux/attendance/actions/userDaySummary';\nimport * as actions from '../../../redux/actions';\nimport isEqual from \"lodash/isEqual\";\n\nclass MonthlyAttendance extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n    this.state = {\n      'defaultUserDisplay': '',\n      'daysummary_userid':  '',\n      'daysummary_date':    '',\n      'year':               '',\n      'month':              ''\n    };\n    this.onUserClick = this.onUserClick.bind(this);\n    this.onShowDaySummary = this.onShowDaySummary.bind(this);\n    this.monthToggle = this.monthToggle.bind(this);\n  }\n  componentWillMount () {    \n    this.props.isAlreadyLogin();\n    let userId = this.props.loggedUser.data.id;    \n    this.setState({'defaultUserDisplay': userId});\n    let d = new Date();\n    let year = d.getFullYear();\n    let month = d.getMonth() + 1; // +1 since getMonth starts from 0\n    this.setState({year: year, month: month});\n    this.props.requestUserAttendance({userid: userId, year: year, month:month});\n\n  }\n  componentWillReceiveProps (props) {    \n    const userId=props.loggedUser.data.id;\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    if(userId  && !isEqual(props,this.props)){\n      this.props.requestUserAttendance({userid: userId, year: this.state.year, month: this.state.month});\n    }\n  }\n  onShowDaySummary (userid, date) {\n    this.setState({daysummary_userid: userid, daysummary_date: date});\n    this.props.requestUserDaySummary({userid, date});\n  }\n  onUserClick (userid) {\n    this.setState({'defaultUserDisplay': userid});\n    this.props.requestUserAttendance({userid, year: this.state.year, month: this.state.month});\n  }\n  monthToggle (u, y, m) {\n    this.setState({year: y, month: m});\n    this.props.requestUserAttendance({userid: u, year: y, month: m});\n  }\n  render () {\n    return (\n      <div >\n        <Menu {...this.props} />\n        <EmpDaySummary userid={this.state.daysummary_userid} date={this.state.daysummary_date} year={this.state.year} month={this.state.month} {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'My Attendance'} showLoading={this.props.frontend.show_loading} />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-1\"></div>\n                <div className=\"col-md-10\">\n                  <UserMonthlyAttendance monthlyAttendance={this.props.monthlyAttendance} monthToggle={this.monthToggle} onShowDaySummary={this.onShowDaySummary} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nMonthlyAttendance.styles = {\n  height100per: {\n    'minHeight': '150px'\n  }\n};\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:          state.frontend.toJS(),\n    userDaySummary:    state.userDaySummary.toJS(),\n    empDaySummary:     state.empDaySummary,\n    loggedUser:        state.logged_user.userLogin,\n    monthlyAttendance: state.monthlyAttendance.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actions, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MonthlyAttendance));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DaySection = ({block, classname, dataToDisplay, time, title, officeTime}) => {\n  let content = '';\n  if (block === 'type1') {\n    content = <span>\n      <span className=\"fc-time\">{time}</span>\n      <span className=\"fc-title\">{title}{officeTime ? <i className=\"officetime\" >{`- ${officeTime} hrs`}</i> : ''}</span>\n    </span>;\n  } else if (block === 'type2') {\n    content = dataToDisplay;\n  }\n  return (\n    <div className={classname}>\n      <div className=\"fc-content\">\n        {content}\n      </div>\n    </div>\n  );\n};\n\nDaySection.propTypes = {\n  block:         PropTypes.string.isRequired,\n  classname:     PropTypes.string.isRequired,\n  dataToDisplay: PropTypes.string.isRequired,\n  time:          PropTypes.string.isRequired,\n  title:         PropTypes.string.isRequired\n};\n\nexport default DaySection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery';\nimport * as dayType from '../../../redux/attendance/constants';\nimport DaySection from './DaySection';\n\nconst styles = {\n  timeInputBox: {\n    'width': '40px'\n  }\n};\n\nconst Day = ({dayData, classname, forEmployeeHours, day, userid, showDaySummary, onWorkingHoursChange}) => {\n  $(document).ready(function () {\n    $('input.timepicker').timepicker({'minTime': '5:00', 'maxTime': '12:00', 'timeFormat': 'h:i', 'step': 10});\n  });\n\n  let d = dayData;\n  let officeWorkingHours = d.office_working_hours;\n  let main = '';\n  let _class = 'fc-day-grid-event fc-h-event fc-event fc-start fc-end fc-draggable ';\n\n  let extraTimebg = '';\n  let date = d.date;\n  let datebg = 'dark-white';\n  let workTimeData = d.total_time + ' - Total Work Time';\n\n  if (d.extra_time_status === '-') {\n    extraTimebg = 'red';\n  } else if (d.extra_time_status === '+') {\n    extraTimebg = 'green';\n  }\n  if (d.admin_alert === 1) {\n    date = date + ' * ';\n    datebg = 'indigo';\n    workTimeData = d.admin_alert_message;\n  }\n  if (!forEmployeeHours && d.day_type === dayType.WORKING_DAY) {\n    main = <div data-toggle=\"modal\" data-target=\"#modalUserDaySummary\" onClick={() => showDaySummary(userid, dayData.full_date)}>\n      <DaySection classname={_class + datebg} block=\"type1\" time={<h5>{date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={d.in_time + ' - ' + d.out_time} title='' />\n      <DaySection classname={_class + 'dark-white center'} block=\"type2\" dataToDisplay={workTimeData} />\n      <DaySection classname={_class + extraTimebg} block=\"type1\" time={d.extra_time} title='' />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.NON_WORKING_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={'Non Working day'} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={d.day_text} />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.FUTURE_WORKING_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time='' title='' />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" dataToDi splay={d.day_text} />\n      <DaySection classname={_class + 'dark-white center'} block=\"type2\" dataToDisplay={workTimeData} />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.LEAVE_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'red'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'red'} block=\"type1\" time={'On Leave'} title='' />\n      <DaySection classname={_class + 'red'} block=\"type1\" time={d.day_text} title='' />\n    </div>;\n  } else if (!forEmployeeHours && d.day_type === dayType.HALF_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'red-100'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'red-100'} block=\"type1\" time={'Half day'} title='' />\n      <DaySection classname={_class + 'red-100'} block=\"type1\" time={d.day_text} title='' />\n    </div>;\n  } else if (forEmployeeHours && d.day_type === dayType.WORKING_DAY) {\n    main = <div data-toggle=\"modal\">\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} officeTime={d.office_working_hours} />\n      <DaySection classname={_class + 'dark-white'} block=\"type1\" time={<h6>Hours : {officeWorkingHours}</h6>} title='' />\n\n      <div className=\"fc-day-grid-event fc-h-event fc-event fc-start fc-end dark-white fc-draggable\">\n        <div className=\"fc-content\">\n          <span className=\"fc-title\">\n            Change to &nbsp;:&nbsp;\n          </span>\n          <span className=\"fc-time\">\n            <input type=\"text\" className=\"timepicker\" style={styles.timeInputBox} onBlur={(e) => onWorkingHoursChange(dayData.full_date, e.target.value)} />\n          </span>\n        </div>\n      </div>\n\n    </div>;\n  } else if (forEmployeeHours && d.day_type === dayType.NON_WORKING_DAY) {\n    main = <div>\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={<h5>{d.date}</h5>} title={d.day} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={'Non Working day'} />\n      <DaySection classname={_class + 'yellow'} block=\"type1\" time={d.day_text} title='' />\n\n      <div className=\"fc-day-grid-event fc-h-event fc-event fc-start fc-end dark-white fc-draggable\">\n        <div className=\"fc-content\">\n          <span className=\"fc-title\">\n            Change to &nbsp;:&nbsp;\n          </span>\n          <span className=\"fc-time\">\n            <input type=\"text\" className=\"timepicker\" style={styles.timeInputBox} onBlur={(e) => onWorkingHoursChange(dayData.full_date, e.target.value)} />\n          </span>\n        </div>\n      </div>\n    </div>;\n  }\n\n  return (\n    <div>\n      {main}\n    </div>\n  );\n};\n\nDay.propTypes = {\n  classname:            PropTypes.string,\n  forEmployeeHours:     PropTypes.bool,\n  day:                  PropTypes.string,\n  userid:               PropTypes.number,\n  showDaySummary:       PropTypes.func,\n  onWorkingHoursChange: PropTypes.func,\n  dayData:              PropTypes.shape({\n    date:                 PropTypes.number.isRequired,\n    day:                  PropTypes.string.isRequired,\n    day_type:             PropTypes.string.isRequired,\n    full_date:            PropTypes.string.isRequired,\n    admin_alert:          PropTypes.number,\n    admin_alert_message:  PropTypes.string,\n    day_text:             PropTypes.string,\n    extra_time:           PropTypes.string,\n    in_time:              PropTypes.string,\n    out_time:             PropTypes.string,\n    total_time:           PropTypes.string,\n    office_working_hours: PropTypes.string,\n    text:                 PropTypes.string\n  }).isRequired\n};\n\nexport default Day;\n","export const HALF_DAY = 'HALF_DAY';\nexport const LEAVE_DAY = 'LEAVE_DAY';\nexport const WORKING_DAY = 'WORKING_DAY';\nexport const NON_WORKING_DAY = 'NON_WORKING_DAY';\nexport const FUTURE_WORKING_DAY = 'FUTURE_WORKING_DAY';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery';\nimport Day from './Day';\n\nconst CalendarWeek = ({userId, dayData, onShowDaySummary, onWorkingHoursChange}) => {\n  const setCalendarDay = () => {\n    let calendarWidth = $('#calendar').width();\n    let dayInRow = parseInt(calendarWidth / 100);\n    if (dayInRow < 7 && calendarWidth % 100 > 0) {\n      let dayWidth = parseInt(calendarWidth / dayInRow);\n      $('#calendar .calendar-day').css({width: dayWidth + 'px'});\n    } else if (dayInRow >= 7) {\n      $('#calendar .calendar-day').css({width: calendarWidth / 7 + 'px'});\n    }\n  };\n  $(document).ready(function () {\n    $(window).on('resize', function () {\n      setCalendarDay();\n    });\n    setCalendarDay();\n  });\n  let dayHtml = '';\n  if (userId) {\n    dayHtml = <Day forEmployeeHours={false} dayData={dayData} showDaySummary={onShowDaySummary} userid={userId} />;\n  } else {\n    dayHtml = <Day forEmployeeHours dayData={dayData} onWorkingHoursChange={onWorkingHoursChange} />;\n  }\n  return (\n    <div id=\"calendarDay\" className=\"calendar-day\" >\n      <div className=\"fc-event-container\" id={`${dayData.full_date}`} >\n        {dayHtml}\n      </div>\n    </div>\n  );\n};\n\nCalendarWeek.propTypes = {\n  dayData:              PropTypes.object.isRequired,\n  userId:               PropTypes.number,\n  onShowDaySummary:     PropTypes.func,\n  onWorkingHoursChange: PropTypes.func\n};\n\nexport default CalendarWeek;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport CalendarWeek from './CalendarWeek';\n\nconst CalendarStructure = ({userId, month, onShowDaySummary, onWorkingHoursChange}) => {\n  let daysOfCalender = _.map(month, (dayData, key) => {\n    return <CalendarWeek key={key} userId={userId} dayData={dayData} onShowDaySummary={onShowDaySummary} onWorkingHoursChange={onWorkingHoursChange} />;\n  });\n  return (\n    <div id=\"calendar\">\n      {daysOfCalender}\n    </div>\n  );\n};\n\nCalendarStructure.propTypes = {\n  userId:           PropTypes.number.isRequired,\n  month:            PropTypes.array.isRequired,\n  onShowDaySummary: PropTypes.func.isRequired\n};\n\nexport default CalendarStructure;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UserDetails = ({monthlyAttendance}) => {\n  return (\n    <div className=\"user-detail\">\n      <div className=\"col-xs-12 col-sm-4 userName\">\n        <div className=\"box p-a\">\n          <div className=\"pull-left m-r\">\n            <span className=\"w-40 avatar\">\n              <img src={monthlyAttendance.userProfileImage} />\n            </span>\n          </div>\n          <div className=\"clear\">\n            <h4 className=\"m-a-0 text-lg\">\n            {monthlyAttendance.userName}\n              <span className=\"text-sm\"> </span></h4>\n            <small className=\"text-muted\">\n              {monthlyAttendance.userjobtitle}\n            </small>\n            <br /><br />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nUserDetails.propTypes = {\n  monthlyAttendance: PropTypes.shape({\n    userProfileImage: PropTypes.string.isRequired,\n    userName: PropTypes.string.isRequired,\n    userjobtitle: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default UserDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// col-xs-4 col-sm-3 col-md-2 col-lg-1\nconst DayReference = ({monthlyAttendance}) => {\n  return (\n    <div className=\"day\">\n      <div className=\"box-header col-sm-2 col-xs-12\">\n        <h3>Day Reference</h3>\n        <small></small>\n      </div>\n      <div className=\"box-body\">\n        <div className=\"row no-gutter m-b text-xs l-h-1x\">\n          <div className=\"col-xs-12 col-sm-2 day-color-referance\">\n            <div className=\"p-a white\">\n              <h4>{monthlyAttendance.monthSummary.WORKING_DAY}</h4>\n              <div className=\"h-3x text-u-c _600 text-sm\">Working Day</div>\n            </div>\n          </div>\n\n          <div className=\"col-xs-12 col-sm-2 day-color-referance\">\n            <div className=\"p-a yellow\">\n              <h4>{monthlyAttendance.monthSummary.NON_WORKING_DAY}</h4>\n              <div className=\"h-3x text-u-c _600 text-sm\"> Non Working Day</div>\n\n            </div>\n          </div>\n\n          <div className=\"col-xs-12 col-sm-2 day-color-referance\">\n            <div className=\"p-a red\">\n              <h4>{monthlyAttendance.monthSummary.LEAVE_DAY}</h4>\n              <div className=\"h-3x text-u-c _600 text-sm\">Leave Day</div>\n            </div>\n          </div>\n\n          <div className=\"col-xs-12 col-sm-2 day-color-referance\">\n            <div className=\"p-a red-100\">\n              <h4>{monthlyAttendance.monthSummary.HALF_DAY}</h4>\n              <div className=\"h-3x text-u-c _600 text-sm\">Half Day</div>\n            </div>\n          </div>\n\n          <div className=\"col-xs-12 col-sm-2 day-color-referance\">\n            <div className=\"p-a indigo\">\n              <h4>*</h4>\n              <div className=\"h-3x text-u-c _600 text-sm\">Admin Alert</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDayReference.propTypes = {\n  monthlyAttendance: PropTypes.shape({\n    monthSummary: PropTypes.object.isRequired\n  }).isRequired\n};\n\nexport default DayReference;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TimeSummary = ({ monthlyAttendance }) => {\n  return (\n    <div className=\"row \">\n      <div className=\"col-xs-12 col-sm-3 time-summary\">\n        <div className=\"box p-a month-summary\">\n          <div className=\"pull-left m-r\" />\n          <div className=\"clear total\">\n            <h4 className=\"m-a-0 text-lg _300\">\n              {monthlyAttendance.monthSummary.actual_working_hours}\n              <span className=\"text-sm\"> </span>\n            </h4>\n            <small className=\"text-muted\"> Total Working Hours</small>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-xs-12 col-sm-3 time-summary\">\n        <div className=\"box p-a month-summary\">\n          <div className=\"pull-left m-r\" />\n          <div className=\"clear complete\">\n            <h4 className=\"m-a-0 text-lg _300\">\n              {monthlyAttendance.monthSummary.completed_working_hours}{\" \"}\n              <span className=\"text-sm\" />\n            </h4>\n            <small className=\"text-muted\">Completed</small>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-xs-12 col-sm-3 time-summary\">\n        <div className=\"box p-a month-summary\">\n          <div className=\"pull-left m-r\" />\n          <div className=\"clear pending\">\n            <h4 className=\"m-a-0 text-lg _300\">\n              {monthlyAttendance.monthSummary.pending_working_hours}\n              <span className=\"text-sm\" />\n            </h4>\n            <small className=\"text-muted\">Pending</small>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTimeSummary.propTypes = {\n  monthlyAttendance: PropTypes.shape({\n    monthSummary: PropTypes.object.isRequired\n  }).isRequired\n};\n\nexport default TimeSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst CompensationSummary = ({monthlyAttendance}) => {\n  const {compensationSummary} = monthlyAttendance;\n  const compensationDataLength = compensationSummary.compensation_break_up ? compensationSummary.compensation_break_up.length : 0;\n  const firstHalf = [];\n  const secondHalf = [];\n  _.map(compensationSummary.compensation_break_up, (data, index) => {\n    if (compensationDataLength / 2 > index) {\n      firstHalf.push(<small key={index} className=\"text-muted\">{data.text}</small>);\n    } else {\n      secondHalf.push(<small key={index} className=\"text-muted\">{data.text}</small>);\n    }\n  });\n\n  return (\n    <div className=\"box\">\n      <div className=\"box-header\">\n        <h3>Time to be compensate: {compensationSummary.time_to_be_compensate}</h3>\n        <small></small>\n      </div>\n      <div className=\"box-body\">\n        <div className=\"row no-gutter m-b text-xs l-h-1x compensation-data\">\n          <div className='col-xs-6'>\n            {firstHalf}\n          </div>\n          <div className='col-xs-6'>\n            {secondHalf}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCompensationSummary.propTypes = {\n  monthlyAttendance: PropTypes.shape({\n    compensationSummary: PropTypes.object.isRequired\n  }).isRequired\n};\n\nexport default CompensationSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DayReference from './DayReference';\nimport TimeSummary from './TimeSummary';\nimport CompensationSummary from './compensationSummary';\n\nconst MonthSummary = ({monthlyAttendance}) => {\n  return (\n    <div>\n      <TimeSummary monthlyAttendance={monthlyAttendance} />\n      {monthlyAttendance.compensationSummary && monthlyAttendance.compensationSummary.seconds_to_be_compensate > 0 ? <CompensationSummary monthlyAttendance={monthlyAttendance} /> : ''}\n      <DayReference monthlyAttendance={monthlyAttendance} />\n    </div>\n  );\n}; \n\nMonthSummary.propTypes = {\n  monthlyAttendance:   PropTypes.object.isRequired,\n  compensationSummary: PropTypes.object.isRequired\n};\n\nexport default MonthSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as _ from 'lodash';\nimport UserDetails from '../../components/generic/UserDetails';\nimport CalendarStructure from '../../components/generic/employeeMonthGrid/CalendarStructure';\nimport MonthSummary from './MonthSummary';\n\nconst UserMonthlyAttendance = ({monthlyAttendance, monthToggle, onShowDaySummary}) => {\n  const _onChangeMonth = (check) => {\n    if (check === 'previous') {\n      monthToggle(monthlyAttendance.userid, monthlyAttendance.previousMonth.year, monthlyAttendance.previousMonth.month);\n    } else if (check === 'next') {\n      monthToggle(monthlyAttendance.userid, monthlyAttendance.nextMonth.year, monthlyAttendance.nextMonth.month);\n    }\n  };\n  return (\n    <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n      <div className=\"app-body\" id=\"view\">\n        <div>\n          <div className=\"fullcalendar fc fc-ltr fc-unthemed\">\n            <div className=\"fc-toolbar\">\n              <div className=\"fc-left\">\n                <button type=\"button\" className=\"fc-prev-button fc-button fc-state-default fc-corner-left fc-corner-right\" onClick={() => _onChangeMonth('previous')}>\n                  <span className=\"fc-icon fc-icon-left-single-arrow\"></span>\n                </button>\n              </div>\n              <div className=\"fc-right\">\n                <button type=\"button\" className=\"fc-next-button fc-button fc-state-default fc-corner-left fc-corner-right\" onClick={() => _onChangeMonth('next')}>\n                  <span className=\"fc-icon fc-icon-right-single-arrow\"></span>\n                </button>\n              </div>\n              <div className=\"fc-center\">\n                <h2>\n                  {monthlyAttendance.monthName}\n                  {monthlyAttendance.year}</h2>\n              </div>\n              <div className=\"fc-clear\"></div>\n            </div>\n            <br />\n            <UserDetails monthlyAttendance={monthlyAttendance} />\n            <MonthSummary monthlyAttendance={monthlyAttendance} />\n            <div className=\"fc-view-container\">\n              <div className=\"fc-view fc-month-view fc-basic-view\">\n                <div className=\"fc-body\">\n                  <div className=\"fc-widget-content\">\n                    <div className=\"fc-day-grid-container\">\n                      <div className=\"fc-day-grid\">\n                        <CalendarStructure userId={monthlyAttendance.userid} month={monthlyAttendance.attendance} onShowDaySummary={onShowDaySummary} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nUserMonthlyAttendance.propTypes = {\n  monthlyAttendance: PropTypes.shape({\n    userid:        PropTypes.number.isRequired,\n    previousMonth: PropTypes.object.isRequired,\n    nextMonth:     PropTypes.object.isRequired,\n    attendance:    PropTypes.object.isRequired,\n    monthName:     PropTypes.string.isRequired,\n    year:          PropTypes.number.isRequired\n  }).isRequired\n};\n\nexport default UserMonthlyAttendance;\n"],"sourceRoot":""}