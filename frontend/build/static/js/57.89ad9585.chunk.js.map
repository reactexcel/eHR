{"version":3,"sources":["components/inventory/deviceDetails.jsx","modules/inventory/components/UnassignDevice.js","modules/inventory/components/AssignDevice.js","modules/inventory/containers/myInventory.jsx"],"names":["path","CONFIG","inventory_images","DeviceDetails","_ref","userAssignMachine","unassignDevice","loggedUser","handleAuditClick","activeAudits","activeAuditId","showPending","machineList","_","map","val","i","auditComment","audit_current_month_status","status","audit_comment","react_default","a","createElement","key","style","width","id","fileInventoryPhoto","className","src","machine_type","machine_name","bill_number","serial_number","assign_date","data-toggle","data-target","onClick","background","includes","fontSize","disabled","CircularProgress_default","size","thickness","marginLeft","title","length","moment","updated_at","format","textAlign","data","role","aria-hidden","color","cursor","isEmpty","colSpan","UnassignDevice","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","comment","target","value","inventory_id","device","resetForm","baseState","state","handleAddUserComment","bind","assertThisInitialized","_this$state","callAddUserComment","_this2","Dialog_default","titleStyle","opacity","modal","open","onRequestClose","handleClose","contentStyle","maxWidth","autoScrollBodyContent","onChange","marginTop","React","Component","AssignDevice","handleOpen","handleAssign","stopPropagation","handleAddDialog","user_id","callAssignDevice","unassignInventory","unassignDeviceList","padding","borderBottom","marginRight","mac_address","date_of_purchase","openAssign","handleCloseAssign","MyInventory","activeItemName","handleAuditSubmit","auditMsg","activeBtn","concat","$","onAddAuditComment","then","res","onGetMyInventory","catch","remainActive","filter","n","status_message","openUnassigned","openAssigned","user_profile_detail","user_assign_machine","show_alert_message","onIsAlreadyLogin","callUpdateUserDeviceDetails","onUnassignDeviceList","onMyProfileDetails","isNotValid","isNotUserValid","location","pathname","redirectTo","history","push","myProfile","myInventory","newDeviceDetails","onUpdateDeviceDetails","assign_device","_this3","onAssignDevice","notify","error","unassignedDeviceList","addUserCommentDetails","onAddUserComment","_this4","Menu","Header","assign","pageTitle","data-backdrop","data-dismiss","type","onKeyUp","keyCode","required","AssignDevice_AssignDevice","deviceDetails","UnassignDevice_UnassignDevice","user_Id","RouterVisibleMyInventory","withRouter","connect","frontend","toJS","logged_user","userLogin","manageDevice","dispatch","actions","msg","actionsMyProfile","actionsManageDevice"],"mappings":"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","file":"static/js/57.89ad9585.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { CONFIG } from \"../../config/index\";\nimport CircularProgress from \"material-ui/CircularProgress\";\n\nlet path = CONFIG.inventory_images;\nconst DeviceDetails = ({\n  userAssignMachine,\n  unassignDevice,\n  loggedUser,\n  handleAuditClick,\n  activeAuditId,\n  activeAudits,\n  showPending\n}) => {  \n  let machineList = _.map(userAssignMachine, (val, i) => {\n    const auditComment =\n      val.audit_current_month_status.status !== false\n        ? val.audit_current_month_status.status.audit_comment\n        : \"\";\n    return (\n      <tr key={i}>\n        <td style={{ width: \"180px\" }}>\n          {val.id}\n          <br />\n          <br />\n          {val.fileInventoryPhoto ? (\n            <a className=\"thumbnail\">\n              <img src={path + val.fileInventoryPhoto} />\n            </a>\n          ) : null}\n        </td>\n        <td>{val.machine_type}</td> \n        <td>{val.machine_name}</td>\n        <td>{val.bill_number}</td>\n        <td>{val.serial_number}</td>\n        <td style={{ width: \"100px\" }}>{val.assign_date}</td> \n        <td style={{ width: \"240px\" }}>\n          {val.audit_current_month_status.status === false ? (\n            <button\n              className=\"btn btn-primary btn-responsives audit-btn\"\n              data-toggle=\"modal\"\n              data-target=\"#modalAudit\"\n              onClick={() => handleAuditClick(val)}\n              style={{ background: activeAudits.includes(val.id) && !showPending?\"green\":\"red\", fontSize:\"13px\" }}\n              disabled={activeAudits.includes(val.id) && !showPending}\n            >\n            {activeAudits.includes(val.id) && !showPending ?\n            <CircularProgress\n            size={15}\n            thickness={3}\n            style={{ marginLeft: \"0%\" }}\n          />\n            :\"Audit Pending\"\n            }\n            </button>\n            \n          ) : (\n            <div style={{width:\"inherit\"}}>\n              <div style={{width:\"inherit\"}}>\n                <p\n                  title={auditComment}\n                  className={auditComment.length > 100 ? \"audit-comment\" : \"\"}\n                >\n                  {auditComment}\n                </p>\n              </div>\n              <div>\n                Audited On -{moment(\n                  val.audit_current_month_status.status.updated_at\n                ).format(\"Do MMMM YYYY, h:mm:ss a\")}\n              </div>\n            </div>\n          )}\n        </td>\n        <td style={{ textAlign: \"center\" }}>\n          {loggedUser.data.role === \"Admin\" ? (\n            <i\n              className=\"fa fa-lg fa fa-trash\"\n              onClick={() => unassignDevice(val)}\n              aria-hidden=\"true\"\n              style={{\n                color: \"rgb(183, 28, 28)\",\n                textAlign: \"center\",\n                cursor: \"pointer\"\n              }}\n            />\n          ) : null}\n        </td>\n      </tr>\n    );\n  });\n  if (_.isEmpty(machineList)) {\n    machineList = (\n      <tr>\n        <td colSpan=\"5\">\n          <h5 className=\"text-center text-danger\">{\"Device Not Asssigned\"}</h5>\n        </td>\n      </tr>\n    );\n  }\n\n  return (\n    <div className=\"row no-gutter box\">\n      <h6 className=\"text-center\">Assigned Device Details</h6>\n      <div className=\"table-responsive\">\n        <table className=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Device Type</th>\n              <th>Name</th>\n              <th>Excellence Bill Number</th>\n              <th>Serial Number</th>\n              <th>Assign Date</th>\n              <th>Audit Status</th>\n              {loggedUser.data.role === \"Admin\" ? (\n                <th style={{ textAlign: \"center\" }}>Unassign</th>\n              ) : null}\n            </tr>\n          </thead>\n          <tbody>{machineList}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nDeviceDetails.propTypes = {\n  userAssignMachine: PropTypes.array.isRequired\n};\n\nexport default DeviceDetails;\n","import React from \"react\";\nimport Dialog from \"material-ui/Dialog\";\nimport PropTypes from \"prop-types\";\n\n\nexport default class UnassignDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: \"\",\n      inventory_id: \"\"\n    };\n    this.baseState = this.state;\n    this.handleAddUserComment = this.handleAddUserComment.bind(this);\n  }\n\n  handleAddUserComment() {\n\n    let { inventory_id, comment } = this.state;\n    this.props.callAddUserComment({ inventory_id, comment });\n    this.setState({\n      comment: ''\n    });\n  }\n  handleChange = e => {\n    this.setState({\n      comment: e.target.value,\n      inventory_id: this.props.device.id\n    });\n  };\n\n  resetForm = () => {\n    this.setState(this.baseState);\n  };\n\n  render() {\n\n    return (\n      <div>\n        <Dialog\n          title=\"Unassign Device\"\n          titleStyle={{ opacity: \"0.56\" }}\n          modal={false}\n          open={this.props.open}\n          onRequestClose={()=>{this.props.handleClose();\n          this.resetForm()}}\n          contentStyle={{ width: \"70%\", maxWidth: \"none\" }}\n          autoScrollBodyContent\n        >\n          <div className=\"col-md-12\">\n            <div className=\"row -py-sm\">\n              <div className=\"col-sm-3\">\n                <p style={{ opacity: \"0.56\" }}>Device Name:</p>\n              </div>\n\n              <div className=\"col-sm-2\">\n                <p>{this.props.device.machine_name}</p>\n              </div>\n\n              <div className=\"col-sm-3\">\n                <p style={{ opacity: \"0.56\" }}>Device Type:</p>\n              </div>\n\n              <div className=\"col-sm-4\">\n                <p>{this.props.device.machine_type}</p>\n              </div>\n            </div>\n\n            <div className=\"row p-y-sm\">\n              <div className=\"col-sm-3\">\n                <p style={{ opacity: \"0.56\" }}>Assign Date:</p>\n              </div>\n\n              <div className=\"col-sm-2\">\n                <p>{this.props.device.assign_date}</p>\n              </div>\n\n              <div className=\"col-sm-3\">\n                <p style={{ opacity: \"0.56\" }}>Serial Number:</p>\n              </div>\n\n              <div className=\"col-sm-4\">\n                <p>{this.props.device.serial_number}</p>\n              </div>\n            </div>\n\n            <div className=\"row p-y-sm\">\n              <div className=\"col-md-12\" style={{ opacity: \"0.56\" }}>\n                {\"Comment:\"}\n                <textarea\n                  value={this.state.comment}\n                  style={{ width: \"100%\" }}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <button\n              className=\"col-md-12 md-btn md-raised m-b-sm indigo\"\n              onClick={() => {\n                this.handleAddUserComment();\n                this.resetForm();\n              }}\n              style={{ opacity: \"0.76\", marginTop: \"2%\" }}\n            >\n              Unassign Device\n            </button>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nUnassignDevice.propTypes = {\n  displayData: PropTypes.shape({\n    roles: PropTypes.array\n  }).isRequired,\n  callAddUserComment: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport Dialog from \"material-ui/Dialog\";\nimport PropTypes from \"prop-types\";\nimport * as _ from \"lodash\";\n\nexport default class AssignDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleAssign = this.handleAssign.bind(this);\n  }\n\n  handleOpen(e) {\n    e.stopPropagation();\n    this.props.handleAddDialog();\n  }\n  handleAssign(inventory_id,user_id){\n  this.props.callAssignDevice( {inventory_id, user_id} );\n  }\n\n  render() {\n    const unassignInventory = _.map(\n      this.props.unassignDeviceList,\n      (val, i) => {\n        return (\n          <tr key={i}  style={{background: 'green',padding:'20px', borderBottom: '2px solid white'}}>\n                        <td style={{marginRight: '0%', width: '5%',cursor:'pointer'}}>{i+1}</td>\n                        <td  style={{marginRight: '0%', width: '5%',cursor:'pointer'}}>{val.machine_type}</td>\n                        <td  style={{marginRight: '0%', width: '5%',cursor:'pointer'}}>{val.machine_name}</td>\n                        <td  style={{marginRight: '0%', width: '5%',cursor:'pointer'}}>MAC Address : {val.mac_address}<br/>Date of purchase : {val.date_of_purchase}</td>\n                        <td  style={{marginRight: '0%', width: '5%',cursor:'pointer'}}>{val.status}</td>\n                        <td><button\n                        onClick={()=>this.handleAssign(val.id , this.props.user_id)}\n              className=\"col-md-14 md-btn md-raised m-b-sm indigo\"\n              style={{ opacity: \"0.76\", marginTop: \"2%\"  }}\n            >\n              Assign Device\n            </button></td>\n                      </tr>\n        );\n      }\n    );\n\n\n\n\n    return (\n      <div className=\"p-y\">\n      {this.props.loggedUser.data.role ==='Admin'?  <button\n          className=\"md-btn md-raised m-b-sm indigo\"\n          onClick={this.handleOpen}\n        >\n          Assign Device\n        </button>:null}\n        <Dialog\n          title=\"Assign Device\"\n          titleStyle={{ opacity: \"0.56\" }}\n          modal={false}\n          open={this.props.openAssign}\n          onRequestClose={this.props.handleCloseAssign}\n          contentStyle={{ width: \"70%\", maxWidth: \"none\" }}\n          autoScrollBodyContent\n        >\n          <div className=\"col-md-12\">\n            <div className=\"row -py-sm\">\n              <div className=\"col-12\">  \n                <div className=\"box p-y\">\n                  <div className=\"box-divider m-a-0\" />\n                  <div className=\"table-responsive\">\n                    <table key=\"\" className=\"table\">\n                      <thead className=\"success\">\n                        <tr>\n                          <th>Sr. No</th>\n                          <th>Device</th>\n                          <th>Name</th>\n                          <th>Informations</th>\n                          <th>Status/Commments</th>\n                          <th>Assign</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                      {unassignInventory}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* <button\n              className=\"col-md-12 md-btn md-raised m-b-sm indigo\"\n              style={{ opacity: \"0.76\", marginTop: \"2%\" }}\n            >\n              Assign Device\n            </button> */}\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n\nAssignDevice.propTypes = {\n  displayData: PropTypes.shape({\n    roles: PropTypes.array\n  }).isRequired,\n  callAssignDevice: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { notify } from \"../../../services/notify\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport DeviceDetails from \"../../../components/inventory/deviceDetails\";\nimport * as actionsMyProfile from \"../../../redux/myProfile/actions/myProfile\";\nimport * as actions from '../../../redux/actions';\nimport * as actionsManageDevice from \"../../../redux/inventory/actions/inventory\";\nimport UnassignDevice from \"../../../modules/inventory/components/UnassignDevice\";\nimport AssignDevice from \"../../../modules/inventory/components/AssignDevice\";\nimport _ from \"lodash\";\nimport $ from 'jquery';\n\nclass MyInventory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_id: [],\n      status_message: \"\",\n      openUnassigned: false,\n      openAssigned: false,\n      user_profile_detail: {},\n      user_assign_machine: [],\n      device: [],\n      unassignDeviceList: [],\n      activeAuditId: \"\",\n      auditMsg: \"\",\n      activeItemName: \"\",\n      show_alert_message: true,\n      activeAudits: []\n    };\n    this.props.onIsAlreadyLogin();\n    this.callUpdateUserDeviceDetails = this.callUpdateUserDeviceDetails.bind(\n      this\n    );\n    this.unassignDevice = this.unassignDevice.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleAddDialog = this.handleAddDialog.bind(this);\n    this.handleCloseAssign = this.handleCloseAssign.bind(this);\n    this.callAddUserComment = this.callAddUserComment.bind(this);\n    this.callAssignDevice = this.callAssignDevice.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.onUnassignDeviceList();\n    this.props.onMyProfileDetails();\n    this.props.onGetMyInventory();\n  }\n  componentWillReceiveProps(props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status && isNotValid.redirectTo !== '/my_inventory') {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    this.setState({\n      user_profile_detail: props.myProfile.user_profile_detail,\n      user_assign_machine: props.myProfile.myInventory,\n      show_alert_message: true\n    });\n    if (props && props.myProfile && props.myProfile.myInventory) {\n      _.map(props.myProfile.myInventory, val => {\n        if (!val.audit_current_month_status.status) {\n          this.setState({ show_alert_message: false });\n        }\n      });\n    }\n  }\n\n  callUpdateUserDeviceDetails(newDeviceDetails) {\n    this.props.onUpdateDeviceDetails(newDeviceDetails);\n  }\n  callAssignDevice(assign_device) {\n    this.props.onAssignDevice(assign_device).then(\n      data => {\n        this.props.onGetMyInventory();\n        notify(\"Success!\", data, \"success\");\n      },\n      error => {\n        notify(\"Error!\", error, \"error\");\n      }\n    );\n  }\n  unassignDevice(val) {\n    this.setState({\n      openUnassigned: true,\n      status_message: \"\",\n      device: val\n    });\n  }\n  handleClose() {\n    this.setState({\n      openUnassigned: false,\n      status_message: \"\"\n    });\n  }\n  handleCloseAssign() {\n    this.setState({\n      openAssigned: false,\n      status_message: \"\"\n    });\n  }\n  handleAddDialog() {\n    this.setState({\n      user_id: this.props.loggedUser.data.id,\n      unassignDeviceList: this.props.unassignedDeviceList.unassignedDeviceList,\n      openAssigned: true,\n      status_message: \"\"\n    });\n  }\n  callAddUserComment(addUserCommentDetails) {\n    this.props.onAddUserComment(addUserCommentDetails);\n    this.setState({\n      openUnassigned: false,\n      status_message: \"\"\n    });\n  }\n  handleAuditClick = val => {\n    this.setState({\n      activeAuditId: val.id,\n      activeItemName: val.machine_name\n    });\n  };\n  handleAuditSubmit = (activeAuditId, auditMsg) => {\n    const activeBtn = this.state.activeAudits.concat(activeAuditId);\n    this.setState({\n      activeAudits: activeBtn\n    });\n    $(\"#modalAudit\").modal(\"hide\");\n    this.props\n      .onAddAuditComment(activeAuditId, auditMsg)\n      .then(res => {\n        this.props.onGetMyInventory();\n      })\n      .catch(() => {\n        const remainActive = _.filter(this.state.activeAudits, function(n) {          \n          return n !== activeAuditId;\n        });        \n        this.setState({\n          activeAudits: remainActive\n        });\n      });\n    this.setState({\n      auditMsg: \"\"\n    });\n  };\n  render() {\n    const {\n      auditMsg,\n      activeAuditId,\n      activeItemName,\n      show_alert_message\n    } = this.state;\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={\"My Inventory\"} {...this.props} />\n          <div id=\"modalAudit\" className=\"modal\" data-backdrop=\"true\">\n            <div className=\"modal-dialog modal-lg\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <div>\n                    <div className=\"col-xs-11\">\n                      <h5 className=\"modal-title\">Audit of {activeItemName}</h5>\n                    </div>\n                    <div className=\"col-xs-1\">\n                      <button\n                        className=\"btn btn-icon white\"\n                        data-dismiss=\"modal\"\n                      >\n                        <i className=\"fa fa-remove\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"modal-body p-lg\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 form-control-label\">\n                      Message\n                    </label>\n                    <div className=\"col-sm-9\">\n                      <small className=\"text-red-np\">\n                        <i>\n                          Add a short description about inventory. Eg. Working\n                          fine, keys not working, etc.\n                        </i>\n                      </small>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={auditMsg}\n                        onChange={e =>\n                          this.setState({\n                            auditMsg: e.target.value\n                          })\n                        }\n                        onKeyUp={e => {\n                          if (e.keyCode === 13) {\n                            if (auditMsg != \"\") {\n                              this.handleAuditSubmit(activeAuditId, auditMsg);\n                            }\n                          }\n                        }}\n                        required\n                      />\n                      {auditMsg === \"\" ? (\n                        <small className=\"text-red-np\">\n                          {\" \"}\n                          Please write something\n                        </small>\n                      ) : null}\n                    </div>\n                  </div>\n                  <div className=\"form-group row m-t-md\">\n                    <div className=\"col-sm-10\">\n                      <button\n                        className=\"md-btn md-raised m-b-sm w-xs blue\"\n                        onClick={() => {\n                          if (auditMsg != \"\") {\n                            this.handleAuditSubmit(activeAuditId, auditMsg);\n                          }\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row no-gutter\">\n                {!show_alert_message ? (\n                  <div className=\"col-xs-12 text-red bg-white\">\n                    <h6>Important:</h6>\n                    <h6>-Your monthly audit of inventories is pending.</h6>\n                    <h6>\n                      -Click on Audit Pending button to do audit of an\n                      inventory.\n                    </h6>\n                    <h6>\n                      -Once you are done with all the inventories you will be\n                      able to access rest of HR app.\n                    </h6>\n                  </div>\n                ) : null}\n              </div>\n              <AssignDevice\n                handleCloseAssign={this.handleCloseAssign}\n                openAssign={this.state.openAssigned}\n                handleAddDialog={this.handleAddDialog}\n                unassignDeviceList={this.state.unassignDeviceList}\n                callAssignDevice={this.callAssignDevice}\n                user_id={this.state.user_id}\n                loggedUser={this.props.loggedUser}\n              />\n              <DeviceDetails\n                unassignDevice={this.unassignDevice}\n                userAssignMachine={this.state.user_assign_machine}\n                callUpdateUserDeviceDetails={this.callUpdateUserDeviceDetails}\n                loggedUser={this.props.loggedUser}\n                handleAuditClick={this.handleAuditClick}\n                activeAuditId={this.state.activeAuditId}\n                activeAudits={this.state.activeAudits}\n                showPending={this.props.showPending}\n              />\n            </div>\n            <UnassignDevice\n              callAddUserComment={this.callAddUserComment}\n              user_Id={this.state.user_profile_detail.user_Id}\n              handleClose={this.handleClose}\n              open={this.state.openUnassigned}\n              device={this.state.device}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) { \n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    myProfile: state.myProfile.toJS(),\n    unassignedDeviceList: state.manageDevice.toJS(),\n    showPending: state.myProfile.toJS().showPending\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onAddAuditComment: (id, msg) => {\n      return dispatch(actionsMyProfile.addInventoryAudit(id, msg));\n    },\n    onMyProfileDetails: () => {\n      return dispatch(actionsMyProfile.getMyProfileDetails());\n    },\n    onUpdateDeviceDetails: newDeviceDetails => {\n      return dispatch(\n        // actionsMyProfile.updateUserDeviceDetails(newDeviceDetails)\n      );\n    },\n    onAddUserComment: addUserCommentDetails => {\n      return dispatch(\n        actionsManageDevice.addUserComment(addUserCommentDetails)\n      );\n    },\n    onUnassignDeviceList: () => {\n      return dispatch(actionsManageDevice.unassignDeviceList());\n    },\n    onAssignDevice: assign_device => {\n      return dispatch(actionsManageDevice.assignDevice(assign_device));\n    },\n    onGetMyInventory: () => {\n      return dispatch(actionsMyProfile.getMyInventory());\n    }\n  };\n};\n\nconst RouterVisibleMyInventory = withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MyInventory)\n);\n\nexport default RouterVisibleMyInventory;\n"],"sourceRoot":""}