{"version":3,"sources":["components/myDocuments/ListDocuments.jsx","modules/myDocuments/components/FormMyDocuments.jsx","modules/myDocuments/containers/myDocuments.jsx","redux/myDocuments/actions/myDocument.js","modules/uploadImageCompressed/UploadImageComp.jsx","redux/uploadImageComp/actions/uploadImageComp.js"],"names":["ListDocuments","_ref","myDocuments","deleteDocument","myDocs","_","map","doc","key","react_default","a","createElement","className","document_type","onClick","id","link_1","dangerouslySetInnerHTML","__html","isEmpty","FormMyDocuments","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","open","handleOpen","state","token","file","user_id","page_url","window","location","href","bind","assertThisInitialized","callUpdateDocuments","handleFileChange","getToken","e","_this2","Array","from","target","files","refs","reader","FileReader","onloadend","imageUrl","result","readAsDataURL","type","link1","value","stop","notify","declear","checked","preventDefault","docId","_this3","onDeleteDocument","then","msg","onGetMydocuments","toString","catch","err","_this4","actions","FlatButton_default","label","primary","action","CONFIG","upload_url","method","encType","ref","onChange","name","multiple","src","Dialog_default","modal","onRequestClose","autoScrollBodyContent","UploadImageComp","url","params","fileName","myDocuments_ListDocuments","my_documents","React","Component","MyDocuments","onIsAlreadyLogin","my_document","message","scrollTo","isNotValid","isNotUserValid","pathname","loggedUser","status","history","push","redirectTo","status_message","Menu","role","Header","assign","pageTitle","components_FormMyDocuments","data","onUpdatedocuments","VisibleMyDocuments","connect","frontend","toJS","logged_user","userLogin","myProfile","myDocument","dispatch","actionsMyDocument","RouterVisibleMyDocuments","withRouter","__webpack_require__","d","__webpack_exports__","getMyDocument","redux_actions__WEBPACK_IMPORTED_MODULE_0__","_services_index__WEBPACK_IMPORTED_MODULE_2__","_redux_generic_actions_frontend__WEBPACK_IMPORTED_MODULE_3__","_redux_constants__WEBPACK_IMPORTED_MODULE_4__","error_my_document","createAction","constants","getState","Promise","resolve","reject","show_loading","fireAjax","json","hide_loading","error","doc_id","async_deleteDocument","loading","handleSubmit","includes","quality","qualityValue","ImageCompressor","compress","formData","FormData","append","delete","axios","post","onFetchDevice","onFetchUnapprovedUser","onGetMyDocuments","request","statusText","isRole","onUploadFile","CircularProgress_default","size","thickness","style","marginLeft","onSubmit","uploadImage","actionsManageDevice","uploadfile","payload","actionMyDocuments"],"mappings":"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","file":"static/js/42.74723644.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst ListDocuments = ({myDocuments, deleteDocument}) => {\n  let myDocs = _.map(myDocuments, (doc, key) => {\n    return (<li key={key} className=\"list-group-item\">\n      <div className=\"clear\">\n        <h5>{doc.document_type}\n          <span className=\"glyphicon glyphicon-remove-circle pull-right pointer\" onClick={() => { deleteDocument(doc.id); }}></span>\n        </h5>\n        {typeof doc.link_1 === 'undefined' ? '' : <div className=\"col-xs-12\" dangerouslySetInnerHTML={{__html: doc.link_1}}></div>}\n      </div>\n    </li>);\n  });\n  if (_.isEmpty(myDocs)) {\n    myDocs = <li className=\"list-group-item text-center\"><span>No document uploaded</span></li>;\n  }\n  return (\n    <div className=\"col-sm-6 p-x-md\">\n      <h6 className=\"text-center\">Uploaded Documents</h6>\n      <ul className=\"list-group m-b thumbnail\">\n        {myDocs}\n      </ul>\n    </div>\n  );\n};\n\nListDocuments.propTypes = {\n  myDocuments:    PropTypes.array.isRequired,\n  deleteDocument: PropTypes.func.isRequired\n};\n\nexport default ListDocuments;\n","import React from \"react\";\nimport { CONFIG } from \"../../../config/index\";\nimport { notify } from \"../../../services/notify\";\nimport { getToken } from \"../../../services/generic\";\nimport ListDocuments from \"../../../components/myDocuments/ListDocuments\";\nimport UploadImageComp from \"../../uploadImageCompressed/UploadImageComp\";\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\n\n\nclass FormMyDocuments extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      document_type: \"\",\n      token: \"\",\n      file: [],\n      user_id: this.props.user_id,\n      page_url: window.location.href\n    };\n    this.deleteDocument = this.deleteDocument.bind(this);\n    this.callUpdateDocuments = this.callUpdateDocuments.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      token: getToken()\n    });\n  }\n  handleFileChange(e) {\n    this.setState({ file: Array.from(e.target.files) });\n    const file = this.refs.file.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({\n        imageUrl: reader.result\n      });\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n      this.setState({\n        imageUrl: reader.result\n      });\n    } else {\n      this.setState({\n        imageUrl: \"\"\n      });\n    }\n  }\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  handleOpen = () => {\n    this.setState({open:true});\n  }\n  callUpdateDocuments(e) {\n    let type = this.state.document_type;\n    let link1 = this.refs.file.value;\n    let file = this.state.file[0];\n    let stop = false;\n    if (type === \"\") {\n      stop = true;\n      notify(\"Warning!\", \"Please select document type.\", \"warning\");\n    } else if (link1 === \"\") {\n      stop = true;\n      notify(\"Warning!\", \"Please select a file\", \"warning\");\n    } else if (this.refs.declear.checked !== true) {\n      stop = true;\n      notify(\"Warning!\", \"Mark declearation before submit\", \"warning\");\n     } \n\n    if (stop) {\n      e.preventDefault();\n    }\n  }\n  deleteDocument(docId) {\n    this.props\n      .onDeleteDocument(docId)\n      .then(msg => {\n        this.props.onGetMydocuments();\n        notify(\"Success!\", msg.toString(), \"success\");\n      })\n      .catch(err => {\n        notify(\"Error!\", err.toString(), \"error\");\n      });\n  }\n\n  render() {\n    const actions = [\n      <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\n    ];\n    return <div className=\"row p-t-md\">\n        <div className=\"col-sm-6 p-x-md\">\n          <h6 id=\"uploadMyDoc\" className=\"text-center pointer in\">\n            Upload New Documents\n          </h6>\n          <div className=\"row box p-a-md m-b-lg \" id=\"uploadDoc\">\n            <form action={CONFIG.upload_url} method=\"POST\" encType=\"multipart/form-data\">\n              <div className=\"form-group\">\n                <label className=\"col-sm-12\">Document Type</label>\n                <select className=\"form-control\" ref=\"document_type\" \n                  onChange={() => {\n                    this.setState({\n                      document_type: this.refs.document_type.value,\n                      file: []\n                    });\n                    this.refs.file.value = \"\";\n                  }} \n                  value={this.state.document_type}>\n                  <option value=\"\">--- Select Doc Type ---</option>\n                  <option value=\"CV\">CV</option>\n                  <option value=\"PAN Card\">PAN Card</option>\n                  <option value=\"Address Proof\">Address Proof</option>\n                  <option value=\"Photo\">Photo</option>\n                  <option value=\"Offer Letter\">Offer Letter</option>\n                  <option value=\"Appointment Letter\">\n                    Appointment Letter\n                  </option>\n                  <option value=\"Previous Company Experience Letter\">\n                    Previous Company Experience Letter\n                  </option>\n                  <option value=\"Previous Company Offer Letter\">\n                    Previous Company Offer Letter\n                  </option>\n                  <option value=\"Previous Company Salary Slip\">\n                    Previous Company Salary Slip\n                  </option>\n                  <option value=\"Previous Company Other Documents\">\n                    Previous Company Other Documents\n                  </option>\n                  <option value=\"Qualification Certificate\">\n                    Qualification Certificate\n                  </option>\n                  <option value=\"Other Documents\">Other Documents</option>\n                </select>\n              </div>\n              <input type=\"hidden\" name=\"document_type\" value={this.state.document_type} />\n              <div className=\"form-group\">\n                <label className=\"col-sm-12\">Attachment </label>\n                <input type=\"file\" className=\"form-control\" ref=\"file\" name=\"link_1\" multiple=\"multiple\" onChange={this.handleFileChange} />\n              </div>\n              <div className=\"form-group col-sm-12\">\n                <input type=\"checkbox\" ref=\"declear\" className=\"vertical-middle\" />\n                <span className=\"declaration\">\n                  <b>*IMPORTANT: </b>&nbsp;By uploading this document you certify that these document are true and all information is correct\n                </span>\n              </div>\n              <div className=\"form-group\">\n                {this.state.file[0] ? <div>\n                    <label className=\"col-xs-12\">Image Preview </label>\n                    <img src={this.state.imageUrl} onClick={() => {\n                        this.handleOpen();\n                      }} className=\"small\" />\n                    <br />\n                  </div> : null}\n                <Dialog actions={actions} modal={false} open={this.state.open} onRequestClose={this.handleClose} autoScrollBodyContent={true}>\n                  <div className=\"thumbnail\">\n                    <img src={this.state.imageUrl} />\n                  </div>\n                </Dialog>\n              </div>\n              <div className=\"form-group col-sm-12\">\n                <UploadImageComp callUpdateDocuments={this.callUpdateDocuments} url={CONFIG.upload_url} params={this.state} file={this.state.file[0]} fileName=\"link_1\" />\n              </div>\n            </form>\n          </div>\n        </div>\n        <ListDocuments myDocuments={this.props.my_documents} deleteDocument={this.deleteDocument} />\n      </div>;\n  }\n}\n\nexport default FormMyDocuments;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport FormMyDocuments from '../../../modules/myDocuments/components/FormMyDocuments';\nimport * as actions from '../../../redux/actions';\nimport * as actionsMyDocument from '../../../redux/myDocuments/actions/myDocument';\n\nclass MyDocuments extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      my_document: [],\n      message:     ''\n    };\n  }\n  componentWillMount () {\n    this.props.onGetMydocuments();\n  }\n  componentWillReceiveProps (props) {\n    window.scrollTo(0, 0);\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n    this.setState({\n      my_document: props.myDocuments.my_document,\n      message:     props.myDocuments.status_message\n    });\n  }\n  render () {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'My Document'} {...this.props} />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <FormMyDocuments my_documents={this.state.my_document} user_id={this.props.loggedUser.data.id} callUpdateDocuments={this.props.onUpdatedocuments} {...this.props} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:    state.frontend.toJS(),\n    loggedUser:  state.logged_user.userLogin,\n    myProfile:   state.myProfile.toJS(),\n    myDocuments: state.myDocument.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onGetMydocuments: () => {\n      return dispatch(actionsMyDocument.getMyDocument());\n    },\n    onDeleteDocument: (docId) => {\n      return dispatch(actionsMyDocument.deleteDocument(docId));\n    }\n  };\n};\n\nconst VisibleMyDocuments = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyDocuments);\n\nconst RouterVisibleMyDocuments = withRouter(VisibleMyDocuments);\n\nexport default RouterVisibleMyDocuments;\n","import {createAction} from 'redux-actions';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\n\n// ---------get user document\n\nexport function success_my_document (data) {\n  return createAction(constants.ACTION_SUCCESS_MY_DOCUMENT)(data);\n}\nexport function error_my_document (data) {\n  return createAction(constants.ACTION_ERROR_MY_DOCUMENT)(data);\n}\n\nfunction async_getMyDocument () {\n  return fireAjax('POST', '', {\n    'action': 'get_user_document'\n  });\n}\n\nexport function getMyDocument () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_getMyDocument().then(\n\n\t\t\t(json) => {\n  dispatch(hide_loading());\n  if (json.error === 0) {\n    dispatch(success_my_document(json.data));\n\t\t\t\t\t// resolve('disabled')\n  } else {\n    dispatch(error_my_document(json.data.message));\n\t\t\t\t\t// reject('response with Error')\n  }\n},\n\t\t\t(error) => {\n  dispatch(hide_loading()); // hide loading icon\n  dispatch(error_my_document('error occurs!!!'));\n\t\t\t\t// reject('error occurs!!')\n}\n\t\t\t);\n    });\n  };\n}\n// ------Delete user document\nfunction async_deleteDocument (doc_id) {\n  return fireAjax('POST', '', {\n    'action': 'delete_user_document',\n    'id':     doc_id\n  });\n}\n\nexport function deleteDocument (doc_id) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_deleteDocument(doc_id).then(\n        (json) => {\n          dispatch(hide_loading());\n          if (json.error === 0) {\n            resolve(json.data.message);\n          } else {\n            reject(json.data.message);\n          }\n        },\n        (error) => {\n          dispatch(hide_loading()); // hide loading icon\n          reject('error occurs!!');\n        }\n\t\t\t);\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport ImageCompressor from \"image-compressor.js\";\nimport { notify } from \"../../services/notify\";\nimport { connect } from \"react-redux\";\nimport { qualityValue } from \"../../helper/helper\";\nimport axios from \"axios\";\nimport CircularProgress from \"material-ui/CircularProgress\";\nimport * as actionsManageDevice from \"../../redux/inventory/actions/inventory\";\nimport * as actionsUploadFile from \"../../redux/uploadImageComp/actions/uploadImageComp\";\nimport * as actionMyDocuments from \"../../redux/myDocuments/actions/myDocument\";\nimport { format } from \"url\";\nclass UploadImageComp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { params } = this.props;\n    const file = this.props.file;\n    const fileName = this.props.fileName; //the name must be same as in backend\n    const url = this.props.url;\n\n    if (!file) {\n      return;\n    } else if (!file.type.includes(\"image\")) {\n      const formData = new FormData();\n      let isRole = this.props.loggedUser.data.role;\n\n      for (let key in params) {\n        formData.append(key, params[key]);\n      }\n      formData.delete('imageUrl');\n      formData.append(fileName, file);\n      formData.append(\"submit\", \"Upload\");\n\n      this.props.onUploadFile(formData, url,isRole);\n    } else {\n      this.setState({ loading: true });\n      let quality = qualityValue(file);\n      let imageCompressor = new ImageCompressor();\n      imageCompressor\n        .compress(file, {\n          quality: quality\n        })\n        .then(file => {\n          const formData = new FormData();\n          for (let key in params) {\n            formData.append(key, params[key]);\n          }\n          formData.delete('imageUrl'); //IMPORTANT: it is the image in ImagePreview  \n          formData.append(fileName, file, file.name);\n          formData.append(\"submit\", \"Upload\");\n          // Send the compressed image file to server with XMLHttpRequest.\n          // this.props.uploadFile(formData, url);\n          axios\n            .post(url, formData)\n            .then(data => {\n              notify(\"Success !\", `File uploaded successfully`, \"success\");\n              this.setState({ loading: false });\n              if (\n                this.props.loggedUser.data.role === \"Admin\"\n              ) {\n                this.props.onFetchDevice();\n                this.props.onFetchUnapprovedUser();\n                this.props.onGetMyDocuments();\n              }\n              else if(this.props.loggedUser.data.role === \"HR\"\n            ){\n              return;\n              // this.props.onFetchDevice();\n            }\n            else{\n              this.props.onGetMyDocuments();\n            }\n            })\n            .catch(error => {\n              if (error.request.status === 413) {\n                notify(\"Error\", \"File too large to upload\", \"error\");\n                this.setState({ loading: false });\n              }\n              else{\n                notify(\"Error\", error.request.statusText, \"error\");\n                this.setState({ loading: false });\n              }\n            });\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading || this.state.loading ? (\n          <CircularProgress\n            size={30}\n            thickness={3}\n            style={{ marginLeft: \"50%\" }}\n          />\n        ) : (\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Upload\"\n              className=\"col-xs-12 md-btn md-raised indigo\"\n              onClick={e => this.props.callUpdateDocuments(e)}\n            />\n          </form>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  loading: state.uploadImage.loading,\n  loggedUser: state.logged_user.userLogin\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchDevice: () => {\n      return dispatch(actionsManageDevice.get_machines_detail());\n    },\n    onUploadFile: () => {\n      return dispatch(actionsUploadFile.uploadFile());\n    },\n    onFetchUnapprovedUser: () => {\n      return dispatch(actionsManageDevice.unapprovedUser());\n    },\n    onGetMyDocuments: () => {\n      return dispatch(actionMyDocuments.getMyDocument());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadImageComp);\n","import { createAction } from \"redux-actions\";\nimport { uploadfile } from \"../../../services/index\";\nimport { notify } from \"../../../services/notify\";\nimport { show_loading, hide_loading } from \"../../../redux/generic/actions/frontend\";\nimport * as actionsManageDevice from \"../../../redux/inventory/actions/inventory\";\nimport * as actionMyDocuments from \"../../../redux/myDocuments/actions/myDocument\";\n\nexport const uploadFile = (formData, url, isRole) => dispatch => {\n  dispatch({ type: \"UPLOADING_FILE\" });\n  uploadfile(formData, url).then(data => {\n    dispatch({ type: \"UPLOAD_FILE\", payload: data });\n    notify(\"Success !\", `File uploaded successfully`, \"success\");\n    if (isRole === \"Admin\") {\n      dispatch(actionsManageDevice.get_machines_detail());\n      dispatch(actionsManageDevice.unapprovedUser());\n      dispatch(actionMyDocuments.getMyDocument());\n    } else if (isRole === \"HR\") {\n      return;\n    } else {\n      dispatch(actionMyDocuments.getMyDocument());\n    }\n  }).catch(error => {\n    dispatch({ type: \"UPLOAD_FILE\", payload: false });\n    notify('Error',error,'error')\n  });\n};\n"],"sourceRoot":""}