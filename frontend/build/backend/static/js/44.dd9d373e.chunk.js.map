{"version":3,"sources":["../../../ReactReduxHR/src/modules/policyDocuments/components/DocumentsList.jsx","../../../ReactReduxHR/src/modules/policyDocuments/containers/PolicyDocument.jsx","../../../ReactReduxHR/src/components/generic/Message.jsx"],"names":["DocumentsList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errClass","errMsg","hideError","bind","assertThisInitialized","updateReadStatus","e","preventDefault","setState","doc","updateDoc","_","map","policyDocuments","data","document","i","read","push","name","onUpdateReadStatus","_this2","documentsList","docId","replace","isReadStrip","react_default","a","createElement","key","id","className","href","link","target","onClick","Message","message","React","Component","PolicyDocumentContainer","isAlreadyLogin","requestUserPolicyDocument","isNotValid","isNotUserValid","location","pathname","loggedUser","status","redirectTo","history","Menu","role","Header","pageTitle","showLoading","isLoading","components_DocumentsList","requestUpdateReadStatus","withRouter","connect","logged_user","userLogin","policyDocument","dispatch","bindActionCreators","actions","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref","style","classname","aria-label"],"mappings":"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","file":"static/js/44.dd9d373e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Message from '../../../components/generic/Message';\n\nclass DocumentsList extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      errClass: 'hidden',\n      errMsg:   ''\n    };\n    this.hideError = this.hideError.bind(this);\n    this.updateReadStatus = this.updateReadStatus.bind(this);\n  }\n  hideError (e) {\n    e.preventDefault();\n    this.setState({\n      errClass: 'hidden',\n      errMsg:   ''\n    });\n  }\n  updateReadStatus (doc, e) {\n    let updateDoc = [];\n    _.map(this.props.policyDocuments.data, (document, i) => {\n      if (document.read !== 0) {\n        updateDoc.push(document.name);\n      }\n    });\n    updateDoc.push(doc.name);\n    this.props.onUpdateReadStatus(updateDoc);\n  }\n  render () {\n    let documentsList = _.map(this.props.policyDocuments.data, (doc, i) => {\n      const docId = doc.name.replace(/ /g,'');\n      let isReadStrip = doc.read ? ' is-read-document' : ' is-not-read-document';\n      return (\n        <div key={i} id={docId} className={'m-y-sm policyDocumentsList clear' + isReadStrip}>\n          <h5>{doc.name}</h5>\n          <a href={doc.link} target=\"_blank\" onClick={() => this.updateReadStatus(doc)}>{doc.link}</a>\n        </div>\n      );\n    });\n    return (\n      <div className=\"app-body\" id=\"view\">\n        <div className='col-sm-12'>\n          <Message className={this.state.errClass} message={this.state.errMsg} onClick={this.hideError} />\n        </div>\n        <div className=\"col-xs-12\">\n          <div className=\"policyDocumentsList m-t-md clear\">\n            <h4>Policy Documents List</h4>\n            <small className=\"text-danger\"><i>(Please read & accept all the policy documents to get access to this site. Incase of issues contact HR)</i></small>\n          </div>\n          {documentsList}\n        </div>\n      </div>\n    );\n  }\n}\n\nDocumentsList.propTypes = {\n  policyDocuments:    PropTypes.array.isRequired,\n  onUpdateReadStatus: PropTypes.func.isRequired\n};\n\nexport default DocumentsList;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport Header from '../../../components/generic/Header';\nimport {isNotUserValid} from '../../../services/generic';\nimport DocumentsList from '../../../modules/policyDocuments/components/DocumentsList';\nimport * as actions from '../../../redux/actions';\n\nclass PolicyDocumentContainer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.isAlreadyLogin();\n  }\n  componentWillMount () {\n    this.props.requestUserPolicyDocument();\n  }\n  componentWillReceiveProps (props) {\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status && isNotValid.redirectTo !== '/policy_documents') {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n  }\n  render () {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Policy Documents'} showLoading={this.props.policyDocuments.isLoading} />\n          <DocumentsList policyDocuments={this.props.policyDocuments} onUpdateReadStatus={this.props.requestUpdateReadStatus} />\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps (state) {\n  return {\n    loggedUser:      state.logged_user.userLogin,\n    policyDocuments: state.policyDocuments.policyDocument\n  };\n}\nconst mapDispatchToProps = (dispatch) => { return bindActionCreators(actions, dispatch); };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PolicyDocumentContainer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  errorAlert: {\n    \"width\": \"100%\",\n    \"display\":\"none\",\n  },\n}\n\nconst Message = ({message, style, className, onClick}) => {\n  let classname = \"alert \" + (className || 'hidden');\n  return (\n    <div className={classname} style={style}>\n      <a href=\"#\" className=\"close\" onClick={onClick} aria-label=\"close\">&times;</a>\n      <span>{message}</span>\n    </div>\n  )\n}\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  style: PropTypes.object,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Message;\n"],"sourceRoot":""}