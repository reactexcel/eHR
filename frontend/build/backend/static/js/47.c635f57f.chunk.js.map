{"version":3,"sources":["../../../ReactReduxHR/src/modules/healthStats/component/HealthStats.jsx","../../../ReactReduxHR/src/modules/healthStats/component/HealthStatsSecretKey.jsx","../../../ReactReduxHR/src/modules/healthStats/component/EmployeeJoiningTerminationStats.jsx","../../../ReactReduxHR/src/modules/healthStats/component/LeaveStats.jsx","../../../ReactReduxHR/src/modules/healthStats/container/ContainerHealthStats.jsx","../../../ReactReduxHR/src/components/generic/input/InputText.jsx"],"names":["HealthStats","data","_this","this","props","healthData","attendance_rows","map","item","index","react_default","a","createElement","key","year","count","className","title","onClick","e","confirm","then","res","deleteHealthStats","aria-hidden","React","Component","HealthStatsSecretKey","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","setState","appName","target","value","handleAddClick","healthStatsAddKeyRequest","state","_this2","healthKeyData","app_info","app_name","secret_key","moment","added_on","format","last_request","healthStatsDeleteKeyRequest","id","healthStatsRegenerateKeyRequest","InputText","placeHolder","onchange","EmployeeJoiningTerminationStats","highChartRender","Highcharts","chart","height","type","renderTo","text","credits","enabled","xAxis","categories","keys","stats","joining_termination_stats","yAxis","min","tooltip","pointFormat","shared","plotOptions","column","stacking","series","name","color","_","flag","nextProps","LeaveStats","o","concat","date","day","total_employees","approved","day_type","handleFlag","ContainerHealthStats","onChange","month","requestStatsLeaveHistory","Date","getMonth","getYear","onIsAlreadyLogin","healthStatsRequest","requestStatsHistory","healthStatsKeyListRequest","getYearArray","deleteHealthData","addSecretKeyData","deleteSecretKeyData","regenerateSecretKeyData","isError","notify","message","isSuccess","Menu","role","Header","pageTitle","showLoading","frontend","show_loading","HealthStats_HealthStats","HealthStatsSecretKey_HealthStatsSecretKey","EmployeeJoiningTerminationStats_EmployeeJoiningTerminationStats","statsHistory","dateFormatter","months","LeaveStats_LeaveStats","statsLeaveHistory","updateFlag","connect","toJS","loggedUser","logged_user","userLogin","healthstats","healthStats","healthStatsSecretKeyList","healthStatsAddSecretKey","healthStatsDeleteSecretKey","healthStatsRegenerateSecretKey","dispatch","actions","appname","appid","payload","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref","ref","style","classname","placeholder","required"],"mappings":"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","file":"static/js/47.c635f57f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { confirm } from \"../../../services/notify\";\n\nexport default class HealthStats extends React.Component {\n  render() {\n    let data;\n    if (this.props.healthData.attendance_rows) {\n      data = this.props.healthData.attendance_rows.map((item, index) => {\n        return (\n          <tr key={index}>\n            <td>{item.year}</td>\n            <td>{item.count}</td>\n            <td>\n              <i\n                className=\"material-icons\"\n                title=\"Delete\"\n                onClick={e => {\n                  confirm(\n                    \"Are you sure ?\",\n                    \"Do you want to delete this record ?\",\n                    \"warning\"\n                  ).then(res => {\n                    if (res) {\n                      this.props.deleteHealthStats(item.year);\n                    }\n                  });\n                }}\n                aria-hidden=\"true\"\n              >\n                delete\n              </i>\n            </td>\n          </tr>\n        );\n      });\n    }\n    return (\n      <div>\n          <h5>\n            DB Health - Attendance Table\n          </h5>\n          <table className=\"table attendance-stats\">\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Count</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>{data}</tbody>\n          </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport InputText from '../../../components/generic/input/InputText';\nimport { confirm } from \"../../../services/notify\";\nimport moment from 'moment';\n\nexport default class HealthStatsSecretKey extends React.Component {\n    constructor() {\n        super();\n        this.state = { appName: \"\" };\n    }\n    handleChange = (e) => {\n        this.setState({ appName: e.target.value });\n    }\n    handleAddClick = () => {\n        this.props.healthStatsAddKeyRequest(this.state.appName);\n        this.setState({ appName: \"\" });\n    }\n    render() {\n        let data;\n        if (this.props.healthKeyData.app_info) {\n            data = this.props.healthKeyData.app_info.map((item, index) => {\n                return (\n                    <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{item.app_name}</td>\n                        <td>{item.secret_key}</td>\n                        <td>\n                        <b>Added on:</b> {moment(item.added_on).format('MMM Do YYYY, h:mm a')} <br></br> \n                        {item.last_request ? <span><b>Last Requested at:</b> {moment(item.last_request).format('MMM Do YYYY, h:mm a')}</span> : null}\n                        </td>\n                        <td>\n                            <i\n                                className=\"material-icons stats-delete-icon\"\n                                onClick={e => {\n                                    confirm(\n                                        \"Are you sure ?\",\n                                        \"Do you want to delete this key ?\",\n                                        \"warning\"\n                                    ).then(res => {\n                                        if (res) {\n                                            this.props.healthStatsDeleteKeyRequest(item.id);\n                                        }\n                                    });\n                                }}\n                                aria-hidden=\"true\"\n                            >\n                                delete\n                            </i>\n                        </td>\n                        <td>\n                            <i\n                                className=\"material-icons stats-refresh-icon\"\n                                onClick={e => {\n                                    confirm(\n                                        \"Are you sure ?\",\n                                        \"Do you want to Regenerate the key ?\",\n                                        \"warning\"\n                                    ).then(res => {\n                                        if (res) {\n                                            this.props.healthStatsRegenerateKeyRequest(item.id);\n                                        }\n                                    });\n                                }}\n                                aria-hidden=\"true\"\n                            >\n                                autorenew\n                            </i>\n                        </td>\n                    </tr>\n                );\n            });\n        }\n        return (\n            <div>\n                <h5>Third Party Api Key</h5>\n                <div className=\"stats-add-icon-div\">\n                    <i\n                        className=\"material-icons stats-add-icon\"\n                        onClick={() => this.handleAddClick()}\n                    >\n                        add_box\n                        </i>\n                </div>\n                <div className=\"app-name-input-div\">\n                    <InputText className=\"app-name-input\" placeHolder=\"App Name\" value={this.state.appName} onchange={this.handleChange} />\n                </div>\n                <table className=\"table table-responsive secret-key-table\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>App</th>\n                            <th>Secret Key</th>\n                            <th>Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport * as _ from \"lodash\";\nexport default class EmployeeJoiningTerminationStats extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      flag: false\n    }\n  }\n  componentWillUpdate(nextProps) {\n    if(!this.state.flag){\n      if (nextProps && nextProps.data && nextProps.data.data && nextProps.data.data.stats) {\n        this.highChartRender(nextProps);\n        this.setState({flag:true});\n      }\n    }\n  }\n  highChartRender = props => {\n    Highcharts.chart({\n      chart: {\n        height:  50 + '%', \n        type: \"column\",\n        renderTo: \"chart-container\"\n      },\n      title: {\n        text: \"\"\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: Object.keys(\n          props.data.data.stats.joining_termination_stats\n        )\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: \"Total Employment %\"\n        }\n      },\n      tooltip: {\n        pointFormat:\n          '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\n        shared: true\n      },\n      plotOptions: {\n        column: {\n          stacking: \"percent\"\n        }\n      },\n      series: [\n        {\n          name: \"Joining\",\n          color:\"#82E0AA\",\n          data: _.map(\n            props.data.data.stats.joining_termination_stats,\n            \"joining\"\n          )\n        },\n        {\n          name: \"Termination\",\n          color:\"#F5B7B1\",\n          data: _.map(\n            props.data.data.stats.joining_termination_stats,\n            \"termination\"\n          )\n        }\n      ]\n    });\n  };\n  render() {\n    return <div id=\"chart-container\"></div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport Highcharts from \"highcharts\";\nimport * as _ from \"lodash\";\nexport default class LeaveStats extends React.Component {\n  componentWillUpdate(nextProps) {\n    if(nextProps.flag){\n      if (nextProps && nextProps.data && nextProps.data.stats) {\n        this.highChartRender(_.filter(nextProps.data.stats, function(o) {{return o.day_type===\"WORKING_DAY\"}}));\n        nextProps.handleFlag();\n      }\n    }\n  }\n  componentDidMount(){\n    this.highChartRender();\n  }\n  highChartRender = (data) => {\n    Highcharts.chart({\n      chart: {\n        type: \"column\",\n        height:  50 + '%', \n        renderTo: \"chart-container-leave\"\n      },\n      title: {\n        text: \"\"\n      },\n      credits: {\n        enabled: false\n      },\n      xAxis: {\n        categories: _.map(data, o => `${o.date} ${o.day}`)\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: \"Total Employment %\"\n        }\n      },\n      tooltip: {\n        pointFormat:\n          '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\n        shared: true\n      },\n      plotOptions: {\n        column: {\n          stacking: \"percent\"\n        }\n      },\n      series: [\n        {\n            name: \"Approved\",\n            color:\"#69f0ae\",\n            data: _.map(data,\"approved\")\n        },\n        {\n            name: \"Pending\",\n            color:\"#ffff00\",\n            data: _.map(data,\"pending\")\n        },\n        {\n            name: \"Rejected\",\n            color:\"#f44336\",\n            data: _.map(data,\"rejected\")\n        },\n        {\n          name: \"Employees Present\",\n          color: \"#98AEDA\",\n          data: _.map(data,function(item){\n            return item.total_employees - item.approved;\n          })\n      }\n      ]\n    });\n  };\n  render() {\n    return <div id=\"chart-container-leave\"></div>;\n  }\n}","import React, { Component } from \"react\";\nimport Menu from \"../../../components/generic/Menu\";\nimport Header from \"../../../components/generic/Header\";\nimport { connect } from \"react-redux\";\nimport * as actions from '../../../redux/actions';\nimport HealthStats from \"../../../modules/healthStats/component/HealthStats\";\nimport HealthStatsSecretKey from \"../../../modules/healthStats/component/HealthStatsSecretKey\";\nimport * as actionsUsersList from \"../../../redux/generic/actions/usersList\";\nimport {notify} from '../../../services/notify';\nimport EmployeeJoiningTerminationStats from \"../../../modules/healthStats/component/EmployeeJoiningTerminationStats\";\nimport LeaveStats from \"../../../modules/healthStats/component/LeaveStats\";\nimport { getYearArray } from '../../../services/generic';\nimport { dateFormatter } from \"../../../helper/helper\";\n\n\nclass ContainerHealthStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state={\n            month:new Date().getMonth() + 1, \n            year: new Date().getYear() + 1900,\n        };\n        this.year=[];\n      }\n    componentWillMount() {\n        this.props.onIsAlreadyLogin();\n        this.props.healthStatsRequest();\n        this.props.requestStatsHistory();\n        this.props.healthStatsKeyListRequest();\n        this.year = getYearArray();\n        this.props.requestStatsLeaveHistory({year:this.state.year,month:this.state.month});\n    }\n    componentWillReceiveProps(props) {        \n        const {deleteHealthData, addSecretKeyData, deleteSecretKeyData, regenerateSecretKeyData} = props;\n        if (deleteHealthData.isError) {    \n            notify('Error !', deleteHealthData.message, 'error');\n          }\n        if (deleteHealthData.isSuccess) {\n            notify('Success !', deleteHealthData.message, 'success');\n          }\n        if (addSecretKeyData.isError) {    \n            notify('Error !', addSecretKeyData.message, 'error');\n          }\n        if (addSecretKeyData.isSuccess) {\n            notify('Success !', addSecretKeyData.message, 'success');\n          }\n        if (deleteSecretKeyData.isError) {    \n            notify('Error !', deleteSecretKeyData.message, 'error');\n          }\n        if (deleteSecretKeyData.isSuccess) {\n            notify('Success !', deleteSecretKeyData.message, 'success');\n          }\n        if (regenerateSecretKeyData.isError) {    \n            notify('Error !', regenerateSecretKeyData.message, 'error');\n          }\n        if (regenerateSecretKeyData.isSuccess) {\n            notify('Success !', regenerateSecretKeyData.message, 'success');\n          }\n    }\n    onChange=(e) => {\n        if(e.target.name===\"month\"){\n            this.setState({ month: e.target.value});\n            this.props.requestStatsLeaveHistory({month:e.target.value, year:this.state.year}); \n        }\n        if(e.target.name===\"year\"){\n            this.setState({ year: e.target.value});\n            this.props.requestStatsLeaveHistory({month:this.state.month, year:e.target.value});\n        }\n    } \n    render() {\n        return (\n            <div>\n                <Menu {...this.props} />\n                <div id=\"content\" className=\"app-content box-shadow-z0 content-health-stats\" role=\"main\">\n                    <Header\n                        pageTitle={\"App Health & Stats\"}\n                        showLoading={this.props.frontend.show_loading}\n                    />\n                    <div className=\"app-body\" id=\"view\">\n                        <div className=\"padding\">\n                        <div className=\"row m-10\">\n                            <div className=\"col-sm-12 bg-white\">\n                                <HealthStats {...this.props} />\n                            </div>\n                        </div>\n                        <div className=\"row m-10\">\n                            <div className=\"col-sm-12 secret-key-block\">\n                                <HealthStatsSecretKey {...this.props} />\n                            </div>\n                        </div>\n                        <div className=\"row m-10\">\n                            <div className=\"col-sm-6 b-health-stats bg-white\">\n                            <h5>Recruitment Stats</h5>\n                            <EmployeeJoiningTerminationStats data={this.props.statsHistory}/>\n                            </div>\n                            <div className=\"col-sm-6 b2-health-stats bg-white\">\n                                <div className=\"row leave_stats\">\n                                    <div className=\"col-sm-6\">\n                                        <h5>Leave Stats</h5>\n                                    </div>\n                                    <div className=\"col-sm-3\">\n                                        <select className=\"form-control\" onChange={this.onChange} value={this.state.year} name=\"year\">\n                                        {this.year.map((data,index)=><option key={index} value={data}>{data}</option>)}\n                                        </select>\n                                    </div>\n                                    <div className=\"col-sm-3\">\n                                        <select className=\"form-control\" onChange={this.onChange} value={this.state.month} name=\"month\">\n                                           {dateFormatter().months.map((item, index)=><option key={index} value={index + 1}>{item}</option>)}\n                                        </select>\n                                    </div>\n                                </div>\n                                <LeaveStats data={this.props.statsLeaveHistory.data} flag={this.props.statsLeaveHistory.flag} handleFlag={this.props.updateFlag}/>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    healthData: state.healthstats.healthStats.data,\n    deleteHealthData: state.healthstats.deleteHealthStats,\n    statsHistory: state.healthstats.statsHistory,\n    healthKeyData: state.healthstats.healthStatsSecretKeyList.data,\n    addSecretKeyData: state.healthstats.healthStatsAddSecretKey,\n    deleteSecretKeyData: state.healthstats.healthStatsDeleteSecretKey,\n    regenerateSecretKeyData: state.healthstats.healthStatsRegenerateSecretKey,\n    statsLeaveHistory: state.healthstats.statsLeaveHistory\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onIsAlreadyLogin: () => dispatch(actions.isAlreadyLogin()),\n    healthStatsRequest: () => dispatch(actions.requestHealthStats()),\n    deleteHealthStats: (year) => dispatch(actions.requestDeleteHealthStats(year)),\n    requestStatsHistory: () => dispatch(actions.requestStatsHistory()),\n    healthStatsKeyListRequest: () => dispatch(actions.requestHealthStatsSecretKeyList()),\n    healthStatsAddKeyRequest: (appname) => dispatch(actions.requestHealthStatsAddSecretKey(appname)),\n    healthStatsDeleteKeyRequest: (appid) => dispatch(actions.requestHealthStatsDeleteSecretKey(appid)),\n    healthStatsRegenerateKeyRequest: (appid) => dispatch(actions.requestHealthStatsRegenerateSecretKey(appid)),\n    requestStatsLeaveHistory: (payload) => dispatch(actions.requestStatsLeaveHistory(payload)),\n    updateFlag: () => dispatch(actions.updateFlag()) \n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerHealthStats);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputText = ({ className, ref, placeHolder, onchange, id, name, value, style }) => {\n  let classname = 'form-control ' + className;\n  return (\n    <input\n      type=\"text\"\n      className={classname}\n      ref={ref}\n      placeholder={placeHolder}\n      onChange={onchange}\n      id={id} required\n      name={name}\n      value={value}\n      style={style}\n    />\n  );\n};\n\nexport default InputText;\n\nInputText.propTypes = {\n  className: PropTypes.string,\n  placeHolder: PropTypes.string.isRequired,\n  onchange: PropTypes.func.isRequired,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  style: PropTypes.string\n};\n"],"sourceRoot":""}